// Code generated by protoc-gen-validate. DO NOT EDIT.
// source: chat/v1/guilds.proto

package v1

import (
	"bytes"
	"errors"
	"fmt"
	"net"
	"net/mail"
	"net/url"
	"regexp"
	"strings"
	"time"
	"unicode/utf8"

	"github.com/golang/protobuf/ptypes"
)

// ensure the imports are used
var (
	_ = bytes.MinRead
	_ = errors.New("")
	_ = fmt.Print
	_ = utf8.UTFMax
	_ = (*regexp.Regexp)(nil)
	_ = (*strings.Reader)(nil)
	_ = net.IPv4len
	_ = time.Duration(0)
	_ = (*url.URL)(nil)
	_ = (*mail.Address)(nil)
	_ = ptypes.DynamicAny{}
)

// define the regex for a UUID once up-front
var _guilds_uuidPattern = regexp.MustCompile("^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$")

// Validate checks the field values on CreateGuildRequest with the rules
// defined in the proto definition for this message. If any rules are
// violated, an error is returned.
func (m *CreateGuildRequest) Validate() error {
	if m == nil {
		return nil
	}

	if v, ok := interface{}(m.GetMetadata()).(interface{ Validate() error }); ok {
		if err := v.Validate(); err != nil {
			return CreateGuildRequestValidationError{
				field:  "Metadata",
				reason: "embedded message failed validation",
				cause:  err,
			}
		}
	}

	// no validation rules for GuildName

	// no validation rules for PictureUrl

	return nil
}

// CreateGuildRequestValidationError is the validation error returned by
// CreateGuildRequest.Validate if the designated constraints aren't met.
type CreateGuildRequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e CreateGuildRequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e CreateGuildRequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e CreateGuildRequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e CreateGuildRequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e CreateGuildRequestValidationError) ErrorName() string {
	return "CreateGuildRequestValidationError"
}

// Error satisfies the builtin error interface
func (e CreateGuildRequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sCreateGuildRequest.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = CreateGuildRequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = CreateGuildRequestValidationError{}

// Validate checks the field values on CreateGuildResponse with the rules
// defined in the proto definition for this message. If any rules are
// violated, an error is returned.
func (m *CreateGuildResponse) Validate() error {
	if m == nil {
		return nil
	}

	// no validation rules for GuildId

	return nil
}

// CreateGuildResponseValidationError is the validation error returned by
// CreateGuildResponse.Validate if the designated constraints aren't met.
type CreateGuildResponseValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e CreateGuildResponseValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e CreateGuildResponseValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e CreateGuildResponseValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e CreateGuildResponseValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e CreateGuildResponseValidationError) ErrorName() string {
	return "CreateGuildResponseValidationError"
}

// Error satisfies the builtin error interface
func (e CreateGuildResponseValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sCreateGuildResponse.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = CreateGuildResponseValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = CreateGuildResponseValidationError{}

// Validate checks the field values on CreateInviteRequest with the rules
// defined in the proto definition for this message. If any rules are
// violated, an error is returned.
func (m *CreateInviteRequest) Validate() error {
	if m == nil {
		return nil
	}

	// no validation rules for GuildId

	// no validation rules for Name

	// no validation rules for PossibleUses

	return nil
}

// CreateInviteRequestValidationError is the validation error returned by
// CreateInviteRequest.Validate if the designated constraints aren't met.
type CreateInviteRequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e CreateInviteRequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e CreateInviteRequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e CreateInviteRequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e CreateInviteRequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e CreateInviteRequestValidationError) ErrorName() string {
	return "CreateInviteRequestValidationError"
}

// Error satisfies the builtin error interface
func (e CreateInviteRequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sCreateInviteRequest.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = CreateInviteRequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = CreateInviteRequestValidationError{}

// Validate checks the field values on CreateInviteResponse with the rules
// defined in the proto definition for this message. If any rules are
// violated, an error is returned.
func (m *CreateInviteResponse) Validate() error {
	if m == nil {
		return nil
	}

	// no validation rules for Name

	return nil
}

// CreateInviteResponseValidationError is the validation error returned by
// CreateInviteResponse.Validate if the designated constraints aren't met.
type CreateInviteResponseValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e CreateInviteResponseValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e CreateInviteResponseValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e CreateInviteResponseValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e CreateInviteResponseValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e CreateInviteResponseValidationError) ErrorName() string {
	return "CreateInviteResponseValidationError"
}

// Error satisfies the builtin error interface
func (e CreateInviteResponseValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sCreateInviteResponse.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = CreateInviteResponseValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = CreateInviteResponseValidationError{}

// Validate checks the field values on GetGuildListRequest with the rules
// defined in the proto definition for this message. If any rules are
// violated, an error is returned.
func (m *GetGuildListRequest) Validate() error {
	if m == nil {
		return nil
	}

	return nil
}

// GetGuildListRequestValidationError is the validation error returned by
// GetGuildListRequest.Validate if the designated constraints aren't met.
type GetGuildListRequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e GetGuildListRequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e GetGuildListRequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e GetGuildListRequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e GetGuildListRequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e GetGuildListRequestValidationError) ErrorName() string {
	return "GetGuildListRequestValidationError"
}

// Error satisfies the builtin error interface
func (e GetGuildListRequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sGetGuildListRequest.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = GetGuildListRequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = GetGuildListRequestValidationError{}

// Validate checks the field values on GetGuildListResponse with the rules
// defined in the proto definition for this message. If any rules are
// violated, an error is returned.
func (m *GetGuildListResponse) Validate() error {
	if m == nil {
		return nil
	}

	for idx, item := range m.GetGuilds() {
		_, _ = idx, item

		if v, ok := interface{}(item).(interface{ Validate() error }); ok {
			if err := v.Validate(); err != nil {
				return GetGuildListResponseValidationError{
					field:  fmt.Sprintf("Guilds[%v]", idx),
					reason: "embedded message failed validation",
					cause:  err,
				}
			}
		}

	}

	return nil
}

// GetGuildListResponseValidationError is the validation error returned by
// GetGuildListResponse.Validate if the designated constraints aren't met.
type GetGuildListResponseValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e GetGuildListResponseValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e GetGuildListResponseValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e GetGuildListResponseValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e GetGuildListResponseValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e GetGuildListResponseValidationError) ErrorName() string {
	return "GetGuildListResponseValidationError"
}

// Error satisfies the builtin error interface
func (e GetGuildListResponseValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sGetGuildListResponse.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = GetGuildListResponseValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = GetGuildListResponseValidationError{}

// Validate checks the field values on GetGuildRequest with the rules defined
// in the proto definition for this message. If any rules are violated, an
// error is returned.
func (m *GetGuildRequest) Validate() error {
	if m == nil {
		return nil
	}

	// no validation rules for GuildId

	return nil
}

// GetGuildRequestValidationError is the validation error returned by
// GetGuildRequest.Validate if the designated constraints aren't met.
type GetGuildRequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e GetGuildRequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e GetGuildRequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e GetGuildRequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e GetGuildRequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e GetGuildRequestValidationError) ErrorName() string { return "GetGuildRequestValidationError" }

// Error satisfies the builtin error interface
func (e GetGuildRequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sGetGuildRequest.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = GetGuildRequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = GetGuildRequestValidationError{}

// Validate checks the field values on GetGuildResponse with the rules defined
// in the proto definition for this message. If any rules are violated, an
// error is returned.
func (m *GetGuildResponse) Validate() error {
	if m == nil {
		return nil
	}

	if v, ok := interface{}(m.GetMetadata()).(interface{ Validate() error }); ok {
		if err := v.Validate(); err != nil {
			return GetGuildResponseValidationError{
				field:  "Metadata",
				reason: "embedded message failed validation",
				cause:  err,
			}
		}
	}

	// no validation rules for GuildName

	// no validation rules for GuildOwner

	// no validation rules for GuildPicture

	return nil
}

// GetGuildResponseValidationError is the validation error returned by
// GetGuildResponse.Validate if the designated constraints aren't met.
type GetGuildResponseValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e GetGuildResponseValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e GetGuildResponseValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e GetGuildResponseValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e GetGuildResponseValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e GetGuildResponseValidationError) ErrorName() string { return "GetGuildResponseValidationError" }

// Error satisfies the builtin error interface
func (e GetGuildResponseValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sGetGuildResponse.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = GetGuildResponseValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = GetGuildResponseValidationError{}

// Validate checks the field values on GetGuildInvitesRequest with the rules
// defined in the proto definition for this message. If any rules are
// violated, an error is returned.
func (m *GetGuildInvitesRequest) Validate() error {
	if m == nil {
		return nil
	}

	// no validation rules for GuildId

	return nil
}

// GetGuildInvitesRequestValidationError is the validation error returned by
// GetGuildInvitesRequest.Validate if the designated constraints aren't met.
type GetGuildInvitesRequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e GetGuildInvitesRequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e GetGuildInvitesRequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e GetGuildInvitesRequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e GetGuildInvitesRequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e GetGuildInvitesRequestValidationError) ErrorName() string {
	return "GetGuildInvitesRequestValidationError"
}

// Error satisfies the builtin error interface
func (e GetGuildInvitesRequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sGetGuildInvitesRequest.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = GetGuildInvitesRequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = GetGuildInvitesRequestValidationError{}

// Validate checks the field values on GetGuildInvitesResponse with the rules
// defined in the proto definition for this message. If any rules are
// violated, an error is returned.
func (m *GetGuildInvitesResponse) Validate() error {
	if m == nil {
		return nil
	}

	for idx, item := range m.GetInvites() {
		_, _ = idx, item

		if v, ok := interface{}(item).(interface{ Validate() error }); ok {
			if err := v.Validate(); err != nil {
				return GetGuildInvitesResponseValidationError{
					field:  fmt.Sprintf("Invites[%v]", idx),
					reason: "embedded message failed validation",
					cause:  err,
				}
			}
		}

	}

	return nil
}

// GetGuildInvitesResponseValidationError is the validation error returned by
// GetGuildInvitesResponse.Validate if the designated constraints aren't met.
type GetGuildInvitesResponseValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e GetGuildInvitesResponseValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e GetGuildInvitesResponseValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e GetGuildInvitesResponseValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e GetGuildInvitesResponseValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e GetGuildInvitesResponseValidationError) ErrorName() string {
	return "GetGuildInvitesResponseValidationError"
}

// Error satisfies the builtin error interface
func (e GetGuildInvitesResponseValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sGetGuildInvitesResponse.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = GetGuildInvitesResponseValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = GetGuildInvitesResponseValidationError{}

// Validate checks the field values on GetGuildMembersRequest with the rules
// defined in the proto definition for this message. If any rules are
// violated, an error is returned.
func (m *GetGuildMembersRequest) Validate() error {
	if m == nil {
		return nil
	}

	// no validation rules for GuildId

	return nil
}

// GetGuildMembersRequestValidationError is the validation error returned by
// GetGuildMembersRequest.Validate if the designated constraints aren't met.
type GetGuildMembersRequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e GetGuildMembersRequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e GetGuildMembersRequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e GetGuildMembersRequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e GetGuildMembersRequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e GetGuildMembersRequestValidationError) ErrorName() string {
	return "GetGuildMembersRequestValidationError"
}

// Error satisfies the builtin error interface
func (e GetGuildMembersRequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sGetGuildMembersRequest.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = GetGuildMembersRequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = GetGuildMembersRequestValidationError{}

// Validate checks the field values on GetGuildMembersResponse with the rules
// defined in the proto definition for this message. If any rules are
// violated, an error is returned.
func (m *GetGuildMembersResponse) Validate() error {
	if m == nil {
		return nil
	}

	return nil
}

// GetGuildMembersResponseValidationError is the validation error returned by
// GetGuildMembersResponse.Validate if the designated constraints aren't met.
type GetGuildMembersResponseValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e GetGuildMembersResponseValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e GetGuildMembersResponseValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e GetGuildMembersResponseValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e GetGuildMembersResponseValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e GetGuildMembersResponseValidationError) ErrorName() string {
	return "GetGuildMembersResponseValidationError"
}

// Error satisfies the builtin error interface
func (e GetGuildMembersResponseValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sGetGuildMembersResponse.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = GetGuildMembersResponseValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = GetGuildMembersResponseValidationError{}

// Validate checks the field values on UpdateGuildInformationRequest with the
// rules defined in the proto definition for this message. If any rules are
// violated, an error is returned.
func (m *UpdateGuildInformationRequest) Validate() error {
	if m == nil {
		return nil
	}

	// no validation rules for GuildId

	// no validation rules for NewGuildName

	// no validation rules for UpdateGuildName

	// no validation rules for NewGuildPicture

	// no validation rules for UpdateGuildPicture

	if v, ok := interface{}(m.GetMetadata()).(interface{ Validate() error }); ok {
		if err := v.Validate(); err != nil {
			return UpdateGuildInformationRequestValidationError{
				field:  "Metadata",
				reason: "embedded message failed validation",
				cause:  err,
			}
		}
	}

	// no validation rules for UpdateMetadata

	return nil
}

// UpdateGuildInformationRequestValidationError is the validation error
// returned by UpdateGuildInformationRequest.Validate if the designated
// constraints aren't met.
type UpdateGuildInformationRequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e UpdateGuildInformationRequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e UpdateGuildInformationRequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e UpdateGuildInformationRequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e UpdateGuildInformationRequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e UpdateGuildInformationRequestValidationError) ErrorName() string {
	return "UpdateGuildInformationRequestValidationError"
}

// Error satisfies the builtin error interface
func (e UpdateGuildInformationRequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sUpdateGuildInformationRequest.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = UpdateGuildInformationRequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = UpdateGuildInformationRequestValidationError{}

// Validate checks the field values on DeleteGuildRequest with the rules
// defined in the proto definition for this message. If any rules are
// violated, an error is returned.
func (m *DeleteGuildRequest) Validate() error {
	if m == nil {
		return nil
	}

	// no validation rules for GuildId

	return nil
}

// DeleteGuildRequestValidationError is the validation error returned by
// DeleteGuildRequest.Validate if the designated constraints aren't met.
type DeleteGuildRequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e DeleteGuildRequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e DeleteGuildRequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e DeleteGuildRequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e DeleteGuildRequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e DeleteGuildRequestValidationError) ErrorName() string {
	return "DeleteGuildRequestValidationError"
}

// Error satisfies the builtin error interface
func (e DeleteGuildRequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sDeleteGuildRequest.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = DeleteGuildRequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = DeleteGuildRequestValidationError{}

// Validate checks the field values on DeleteInviteRequest with the rules
// defined in the proto definition for this message. If any rules are
// violated, an error is returned.
func (m *DeleteInviteRequest) Validate() error {
	if m == nil {
		return nil
	}

	// no validation rules for GuildId

	// no validation rules for InviteId

	return nil
}

// DeleteInviteRequestValidationError is the validation error returned by
// DeleteInviteRequest.Validate if the designated constraints aren't met.
type DeleteInviteRequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e DeleteInviteRequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e DeleteInviteRequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e DeleteInviteRequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e DeleteInviteRequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e DeleteInviteRequestValidationError) ErrorName() string {
	return "DeleteInviteRequestValidationError"
}

// Error satisfies the builtin error interface
func (e DeleteInviteRequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sDeleteInviteRequest.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = DeleteInviteRequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = DeleteInviteRequestValidationError{}

// Validate checks the field values on JoinGuildRequest with the rules defined
// in the proto definition for this message. If any rules are violated, an
// error is returned.
func (m *JoinGuildRequest) Validate() error {
	if m == nil {
		return nil
	}

	// no validation rules for InviteId

	return nil
}

// JoinGuildRequestValidationError is the validation error returned by
// JoinGuildRequest.Validate if the designated constraints aren't met.
type JoinGuildRequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e JoinGuildRequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e JoinGuildRequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e JoinGuildRequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e JoinGuildRequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e JoinGuildRequestValidationError) ErrorName() string { return "JoinGuildRequestValidationError" }

// Error satisfies the builtin error interface
func (e JoinGuildRequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sJoinGuildRequest.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = JoinGuildRequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = JoinGuildRequestValidationError{}

// Validate checks the field values on JoinGuildResponse with the rules defined
// in the proto definition for this message. If any rules are violated, an
// error is returned.
func (m *JoinGuildResponse) Validate() error {
	if m == nil {
		return nil
	}

	// no validation rules for GuildId

	return nil
}

// JoinGuildResponseValidationError is the validation error returned by
// JoinGuildResponse.Validate if the designated constraints aren't met.
type JoinGuildResponseValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e JoinGuildResponseValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e JoinGuildResponseValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e JoinGuildResponseValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e JoinGuildResponseValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e JoinGuildResponseValidationError) ErrorName() string {
	return "JoinGuildResponseValidationError"
}

// Error satisfies the builtin error interface
func (e JoinGuildResponseValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sJoinGuildResponse.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = JoinGuildResponseValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = JoinGuildResponseValidationError{}

// Validate checks the field values on PreviewGuildRequest with the rules
// defined in the proto definition for this message. If any rules are
// violated, an error is returned.
func (m *PreviewGuildRequest) Validate() error {
	if m == nil {
		return nil
	}

	// no validation rules for InviteId

	return nil
}

// PreviewGuildRequestValidationError is the validation error returned by
// PreviewGuildRequest.Validate if the designated constraints aren't met.
type PreviewGuildRequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e PreviewGuildRequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e PreviewGuildRequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e PreviewGuildRequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e PreviewGuildRequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e PreviewGuildRequestValidationError) ErrorName() string {
	return "PreviewGuildRequestValidationError"
}

// Error satisfies the builtin error interface
func (e PreviewGuildRequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sPreviewGuildRequest.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = PreviewGuildRequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = PreviewGuildRequestValidationError{}

// Validate checks the field values on PreviewGuildResponse with the rules
// defined in the proto definition for this message. If any rules are
// violated, an error is returned.
func (m *PreviewGuildResponse) Validate() error {
	if m == nil {
		return nil
	}

	// no validation rules for Name

	// no validation rules for Avatar

	// no validation rules for MemberCount

	return nil
}

// PreviewGuildResponseValidationError is the validation error returned by
// PreviewGuildResponse.Validate if the designated constraints aren't met.
type PreviewGuildResponseValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e PreviewGuildResponseValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e PreviewGuildResponseValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e PreviewGuildResponseValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e PreviewGuildResponseValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e PreviewGuildResponseValidationError) ErrorName() string {
	return "PreviewGuildResponseValidationError"
}

// Error satisfies the builtin error interface
func (e PreviewGuildResponseValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sPreviewGuildResponse.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = PreviewGuildResponseValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = PreviewGuildResponseValidationError{}

// Validate checks the field values on LeaveGuildRequest with the rules defined
// in the proto definition for this message. If any rules are violated, an
// error is returned.
func (m *LeaveGuildRequest) Validate() error {
	if m == nil {
		return nil
	}

	// no validation rules for GuildId

	return nil
}

// LeaveGuildRequestValidationError is the validation error returned by
// LeaveGuildRequest.Validate if the designated constraints aren't met.
type LeaveGuildRequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e LeaveGuildRequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e LeaveGuildRequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e LeaveGuildRequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e LeaveGuildRequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e LeaveGuildRequestValidationError) ErrorName() string {
	return "LeaveGuildRequestValidationError"
}

// Error satisfies the builtin error interface
func (e LeaveGuildRequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sLeaveGuildRequest.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = LeaveGuildRequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = LeaveGuildRequestValidationError{}

// Validate checks the field values on AddGuildToGuildListRequest with the
// rules defined in the proto definition for this message. If any rules are
// violated, an error is returned.
func (m *AddGuildToGuildListRequest) Validate() error {
	if m == nil {
		return nil
	}

	// no validation rules for GuildId

	// no validation rules for Homeserver

	return nil
}

// AddGuildToGuildListRequestValidationError is the validation error returned
// by AddGuildToGuildListRequest.Validate if the designated constraints aren't met.
type AddGuildToGuildListRequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e AddGuildToGuildListRequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e AddGuildToGuildListRequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e AddGuildToGuildListRequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e AddGuildToGuildListRequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e AddGuildToGuildListRequestValidationError) ErrorName() string {
	return "AddGuildToGuildListRequestValidationError"
}

// Error satisfies the builtin error interface
func (e AddGuildToGuildListRequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sAddGuildToGuildListRequest.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = AddGuildToGuildListRequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = AddGuildToGuildListRequestValidationError{}

// Validate checks the field values on AddGuildToGuildListResponse with the
// rules defined in the proto definition for this message. If any rules are
// violated, an error is returned.
func (m *AddGuildToGuildListResponse) Validate() error {
	if m == nil {
		return nil
	}

	return nil
}

// AddGuildToGuildListResponseValidationError is the validation error returned
// by AddGuildToGuildListResponse.Validate if the designated constraints
// aren't met.
type AddGuildToGuildListResponseValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e AddGuildToGuildListResponseValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e AddGuildToGuildListResponseValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e AddGuildToGuildListResponseValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e AddGuildToGuildListResponseValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e AddGuildToGuildListResponseValidationError) ErrorName() string {
	return "AddGuildToGuildListResponseValidationError"
}

// Error satisfies the builtin error interface
func (e AddGuildToGuildListResponseValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sAddGuildToGuildListResponse.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = AddGuildToGuildListResponseValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = AddGuildToGuildListResponseValidationError{}

// Validate checks the field values on RemoveGuildFromGuildListRequest with the
// rules defined in the proto definition for this message. If any rules are
// violated, an error is returned.
func (m *RemoveGuildFromGuildListRequest) Validate() error {
	if m == nil {
		return nil
	}

	// no validation rules for GuildId

	// no validation rules for Homeserver

	return nil
}

// RemoveGuildFromGuildListRequestValidationError is the validation error
// returned by RemoveGuildFromGuildListRequest.Validate if the designated
// constraints aren't met.
type RemoveGuildFromGuildListRequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e RemoveGuildFromGuildListRequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e RemoveGuildFromGuildListRequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e RemoveGuildFromGuildListRequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e RemoveGuildFromGuildListRequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e RemoveGuildFromGuildListRequestValidationError) ErrorName() string {
	return "RemoveGuildFromGuildListRequestValidationError"
}

// Error satisfies the builtin error interface
func (e RemoveGuildFromGuildListRequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sRemoveGuildFromGuildListRequest.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = RemoveGuildFromGuildListRequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = RemoveGuildFromGuildListRequestValidationError{}

// Validate checks the field values on RemoveGuildFromGuildListResponse with
// the rules defined in the proto definition for this message. If any rules
// are violated, an error is returned.
func (m *RemoveGuildFromGuildListResponse) Validate() error {
	if m == nil {
		return nil
	}

	return nil
}

// RemoveGuildFromGuildListResponseValidationError is the validation error
// returned by RemoveGuildFromGuildListResponse.Validate if the designated
// constraints aren't met.
type RemoveGuildFromGuildListResponseValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e RemoveGuildFromGuildListResponseValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e RemoveGuildFromGuildListResponseValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e RemoveGuildFromGuildListResponseValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e RemoveGuildFromGuildListResponseValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e RemoveGuildFromGuildListResponseValidationError) ErrorName() string {
	return "RemoveGuildFromGuildListResponseValidationError"
}

// Error satisfies the builtin error interface
func (e RemoveGuildFromGuildListResponseValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sRemoveGuildFromGuildListResponse.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = RemoveGuildFromGuildListResponseValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = RemoveGuildFromGuildListResponseValidationError{}

// Validate checks the field values on GetGuildListResponse_GuildListEntry with
// the rules defined in the proto definition for this message. If any rules
// are violated, an error is returned.
func (m *GetGuildListResponse_GuildListEntry) Validate() error {
	if m == nil {
		return nil
	}

	// no validation rules for GuildId

	// no validation rules for Host

	return nil
}

// GetGuildListResponse_GuildListEntryValidationError is the validation error
// returned by GetGuildListResponse_GuildListEntry.Validate if the designated
// constraints aren't met.
type GetGuildListResponse_GuildListEntryValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e GetGuildListResponse_GuildListEntryValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e GetGuildListResponse_GuildListEntryValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e GetGuildListResponse_GuildListEntryValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e GetGuildListResponse_GuildListEntryValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e GetGuildListResponse_GuildListEntryValidationError) ErrorName() string {
	return "GetGuildListResponse_GuildListEntryValidationError"
}

// Error satisfies the builtin error interface
func (e GetGuildListResponse_GuildListEntryValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sGetGuildListResponse_GuildListEntry.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = GetGuildListResponse_GuildListEntryValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = GetGuildListResponse_GuildListEntryValidationError{}

// Validate checks the field values on GetGuildInvitesResponse_Invite with the
// rules defined in the proto definition for this message. If any rules are
// violated, an error is returned.
func (m *GetGuildInvitesResponse_Invite) Validate() error {
	if m == nil {
		return nil
	}

	// no validation rules for InviteId

	// no validation rules for PossibleUses

	// no validation rules for UseCount

	return nil
}

// GetGuildInvitesResponse_InviteValidationError is the validation error
// returned by GetGuildInvitesResponse_Invite.Validate if the designated
// constraints aren't met.
type GetGuildInvitesResponse_InviteValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e GetGuildInvitesResponse_InviteValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e GetGuildInvitesResponse_InviteValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e GetGuildInvitesResponse_InviteValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e GetGuildInvitesResponse_InviteValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e GetGuildInvitesResponse_InviteValidationError) ErrorName() string {
	return "GetGuildInvitesResponse_InviteValidationError"
}

// Error satisfies the builtin error interface
func (e GetGuildInvitesResponse_InviteValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sGetGuildInvitesResponse_Invite.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = GetGuildInvitesResponse_InviteValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = GetGuildInvitesResponse_InviteValidationError{}
