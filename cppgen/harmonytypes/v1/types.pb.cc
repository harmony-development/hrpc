// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: harmonytypes/v1/types.proto

#include "harmonytypes/v1/types.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fany_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Any_google_2fprotobuf_2fany_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fempty_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Empty_google_2fprotobuf_2fempty_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_harmonytypes_2fv1_2ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Action_harmonytypes_2fv1_2ftypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_harmonytypes_2fv1_2ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Attachment_harmonytypes_2fv1_2ftypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_harmonytypes_2fv1_2ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_Embed_harmonytypes_2fv1_2ftypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_harmonytypes_2fv1_2ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_EmbedField_harmonytypes_2fv1_2ftypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_harmonytypes_2fv1_2ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EmbedHeading_harmonytypes_2fv1_2ftypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_harmonytypes_2fv1_2ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_HarmonyMethodMetadata_harmonytypes_2fv1_2ftypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_harmonytypes_2fv1_2ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Metadata_harmonytypes_2fv1_2ftypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_harmonytypes_2fv1_2ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Metadata_ExtensionEntry_DoNotUse_harmonytypes_2fv1_2ftypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_harmonytypes_2fv1_2ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Override_harmonytypes_2fv1_2ftypes_2eproto;
namespace protocol {
namespace harmonytypes {
namespace v1 {
class HarmonyMethodMetadataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<HarmonyMethodMetadata> _instance;
} _HarmonyMethodMetadata_default_instance_;
class OverrideDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Override> _instance;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr user_defined_;
  const PROTOBUF_NAMESPACE_ID::Empty* webhook_;
  const PROTOBUF_NAMESPACE_ID::Empty* system_plurality_;
  const PROTOBUF_NAMESPACE_ID::Empty* system_message_;
  const PROTOBUF_NAMESPACE_ID::Empty* bridge_;
} _Override_default_instance_;
class ActionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Action> _instance;
} _Action_default_instance_;
class EmbedHeadingDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EmbedHeading> _instance;
} _EmbedHeading_default_instance_;
class EmbedFieldDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EmbedField> _instance;
} _EmbedField_default_instance_;
class EmbedDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Embed> _instance;
} _Embed_default_instance_;
class AttachmentDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Attachment> _instance;
} _Attachment_default_instance_;
class Metadata_ExtensionEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Metadata_ExtensionEntry_DoNotUse> _instance;
} _Metadata_ExtensionEntry_DoNotUse_default_instance_;
class MetadataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Metadata> _instance;
} _Metadata_default_instance_;
class MessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message> _instance;
} _Message_default_instance_;
}  // namespace v1
}  // namespace harmonytypes
}  // namespace protocol
static void InitDefaultsscc_info_Action_harmonytypes_2fv1_2ftypes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::harmonytypes::v1::_Action_default_instance_;
    new (ptr) ::protocol::harmonytypes::v1::Action();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::harmonytypes::v1::Action::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Action_harmonytypes_2fv1_2ftypes_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Action_harmonytypes_2fv1_2ftypes_2eproto}, {}};

static void InitDefaultsscc_info_Attachment_harmonytypes_2fv1_2ftypes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::harmonytypes::v1::_Attachment_default_instance_;
    new (ptr) ::protocol::harmonytypes::v1::Attachment();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::harmonytypes::v1::Attachment::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Attachment_harmonytypes_2fv1_2ftypes_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Attachment_harmonytypes_2fv1_2ftypes_2eproto}, {}};

static void InitDefaultsscc_info_Embed_harmonytypes_2fv1_2ftypes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::harmonytypes::v1::_Embed_default_instance_;
    new (ptr) ::protocol::harmonytypes::v1::Embed();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::harmonytypes::v1::Embed::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_Embed_harmonytypes_2fv1_2ftypes_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_Embed_harmonytypes_2fv1_2ftypes_2eproto}, {
      &scc_info_EmbedHeading_harmonytypes_2fv1_2ftypes_2eproto.base,
      &scc_info_EmbedField_harmonytypes_2fv1_2ftypes_2eproto.base,
      &scc_info_Action_harmonytypes_2fv1_2ftypes_2eproto.base,}};

static void InitDefaultsscc_info_EmbedField_harmonytypes_2fv1_2ftypes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::harmonytypes::v1::_EmbedField_default_instance_;
    new (ptr) ::protocol::harmonytypes::v1::EmbedField();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::harmonytypes::v1::EmbedField::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_EmbedField_harmonytypes_2fv1_2ftypes_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_EmbedField_harmonytypes_2fv1_2ftypes_2eproto}, {
      &scc_info_Action_harmonytypes_2fv1_2ftypes_2eproto.base,}};

static void InitDefaultsscc_info_EmbedHeading_harmonytypes_2fv1_2ftypes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::harmonytypes::v1::_EmbedHeading_default_instance_;
    new (ptr) ::protocol::harmonytypes::v1::EmbedHeading();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::harmonytypes::v1::EmbedHeading::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EmbedHeading_harmonytypes_2fv1_2ftypes_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_EmbedHeading_harmonytypes_2fv1_2ftypes_2eproto}, {}};

static void InitDefaultsscc_info_HarmonyMethodMetadata_harmonytypes_2fv1_2ftypes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::harmonytypes::v1::_HarmonyMethodMetadata_default_instance_;
    new (ptr) ::protocol::harmonytypes::v1::HarmonyMethodMetadata();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::harmonytypes::v1::HarmonyMethodMetadata::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_HarmonyMethodMetadata_harmonytypes_2fv1_2ftypes_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_HarmonyMethodMetadata_harmonytypes_2fv1_2ftypes_2eproto}, {}};

static void InitDefaultsscc_info_Message_harmonytypes_2fv1_2ftypes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::harmonytypes::v1::_Message_default_instance_;
    new (ptr) ::protocol::harmonytypes::v1::Message();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::harmonytypes::v1::Message::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<6> scc_info_Message_harmonytypes_2fv1_2ftypes_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 6, 0, InitDefaultsscc_info_Message_harmonytypes_2fv1_2ftypes_2eproto}, {
      &scc_info_Metadata_harmonytypes_2fv1_2ftypes_2eproto.base,
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,
      &scc_info_Embed_harmonytypes_2fv1_2ftypes_2eproto.base,
      &scc_info_Action_harmonytypes_2fv1_2ftypes_2eproto.base,
      &scc_info_Attachment_harmonytypes_2fv1_2ftypes_2eproto.base,
      &scc_info_Override_harmonytypes_2fv1_2ftypes_2eproto.base,}};

static void InitDefaultsscc_info_Metadata_harmonytypes_2fv1_2ftypes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::harmonytypes::v1::_Metadata_default_instance_;
    new (ptr) ::protocol::harmonytypes::v1::Metadata();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::harmonytypes::v1::Metadata::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Metadata_harmonytypes_2fv1_2ftypes_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Metadata_harmonytypes_2fv1_2ftypes_2eproto}, {
      &scc_info_Metadata_ExtensionEntry_DoNotUse_harmonytypes_2fv1_2ftypes_2eproto.base,}};

static void InitDefaultsscc_info_Metadata_ExtensionEntry_DoNotUse_harmonytypes_2fv1_2ftypes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::harmonytypes::v1::_Metadata_ExtensionEntry_DoNotUse_default_instance_;
    new (ptr) ::protocol::harmonytypes::v1::Metadata_ExtensionEntry_DoNotUse();
  }
  ::protocol::harmonytypes::v1::Metadata_ExtensionEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Metadata_ExtensionEntry_DoNotUse_harmonytypes_2fv1_2ftypes_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Metadata_ExtensionEntry_DoNotUse_harmonytypes_2fv1_2ftypes_2eproto}, {
      &scc_info_Any_google_2fprotobuf_2fany_2eproto.base,}};

static void InitDefaultsscc_info_Override_harmonytypes_2fv1_2ftypes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::harmonytypes::v1::_Override_default_instance_;
    new (ptr) ::protocol::harmonytypes::v1::Override();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::harmonytypes::v1::Override::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Override_harmonytypes_2fv1_2ftypes_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Override_harmonytypes_2fv1_2ftypes_2eproto}, {
      &scc_info_Empty_google_2fprotobuf_2fempty_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_harmonytypes_2fv1_2ftypes_2eproto[10];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_harmonytypes_2fv1_2ftypes_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_harmonytypes_2fv1_2ftypes_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_harmonytypes_2fv1_2ftypes_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::HarmonyMethodMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::HarmonyMethodMetadata, requires_authentication_),
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::HarmonyMethodMetadata, requires_local_),
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::HarmonyMethodMetadata, requires_permission_node_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::Override, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::Override, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::Override, name_),
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::Override, avatar_),
  offsetof(::protocol::harmonytypes::v1::OverrideDefaultTypeInternal, user_defined_),
  offsetof(::protocol::harmonytypes::v1::OverrideDefaultTypeInternal, webhook_),
  offsetof(::protocol::harmonytypes::v1::OverrideDefaultTypeInternal, system_plurality_),
  offsetof(::protocol::harmonytypes::v1::OverrideDefaultTypeInternal, system_message_),
  offsetof(::protocol::harmonytypes::v1::OverrideDefaultTypeInternal, bridge_),
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::Override, reason_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::Action, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::Action, text_),
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::Action, url_),
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::Action, id_),
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::Action, type_),
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::Action, presentation_),
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::Action, children_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::EmbedHeading, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::EmbedHeading, text_),
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::EmbedHeading, subtext_),
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::EmbedHeading, url_),
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::EmbedHeading, icon_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::EmbedField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::EmbedField, title_),
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::EmbedField, subtitle_),
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::EmbedField, body_),
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::EmbedField, image_url_),
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::EmbedField, presentation_),
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::EmbedField, actions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::Embed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::Embed, title_),
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::Embed, body_),
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::Embed, color_),
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::Embed, header_),
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::Embed, footer_),
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::Embed, fields_),
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::Embed, actions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::Attachment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::Attachment, id_),
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::Attachment, name_),
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::Attachment, type_),
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::Attachment, size_),
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::Metadata_ExtensionEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::Metadata_ExtensionEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::Metadata_ExtensionEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::Metadata_ExtensionEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::Metadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::Metadata, kind_),
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::Metadata, extension_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::Message, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::Message, metadata_),
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::Message, guild_id_),
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::Message, channel_id_),
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::Message, message_id_),
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::Message, author_id_),
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::Message, created_at_),
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::Message, edited_at_),
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::Message, content_),
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::Message, embeds_),
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::Message, actions_),
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::Message, attachments_),
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::Message, in_reply_to_),
  PROTOBUF_FIELD_OFFSET(::protocol::harmonytypes::v1::Message, overrides_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::protocol::harmonytypes::v1::HarmonyMethodMetadata)},
  { 8, -1, sizeof(::protocol::harmonytypes::v1::Override)},
  { 21, -1, sizeof(::protocol::harmonytypes::v1::Action)},
  { 32, -1, sizeof(::protocol::harmonytypes::v1::EmbedHeading)},
  { 41, -1, sizeof(::protocol::harmonytypes::v1::EmbedField)},
  { 52, -1, sizeof(::protocol::harmonytypes::v1::Embed)},
  { 64, -1, sizeof(::protocol::harmonytypes::v1::Attachment)},
  { 73, 80, sizeof(::protocol::harmonytypes::v1::Metadata_ExtensionEntry_DoNotUse)},
  { 82, -1, sizeof(::protocol::harmonytypes::v1::Metadata)},
  { 89, -1, sizeof(::protocol::harmonytypes::v1::Message)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::harmonytypes::v1::_HarmonyMethodMetadata_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::harmonytypes::v1::_Override_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::harmonytypes::v1::_Action_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::harmonytypes::v1::_EmbedHeading_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::harmonytypes::v1::_EmbedField_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::harmonytypes::v1::_Embed_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::harmonytypes::v1::_Attachment_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::harmonytypes::v1::_Metadata_ExtensionEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::harmonytypes::v1::_Metadata_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::harmonytypes::v1::_Message_default_instance_),
};

const char descriptor_table_protodef_harmonytypes_2fv1_2ftypes_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\033harmonytypes/v1/types.proto\022\030protocol."
  "harmonytypes.v1\032\037google/protobuf/timesta"
  "mp.proto\032\033google/protobuf/empty.proto\032\031g"
  "oogle/protobuf/any.proto\032 google/protobu"
  "f/descriptor.proto\"r\n\025HarmonyMethodMetad"
  "ata\022\037\n\027requires_authentication\030\001 \001(\010\022\026\n\016"
  "requires_local\030\002 \001(\010\022 \n\030requires_permiss"
  "ion_node\030\003 \001(\t\"\205\002\n\010Override\022\014\n\004name\030\001 \001("
  "\t\022\016\n\006avatar\030\002 \001(\t\022\026\n\014user_defined\030\003 \001(\tH"
  "\000\022)\n\007webhook\030\004 \001(\0132\026.google.protobuf.Emp"
  "tyH\000\0222\n\020system_plurality\030\005 \001(\0132\026.google."
  "protobuf.EmptyH\000\0220\n\016system_message\030\006 \001(\013"
  "2\026.google.protobuf.EmptyH\000\022(\n\006bridge\030\007 \001"
  "(\0132\026.google.protobuf.EmptyH\000B\010\n\006reason\"\333"
  "\001\n\006Action\022\014\n\004text\030\001 \001(\t\022\013\n\003url\030\002 \001(\t\022\n\n\002"
  "id\030\003 \001(\t\0222\n\004type\030\004 \001(\0162$.protocol.harmon"
  "ytypes.v1.ActionType\022B\n\014presentation\030\005 \001"
  "(\0162,.protocol.harmonytypes.v1.ActionPres"
  "entation\0222\n\010children\030\006 \003(\0132 .protocol.ha"
  "rmonytypes.v1.Action\"H\n\014EmbedHeading\022\014\n\004"
  "text\030\001 \001(\t\022\017\n\007subtext\030\002 \001(\t\022\013\n\003url\030\003 \001(\t"
  "\022\014\n\004icon\030\004 \001(\t\"\304\001\n\nEmbedField\022\r\n\005title\030\001"
  " \001(\t\022\020\n\010subtitle\030\002 \001(\t\022\014\n\004body\030\003 \001(\t\022\021\n\t"
  "image_url\030\004 \001(\t\022A\n\014presentation\030\005 \001(\0162+."
  "protocol.harmonytypes.v1.FieldPresentati"
  "on\0221\n\007actions\030\006 \003(\0132 .protocol.harmonyty"
  "pes.v1.Action\"\214\002\n\005Embed\022\r\n\005title\030\001 \001(\t\022\014"
  "\n\004body\030\002 \001(\t\022\r\n\005color\030\003 \001(\003\0226\n\006header\030\004 "
  "\001(\0132&.protocol.harmonytypes.v1.EmbedHead"
  "ing\0226\n\006footer\030\005 \001(\0132&.protocol.harmonyty"
  "pes.v1.EmbedHeading\0224\n\006fields\030\006 \003(\0132$.pr"
  "otocol.harmonytypes.v1.EmbedField\0221\n\007act"
  "ions\030\007 \003(\0132 .protocol.harmonytypes.v1.Ac"
  "tion\"B\n\nAttachment\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002"
  " \001(\t\022\014\n\004type\030\003 \001(\t\022\014\n\004size\030\004 \001(\005\"\246\001\n\010Met"
  "adata\022\014\n\004kind\030\001 \001(\t\022D\n\textension\030\002 \003(\01321"
  ".protocol.harmonytypes.v1.Metadata.Exten"
  "sionEntry\032F\n\016ExtensionEntry\022\013\n\003key\030\001 \001(\t"
  "\022#\n\005value\030\002 \001(\0132\024.google.protobuf.Any:\0028"
  "\001\"\373\003\n\007Message\0224\n\010metadata\030\r \001(\0132\".protoc"
  "ol.harmonytypes.v1.Metadata\022\024\n\010guild_id\030"
  "\001 \001(\004B\0020\001\022\026\n\nchannel_id\030\002 \001(\004B\0020\001\022\026\n\nmes"
  "sage_id\030\003 \001(\004B\0020\001\022\025\n\tauthor_id\030\004 \001(\004B\0020\001"
  "\022.\n\ncreated_at\030\005 \001(\0132\032.google.protobuf.T"
  "imestamp\022-\n\tedited_at\030\006 \001(\0132\032.google.pro"
  "tobuf.Timestamp\022\017\n\007content\030\007 \001(\t\022/\n\006embe"
  "ds\030\010 \003(\0132\037.protocol.harmonytypes.v1.Embe"
  "d\0221\n\007actions\030\t \003(\0132 .protocol.harmonytyp"
  "es.v1.Action\0229\n\013attachments\030\n \003(\0132$.prot"
  "ocol.harmonytypes.v1.Attachment\022\027\n\013in_re"
  "ply_to\030\013 \001(\004B\0020\001\0225\n\toverrides\030\014 \001(\0132\".pr"
  "otocol.harmonytypes.v1.Override*\232\001\n\nUser"
  "Status\022\"\n\036USER_STATUS_ONLINE_UNSPECIFIED"
  "\020\000\022\031\n\025USER_STATUS_STREAMING\020\001\022\036\n\032USER_ST"
  "ATUS_DO_NOT_DISTURB\020\002\022\024\n\020USER_STATUS_IDL"
  "E\020\003\022\027\n\023USER_STATUS_OFFLINE\020\004*6\n\nActionTy"
  "pe\022\n\n\006Normal\020\000\022\013\n\007Primary\020\001\022\017\n\013Destructi"
  "ve\020\002*X\n\022ActionPresentation\022\n\n\006Button\020\000\022\014"
  "\n\010Dropdown\020\001\022\010\n\004Menu\020\002\022\016\n\nSmallEntry\020\003\022\016"
  "\n\nLargeEntry\020\004*:\n\021FieldPresentation\022\010\n\004D"
  "ata\020\000\022\022\n\016CaptionedImage\020\001\022\007\n\003Row\020\002:b\n\010me"
  "tadata\022\036.google.protobuf.MethodOptions\030\303"
  "\010 \001(\0132/.protocol.harmonytypes.v1.Harmony"
  "MethodMetadataB;Z9github.com/harmony-dev"
  "elopment/legato/gen/harmonytypes/v1b\006pro"
  "to3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_harmonytypes_2fv1_2ftypes_2eproto_deps[4] = {
  &::descriptor_table_google_2fprotobuf_2fany_2eproto,
  &::descriptor_table_google_2fprotobuf_2fdescriptor_2eproto,
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_harmonytypes_2fv1_2ftypes_2eproto_sccs[10] = {
  &scc_info_Action_harmonytypes_2fv1_2ftypes_2eproto.base,
  &scc_info_Attachment_harmonytypes_2fv1_2ftypes_2eproto.base,
  &scc_info_Embed_harmonytypes_2fv1_2ftypes_2eproto.base,
  &scc_info_EmbedField_harmonytypes_2fv1_2ftypes_2eproto.base,
  &scc_info_EmbedHeading_harmonytypes_2fv1_2ftypes_2eproto.base,
  &scc_info_HarmonyMethodMetadata_harmonytypes_2fv1_2ftypes_2eproto.base,
  &scc_info_Message_harmonytypes_2fv1_2ftypes_2eproto.base,
  &scc_info_Metadata_harmonytypes_2fv1_2ftypes_2eproto.base,
  &scc_info_Metadata_ExtensionEntry_DoNotUse_harmonytypes_2fv1_2ftypes_2eproto.base,
  &scc_info_Override_harmonytypes_2fv1_2ftypes_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_harmonytypes_2fv1_2ftypes_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_harmonytypes_2fv1_2ftypes_2eproto = {
  false, false, descriptor_table_protodef_harmonytypes_2fv1_2ftypes_2eproto, "harmonytypes/v1/types.proto", 2603,
  &descriptor_table_harmonytypes_2fv1_2ftypes_2eproto_once, descriptor_table_harmonytypes_2fv1_2ftypes_2eproto_sccs, descriptor_table_harmonytypes_2fv1_2ftypes_2eproto_deps, 10, 4,
  schemas, file_default_instances, TableStruct_harmonytypes_2fv1_2ftypes_2eproto::offsets,
  file_level_metadata_harmonytypes_2fv1_2ftypes_2eproto, 10, file_level_enum_descriptors_harmonytypes_2fv1_2ftypes_2eproto, file_level_service_descriptors_harmonytypes_2fv1_2ftypes_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_harmonytypes_2fv1_2ftypes_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_harmonytypes_2fv1_2ftypes_2eproto)), true);
namespace protocol {
namespace harmonytypes {
namespace v1 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* UserStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_harmonytypes_2fv1_2ftypes_2eproto);
  return file_level_enum_descriptors_harmonytypes_2fv1_2ftypes_2eproto[0];
}
bool UserStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ActionType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_harmonytypes_2fv1_2ftypes_2eproto);
  return file_level_enum_descriptors_harmonytypes_2fv1_2ftypes_2eproto[1];
}
bool ActionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ActionPresentation_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_harmonytypes_2fv1_2ftypes_2eproto);
  return file_level_enum_descriptors_harmonytypes_2fv1_2ftypes_2eproto[2];
}
bool ActionPresentation_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* FieldPresentation_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_harmonytypes_2fv1_2ftypes_2eproto);
  return file_level_enum_descriptors_harmonytypes_2fv1_2ftypes_2eproto[3];
}
bool FieldPresentation_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void HarmonyMethodMetadata::InitAsDefaultInstance() {
}
class HarmonyMethodMetadata::_Internal {
 public:
};

HarmonyMethodMetadata::HarmonyMethodMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.harmonytypes.v1.HarmonyMethodMetadata)
}
HarmonyMethodMetadata::HarmonyMethodMetadata(const HarmonyMethodMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  requires_permission_node_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requires_permission_node().empty()) {
    requires_permission_node_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_requires_permission_node(),
      GetArena());
  }
  ::memcpy(&requires_authentication_, &from.requires_authentication_,
    static_cast<size_t>(reinterpret_cast<char*>(&requires_local_) -
    reinterpret_cast<char*>(&requires_authentication_)) + sizeof(requires_local_));
  // @@protoc_insertion_point(copy_constructor:protocol.harmonytypes.v1.HarmonyMethodMetadata)
}

void HarmonyMethodMetadata::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_HarmonyMethodMetadata_harmonytypes_2fv1_2ftypes_2eproto.base);
  requires_permission_node_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&requires_authentication_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&requires_local_) -
      reinterpret_cast<char*>(&requires_authentication_)) + sizeof(requires_local_));
}

HarmonyMethodMetadata::~HarmonyMethodMetadata() {
  // @@protoc_insertion_point(destructor:protocol.harmonytypes.v1.HarmonyMethodMetadata)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HarmonyMethodMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  requires_permission_node_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void HarmonyMethodMetadata::ArenaDtor(void* object) {
  HarmonyMethodMetadata* _this = reinterpret_cast< HarmonyMethodMetadata* >(object);
  (void)_this;
}
void HarmonyMethodMetadata::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HarmonyMethodMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HarmonyMethodMetadata& HarmonyMethodMetadata::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_HarmonyMethodMetadata_harmonytypes_2fv1_2ftypes_2eproto.base);
  return *internal_default_instance();
}


void HarmonyMethodMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.harmonytypes.v1.HarmonyMethodMetadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  requires_permission_node_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&requires_authentication_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&requires_local_) -
      reinterpret_cast<char*>(&requires_authentication_)) + sizeof(requires_local_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HarmonyMethodMetadata::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool requires_authentication = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          requires_authentication_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool requires_local = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          requires_local_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requires_permission_node = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requires_permission_node();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.harmonytypes.v1.HarmonyMethodMetadata.requires_permission_node"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HarmonyMethodMetadata::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.harmonytypes.v1.HarmonyMethodMetadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool requires_authentication = 1;
  if (this->requires_authentication() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_requires_authentication(), target);
  }

  // bool requires_local = 2;
  if (this->requires_local() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_requires_local(), target);
  }

  // string requires_permission_node = 3;
  if (this->requires_permission_node().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requires_permission_node().data(), static_cast<int>(this->_internal_requires_permission_node().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.harmonytypes.v1.HarmonyMethodMetadata.requires_permission_node");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requires_permission_node(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.harmonytypes.v1.HarmonyMethodMetadata)
  return target;
}

size_t HarmonyMethodMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.harmonytypes.v1.HarmonyMethodMetadata)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string requires_permission_node = 3;
  if (this->requires_permission_node().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requires_permission_node());
  }

  // bool requires_authentication = 1;
  if (this->requires_authentication() != 0) {
    total_size += 1 + 1;
  }

  // bool requires_local = 2;
  if (this->requires_local() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HarmonyMethodMetadata::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.harmonytypes.v1.HarmonyMethodMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const HarmonyMethodMetadata* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HarmonyMethodMetadata>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.harmonytypes.v1.HarmonyMethodMetadata)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.harmonytypes.v1.HarmonyMethodMetadata)
    MergeFrom(*source);
  }
}

void HarmonyMethodMetadata::MergeFrom(const HarmonyMethodMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.harmonytypes.v1.HarmonyMethodMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.requires_permission_node().size() > 0) {
    _internal_set_requires_permission_node(from._internal_requires_permission_node());
  }
  if (from.requires_authentication() != 0) {
    _internal_set_requires_authentication(from._internal_requires_authentication());
  }
  if (from.requires_local() != 0) {
    _internal_set_requires_local(from._internal_requires_local());
  }
}

void HarmonyMethodMetadata::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.harmonytypes.v1.HarmonyMethodMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HarmonyMethodMetadata::CopyFrom(const HarmonyMethodMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.harmonytypes.v1.HarmonyMethodMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HarmonyMethodMetadata::IsInitialized() const {
  return true;
}

void HarmonyMethodMetadata::InternalSwap(HarmonyMethodMetadata* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  requires_permission_node_.Swap(&other->requires_permission_node_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HarmonyMethodMetadata, requires_local_)
      + sizeof(HarmonyMethodMetadata::requires_local_)
      - PROTOBUF_FIELD_OFFSET(HarmonyMethodMetadata, requires_authentication_)>(
          reinterpret_cast<char*>(&requires_authentication_),
          reinterpret_cast<char*>(&other->requires_authentication_));
}

::PROTOBUF_NAMESPACE_ID::Metadata HarmonyMethodMetadata::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Override::InitAsDefaultInstance() {
  ::protocol::harmonytypes::v1::_Override_default_instance_.user_defined_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::protocol::harmonytypes::v1::_Override_default_instance_.webhook_ = const_cast< PROTOBUF_NAMESPACE_ID::Empty*>(
      PROTOBUF_NAMESPACE_ID::Empty::internal_default_instance());
  ::protocol::harmonytypes::v1::_Override_default_instance_.system_plurality_ = const_cast< PROTOBUF_NAMESPACE_ID::Empty*>(
      PROTOBUF_NAMESPACE_ID::Empty::internal_default_instance());
  ::protocol::harmonytypes::v1::_Override_default_instance_.system_message_ = const_cast< PROTOBUF_NAMESPACE_ID::Empty*>(
      PROTOBUF_NAMESPACE_ID::Empty::internal_default_instance());
  ::protocol::harmonytypes::v1::_Override_default_instance_.bridge_ = const_cast< PROTOBUF_NAMESPACE_ID::Empty*>(
      PROTOBUF_NAMESPACE_ID::Empty::internal_default_instance());
}
class Override::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Empty& webhook(const Override* msg);
  static const PROTOBUF_NAMESPACE_ID::Empty& system_plurality(const Override* msg);
  static const PROTOBUF_NAMESPACE_ID::Empty& system_message(const Override* msg);
  static const PROTOBUF_NAMESPACE_ID::Empty& bridge(const Override* msg);
};

const PROTOBUF_NAMESPACE_ID::Empty&
Override::_Internal::webhook(const Override* msg) {
  return *msg->reason_.webhook_;
}
const PROTOBUF_NAMESPACE_ID::Empty&
Override::_Internal::system_plurality(const Override* msg) {
  return *msg->reason_.system_plurality_;
}
const PROTOBUF_NAMESPACE_ID::Empty&
Override::_Internal::system_message(const Override* msg) {
  return *msg->reason_.system_message_;
}
const PROTOBUF_NAMESPACE_ID::Empty&
Override::_Internal::bridge(const Override* msg) {
  return *msg->reason_.bridge_;
}
void Override::set_allocated_webhook(PROTOBUF_NAMESPACE_ID::Empty* webhook) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_reason();
  if (webhook) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(webhook)->GetArena();
    if (message_arena != submessage_arena) {
      webhook = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, webhook, submessage_arena);
    }
    set_has_webhook();
    reason_.webhook_ = webhook;
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.harmonytypes.v1.Override.webhook)
}
void Override::clear_webhook() {
  if (_internal_has_webhook()) {
    if (GetArena() == nullptr) {
      delete reason_.webhook_;
    }
    clear_has_reason();
  }
}
void Override::set_allocated_system_plurality(PROTOBUF_NAMESPACE_ID::Empty* system_plurality) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_reason();
  if (system_plurality) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(system_plurality)->GetArena();
    if (message_arena != submessage_arena) {
      system_plurality = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, system_plurality, submessage_arena);
    }
    set_has_system_plurality();
    reason_.system_plurality_ = system_plurality;
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.harmonytypes.v1.Override.system_plurality)
}
void Override::clear_system_plurality() {
  if (_internal_has_system_plurality()) {
    if (GetArena() == nullptr) {
      delete reason_.system_plurality_;
    }
    clear_has_reason();
  }
}
void Override::set_allocated_system_message(PROTOBUF_NAMESPACE_ID::Empty* system_message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_reason();
  if (system_message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(system_message)->GetArena();
    if (message_arena != submessage_arena) {
      system_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, system_message, submessage_arena);
    }
    set_has_system_message();
    reason_.system_message_ = system_message;
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.harmonytypes.v1.Override.system_message)
}
void Override::clear_system_message() {
  if (_internal_has_system_message()) {
    if (GetArena() == nullptr) {
      delete reason_.system_message_;
    }
    clear_has_reason();
  }
}
void Override::set_allocated_bridge(PROTOBUF_NAMESPACE_ID::Empty* bridge) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_reason();
  if (bridge) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(bridge)->GetArena();
    if (message_arena != submessage_arena) {
      bridge = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, bridge, submessage_arena);
    }
    set_has_bridge();
    reason_.bridge_ = bridge;
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.harmonytypes.v1.Override.bridge)
}
void Override::clear_bridge() {
  if (_internal_has_bridge()) {
    if (GetArena() == nullptr) {
      delete reason_.bridge_;
    }
    clear_has_reason();
  }
}
Override::Override(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.harmonytypes.v1.Override)
}
Override::Override(const Override& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  avatar_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_avatar().empty()) {
    avatar_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_avatar(),
      GetArena());
  }
  clear_has_reason();
  switch (from.reason_case()) {
    case kUserDefined: {
      _internal_set_user_defined(from._internal_user_defined());
      break;
    }
    case kWebhook: {
      _internal_mutable_webhook()->PROTOBUF_NAMESPACE_ID::Empty::MergeFrom(from._internal_webhook());
      break;
    }
    case kSystemPlurality: {
      _internal_mutable_system_plurality()->PROTOBUF_NAMESPACE_ID::Empty::MergeFrom(from._internal_system_plurality());
      break;
    }
    case kSystemMessage: {
      _internal_mutable_system_message()->PROTOBUF_NAMESPACE_ID::Empty::MergeFrom(from._internal_system_message());
      break;
    }
    case kBridge: {
      _internal_mutable_bridge()->PROTOBUF_NAMESPACE_ID::Empty::MergeFrom(from._internal_bridge());
      break;
    }
    case REASON_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:protocol.harmonytypes.v1.Override)
}

void Override::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Override_harmonytypes_2fv1_2ftypes_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  avatar_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  clear_has_reason();
}

Override::~Override() {
  // @@protoc_insertion_point(destructor:protocol.harmonytypes.v1.Override)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Override::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  avatar_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (has_reason()) {
    clear_reason();
  }
}

void Override::ArenaDtor(void* object) {
  Override* _this = reinterpret_cast< Override* >(object);
  (void)_this;
}
void Override::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Override::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Override& Override::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Override_harmonytypes_2fv1_2ftypes_2eproto.base);
  return *internal_default_instance();
}


void Override::clear_reason() {
// @@protoc_insertion_point(one_of_clear_start:protocol.harmonytypes.v1.Override)
  switch (reason_case()) {
    case kUserDefined: {
      reason_.user_defined_.Destroy(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
      break;
    }
    case kWebhook: {
      if (GetArena() == nullptr) {
        delete reason_.webhook_;
      }
      break;
    }
    case kSystemPlurality: {
      if (GetArena() == nullptr) {
        delete reason_.system_plurality_;
      }
      break;
    }
    case kSystemMessage: {
      if (GetArena() == nullptr) {
        delete reason_.system_message_;
      }
      break;
    }
    case kBridge: {
      if (GetArena() == nullptr) {
        delete reason_.bridge_;
      }
      break;
    }
    case REASON_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = REASON_NOT_SET;
}


void Override::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.harmonytypes.v1.Override)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  avatar_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  clear_reason();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Override::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.harmonytypes.v1.Override.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string avatar = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_avatar();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.harmonytypes.v1.Override.avatar"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string user_defined = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_user_defined();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.harmonytypes.v1.Override.user_defined"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Empty webhook = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_webhook(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Empty system_plurality = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_system_plurality(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Empty system_message = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_system_message(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Empty bridge = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_bridge(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Override::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.harmonytypes.v1.Override)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.harmonytypes.v1.Override.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string avatar = 2;
  if (this->avatar().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_avatar().data(), static_cast<int>(this->_internal_avatar().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.harmonytypes.v1.Override.avatar");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_avatar(), target);
  }

  // string user_defined = 3;
  if (_internal_has_user_defined()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_defined().data(), static_cast<int>(this->_internal_user_defined().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.harmonytypes.v1.Override.user_defined");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_user_defined(), target);
  }

  // .google.protobuf.Empty webhook = 4;
  if (_internal_has_webhook()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::webhook(this), target, stream);
  }

  // .google.protobuf.Empty system_plurality = 5;
  if (_internal_has_system_plurality()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::system_plurality(this), target, stream);
  }

  // .google.protobuf.Empty system_message = 6;
  if (_internal_has_system_message()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::system_message(this), target, stream);
  }

  // .google.protobuf.Empty bridge = 7;
  if (_internal_has_bridge()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::bridge(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.harmonytypes.v1.Override)
  return target;
}

size_t Override::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.harmonytypes.v1.Override)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string avatar = 2;
  if (this->avatar().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_avatar());
  }

  switch (reason_case()) {
    // string user_defined = 3;
    case kUserDefined: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_user_defined());
      break;
    }
    // .google.protobuf.Empty webhook = 4;
    case kWebhook: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *reason_.webhook_);
      break;
    }
    // .google.protobuf.Empty system_plurality = 5;
    case kSystemPlurality: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *reason_.system_plurality_);
      break;
    }
    // .google.protobuf.Empty system_message = 6;
    case kSystemMessage: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *reason_.system_message_);
      break;
    }
    // .google.protobuf.Empty bridge = 7;
    case kBridge: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *reason_.bridge_);
      break;
    }
    case REASON_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Override::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.harmonytypes.v1.Override)
  GOOGLE_DCHECK_NE(&from, this);
  const Override* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Override>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.harmonytypes.v1.Override)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.harmonytypes.v1.Override)
    MergeFrom(*source);
  }
}

void Override::MergeFrom(const Override& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.harmonytypes.v1.Override)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.avatar().size() > 0) {
    _internal_set_avatar(from._internal_avatar());
  }
  switch (from.reason_case()) {
    case kUserDefined: {
      _internal_set_user_defined(from._internal_user_defined());
      break;
    }
    case kWebhook: {
      _internal_mutable_webhook()->PROTOBUF_NAMESPACE_ID::Empty::MergeFrom(from._internal_webhook());
      break;
    }
    case kSystemPlurality: {
      _internal_mutable_system_plurality()->PROTOBUF_NAMESPACE_ID::Empty::MergeFrom(from._internal_system_plurality());
      break;
    }
    case kSystemMessage: {
      _internal_mutable_system_message()->PROTOBUF_NAMESPACE_ID::Empty::MergeFrom(from._internal_system_message());
      break;
    }
    case kBridge: {
      _internal_mutable_bridge()->PROTOBUF_NAMESPACE_ID::Empty::MergeFrom(from._internal_bridge());
      break;
    }
    case REASON_NOT_SET: {
      break;
    }
  }
}

void Override::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.harmonytypes.v1.Override)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Override::CopyFrom(const Override& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.harmonytypes.v1.Override)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Override::IsInitialized() const {
  return true;
}

void Override::InternalSwap(Override* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  avatar_.Swap(&other->avatar_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(reason_, other->reason_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Override::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Action::InitAsDefaultInstance() {
}
class Action::_Internal {
 public:
};

Action::Action(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  children_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.harmonytypes.v1.Action)
}
Action::Action(const Action& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      children_(from.children_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_text().empty()) {
    text_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_text(),
      GetArena());
  }
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_url().empty()) {
    url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_url(),
      GetArena());
  }
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&presentation_) -
    reinterpret_cast<char*>(&type_)) + sizeof(presentation_));
  // @@protoc_insertion_point(copy_constructor:protocol.harmonytypes.v1.Action)
}

void Action::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Action_harmonytypes_2fv1_2ftypes_2eproto.base);
  text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&presentation_) -
      reinterpret_cast<char*>(&type_)) + sizeof(presentation_));
}

Action::~Action() {
  // @@protoc_insertion_point(destructor:protocol.harmonytypes.v1.Action)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Action::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  text_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Action::ArenaDtor(void* object) {
  Action* _this = reinterpret_cast< Action* >(object);
  (void)_this;
}
void Action::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Action::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Action& Action::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Action_harmonytypes_2fv1_2ftypes_2eproto.base);
  return *internal_default_instance();
}


void Action::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.harmonytypes.v1.Action)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  children_.Clear();
  text_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  url_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&presentation_) -
      reinterpret_cast<char*>(&type_)) + sizeof(presentation_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Action::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string text = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_text();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.harmonytypes.v1.Action.text"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string url = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.harmonytypes.v1.Action.url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.harmonytypes.v1.Action.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .protocol.harmonytypes.v1.ActionType type = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::protocol::harmonytypes::v1::ActionType>(val));
        } else goto handle_unusual;
        continue;
      // .protocol.harmonytypes.v1.ActionPresentation presentation = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_presentation(static_cast<::protocol::harmonytypes::v1::ActionPresentation>(val));
        } else goto handle_unusual;
        continue;
      // repeated .protocol.harmonytypes.v1.Action children = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_children(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Action::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.harmonytypes.v1.Action)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text().data(), static_cast<int>(this->_internal_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.harmonytypes.v1.Action.text");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_text(), target);
  }

  // string url = 2;
  if (this->url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.harmonytypes.v1.Action.url");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_url(), target);
  }

  // string id = 3;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.harmonytypes.v1.Action.id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_id(), target);
  }

  // .protocol.harmonytypes.v1.ActionType type = 4;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_type(), target);
  }

  // .protocol.harmonytypes.v1.ActionPresentation presentation = 5;
  if (this->presentation() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_presentation(), target);
  }

  // repeated .protocol.harmonytypes.v1.Action children = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_children_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, this->_internal_children(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.harmonytypes.v1.Action)
  return target;
}

size_t Action::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.harmonytypes.v1.Action)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protocol.harmonytypes.v1.Action children = 6;
  total_size += 1UL * this->_internal_children_size();
  for (const auto& msg : this->children_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string text = 1;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_text());
  }

  // string url = 2;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  // string id = 3;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // .protocol.harmonytypes.v1.ActionType type = 4;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  // .protocol.harmonytypes.v1.ActionPresentation presentation = 5;
  if (this->presentation() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_presentation());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Action::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.harmonytypes.v1.Action)
  GOOGLE_DCHECK_NE(&from, this);
  const Action* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Action>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.harmonytypes.v1.Action)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.harmonytypes.v1.Action)
    MergeFrom(*source);
  }
}

void Action::MergeFrom(const Action& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.harmonytypes.v1.Action)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  children_.MergeFrom(from.children_);
  if (from.text().size() > 0) {
    _internal_set_text(from._internal_text());
  }
  if (from.url().size() > 0) {
    _internal_set_url(from._internal_url());
  }
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.presentation() != 0) {
    _internal_set_presentation(from._internal_presentation());
  }
}

void Action::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.harmonytypes.v1.Action)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Action::CopyFrom(const Action& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.harmonytypes.v1.Action)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Action::IsInitialized() const {
  return true;
}

void Action::InternalSwap(Action* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  children_.InternalSwap(&other->children_);
  text_.Swap(&other->text_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  url_.Swap(&other->url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Action, presentation_)
      + sizeof(Action::presentation_)
      - PROTOBUF_FIELD_OFFSET(Action, type_)>(
          reinterpret_cast<char*>(&type_),
          reinterpret_cast<char*>(&other->type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Action::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void EmbedHeading::InitAsDefaultInstance() {
}
class EmbedHeading::_Internal {
 public:
};

EmbedHeading::EmbedHeading(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.harmonytypes.v1.EmbedHeading)
}
EmbedHeading::EmbedHeading(const EmbedHeading& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_text().empty()) {
    text_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_text(),
      GetArena());
  }
  subtext_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subtext().empty()) {
    subtext_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_subtext(),
      GetArena());
  }
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_url().empty()) {
    url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_url(),
      GetArena());
  }
  icon_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_icon().empty()) {
    icon_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_icon(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:protocol.harmonytypes.v1.EmbedHeading)
}

void EmbedHeading::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EmbedHeading_harmonytypes_2fv1_2ftypes_2eproto.base);
  text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subtext_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  icon_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

EmbedHeading::~EmbedHeading() {
  // @@protoc_insertion_point(destructor:protocol.harmonytypes.v1.EmbedHeading)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EmbedHeading::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  text_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subtext_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  icon_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void EmbedHeading::ArenaDtor(void* object) {
  EmbedHeading* _this = reinterpret_cast< EmbedHeading* >(object);
  (void)_this;
}
void EmbedHeading::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EmbedHeading::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EmbedHeading& EmbedHeading::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EmbedHeading_harmonytypes_2fv1_2ftypes_2eproto.base);
  return *internal_default_instance();
}


void EmbedHeading::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.harmonytypes.v1.EmbedHeading)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  text_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subtext_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  url_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  icon_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EmbedHeading::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string text = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_text();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.harmonytypes.v1.EmbedHeading.text"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string subtext = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_subtext();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.harmonytypes.v1.EmbedHeading.subtext"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string url = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.harmonytypes.v1.EmbedHeading.url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string icon = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_icon();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.harmonytypes.v1.EmbedHeading.icon"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EmbedHeading::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.harmonytypes.v1.EmbedHeading)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text().data(), static_cast<int>(this->_internal_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.harmonytypes.v1.EmbedHeading.text");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_text(), target);
  }

  // string subtext = 2;
  if (this->subtext().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subtext().data(), static_cast<int>(this->_internal_subtext().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.harmonytypes.v1.EmbedHeading.subtext");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_subtext(), target);
  }

  // string url = 3;
  if (this->url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.harmonytypes.v1.EmbedHeading.url");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_url(), target);
  }

  // string icon = 4;
  if (this->icon().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_icon().data(), static_cast<int>(this->_internal_icon().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.harmonytypes.v1.EmbedHeading.icon");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_icon(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.harmonytypes.v1.EmbedHeading)
  return target;
}

size_t EmbedHeading::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.harmonytypes.v1.EmbedHeading)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_text());
  }

  // string subtext = 2;
  if (this->subtext().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subtext());
  }

  // string url = 3;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  // string icon = 4;
  if (this->icon().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_icon());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EmbedHeading::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.harmonytypes.v1.EmbedHeading)
  GOOGLE_DCHECK_NE(&from, this);
  const EmbedHeading* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EmbedHeading>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.harmonytypes.v1.EmbedHeading)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.harmonytypes.v1.EmbedHeading)
    MergeFrom(*source);
  }
}

void EmbedHeading::MergeFrom(const EmbedHeading& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.harmonytypes.v1.EmbedHeading)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.text().size() > 0) {
    _internal_set_text(from._internal_text());
  }
  if (from.subtext().size() > 0) {
    _internal_set_subtext(from._internal_subtext());
  }
  if (from.url().size() > 0) {
    _internal_set_url(from._internal_url());
  }
  if (from.icon().size() > 0) {
    _internal_set_icon(from._internal_icon());
  }
}

void EmbedHeading::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.harmonytypes.v1.EmbedHeading)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmbedHeading::CopyFrom(const EmbedHeading& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.harmonytypes.v1.EmbedHeading)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmbedHeading::IsInitialized() const {
  return true;
}

void EmbedHeading::InternalSwap(EmbedHeading* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  text_.Swap(&other->text_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subtext_.Swap(&other->subtext_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  url_.Swap(&other->url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  icon_.Swap(&other->icon_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata EmbedHeading::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void EmbedField::InitAsDefaultInstance() {
}
class EmbedField::_Internal {
 public:
};

EmbedField::EmbedField(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  actions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.harmonytypes.v1.EmbedField)
}
EmbedField::EmbedField(const EmbedField& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      actions_(from.actions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  title_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_title().empty()) {
    title_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_title(),
      GetArena());
  }
  subtitle_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subtitle().empty()) {
    subtitle_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_subtitle(),
      GetArena());
  }
  body_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_body().empty()) {
    body_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_body(),
      GetArena());
  }
  image_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_image_url().empty()) {
    image_url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_image_url(),
      GetArena());
  }
  presentation_ = from.presentation_;
  // @@protoc_insertion_point(copy_constructor:protocol.harmonytypes.v1.EmbedField)
}

void EmbedField::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EmbedField_harmonytypes_2fv1_2ftypes_2eproto.base);
  title_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subtitle_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  body_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  image_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  presentation_ = 0;
}

EmbedField::~EmbedField() {
  // @@protoc_insertion_point(destructor:protocol.harmonytypes.v1.EmbedField)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EmbedField::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  title_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subtitle_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  body_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  image_url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void EmbedField::ArenaDtor(void* object) {
  EmbedField* _this = reinterpret_cast< EmbedField* >(object);
  (void)_this;
}
void EmbedField::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EmbedField::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EmbedField& EmbedField::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EmbedField_harmonytypes_2fv1_2ftypes_2eproto.base);
  return *internal_default_instance();
}


void EmbedField::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.harmonytypes.v1.EmbedField)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  actions_.Clear();
  title_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subtitle_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  body_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  image_url_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  presentation_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EmbedField::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string title = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_title();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.harmonytypes.v1.EmbedField.title"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string subtitle = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_subtitle();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.harmonytypes.v1.EmbedField.subtitle"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string body = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_body();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.harmonytypes.v1.EmbedField.body"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string image_url = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_image_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.harmonytypes.v1.EmbedField.image_url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .protocol.harmonytypes.v1.FieldPresentation presentation = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_presentation(static_cast<::protocol::harmonytypes::v1::FieldPresentation>(val));
        } else goto handle_unusual;
        continue;
      // repeated .protocol.harmonytypes.v1.Action actions = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_actions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EmbedField::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.harmonytypes.v1.EmbedField)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string title = 1;
  if (this->title().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_title().data(), static_cast<int>(this->_internal_title().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.harmonytypes.v1.EmbedField.title");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_title(), target);
  }

  // string subtitle = 2;
  if (this->subtitle().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subtitle().data(), static_cast<int>(this->_internal_subtitle().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.harmonytypes.v1.EmbedField.subtitle");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_subtitle(), target);
  }

  // string body = 3;
  if (this->body().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_body().data(), static_cast<int>(this->_internal_body().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.harmonytypes.v1.EmbedField.body");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_body(), target);
  }

  // string image_url = 4;
  if (this->image_url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_image_url().data(), static_cast<int>(this->_internal_image_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.harmonytypes.v1.EmbedField.image_url");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_image_url(), target);
  }

  // .protocol.harmonytypes.v1.FieldPresentation presentation = 5;
  if (this->presentation() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_presentation(), target);
  }

  // repeated .protocol.harmonytypes.v1.Action actions = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_actions_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, this->_internal_actions(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.harmonytypes.v1.EmbedField)
  return target;
}

size_t EmbedField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.harmonytypes.v1.EmbedField)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protocol.harmonytypes.v1.Action actions = 6;
  total_size += 1UL * this->_internal_actions_size();
  for (const auto& msg : this->actions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string title = 1;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_title());
  }

  // string subtitle = 2;
  if (this->subtitle().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subtitle());
  }

  // string body = 3;
  if (this->body().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_body());
  }

  // string image_url = 4;
  if (this->image_url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_image_url());
  }

  // .protocol.harmonytypes.v1.FieldPresentation presentation = 5;
  if (this->presentation() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_presentation());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EmbedField::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.harmonytypes.v1.EmbedField)
  GOOGLE_DCHECK_NE(&from, this);
  const EmbedField* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EmbedField>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.harmonytypes.v1.EmbedField)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.harmonytypes.v1.EmbedField)
    MergeFrom(*source);
  }
}

void EmbedField::MergeFrom(const EmbedField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.harmonytypes.v1.EmbedField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  actions_.MergeFrom(from.actions_);
  if (from.title().size() > 0) {
    _internal_set_title(from._internal_title());
  }
  if (from.subtitle().size() > 0) {
    _internal_set_subtitle(from._internal_subtitle());
  }
  if (from.body().size() > 0) {
    _internal_set_body(from._internal_body());
  }
  if (from.image_url().size() > 0) {
    _internal_set_image_url(from._internal_image_url());
  }
  if (from.presentation() != 0) {
    _internal_set_presentation(from._internal_presentation());
  }
}

void EmbedField::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.harmonytypes.v1.EmbedField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmbedField::CopyFrom(const EmbedField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.harmonytypes.v1.EmbedField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmbedField::IsInitialized() const {
  return true;
}

void EmbedField::InternalSwap(EmbedField* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  actions_.InternalSwap(&other->actions_);
  title_.Swap(&other->title_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subtitle_.Swap(&other->subtitle_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  body_.Swap(&other->body_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  image_url_.Swap(&other->image_url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(presentation_, other->presentation_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EmbedField::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Embed::InitAsDefaultInstance() {
  ::protocol::harmonytypes::v1::_Embed_default_instance_._instance.get_mutable()->header_ = const_cast< ::protocol::harmonytypes::v1::EmbedHeading*>(
      ::protocol::harmonytypes::v1::EmbedHeading::internal_default_instance());
  ::protocol::harmonytypes::v1::_Embed_default_instance_._instance.get_mutable()->footer_ = const_cast< ::protocol::harmonytypes::v1::EmbedHeading*>(
      ::protocol::harmonytypes::v1::EmbedHeading::internal_default_instance());
}
class Embed::_Internal {
 public:
  static const ::protocol::harmonytypes::v1::EmbedHeading& header(const Embed* msg);
  static const ::protocol::harmonytypes::v1::EmbedHeading& footer(const Embed* msg);
};

const ::protocol::harmonytypes::v1::EmbedHeading&
Embed::_Internal::header(const Embed* msg) {
  return *msg->header_;
}
const ::protocol::harmonytypes::v1::EmbedHeading&
Embed::_Internal::footer(const Embed* msg) {
  return *msg->footer_;
}
Embed::Embed(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  fields_(arena),
  actions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.harmonytypes.v1.Embed)
}
Embed::Embed(const Embed& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      fields_(from.fields_),
      actions_(from.actions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  title_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_title().empty()) {
    title_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_title(),
      GetArena());
  }
  body_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_body().empty()) {
    body_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_body(),
      GetArena());
  }
  if (from._internal_has_header()) {
    header_ = new ::protocol::harmonytypes::v1::EmbedHeading(*from.header_);
  } else {
    header_ = nullptr;
  }
  if (from._internal_has_footer()) {
    footer_ = new ::protocol::harmonytypes::v1::EmbedHeading(*from.footer_);
  } else {
    footer_ = nullptr;
  }
  color_ = from.color_;
  // @@protoc_insertion_point(copy_constructor:protocol.harmonytypes.v1.Embed)
}

void Embed::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Embed_harmonytypes_2fv1_2ftypes_2eproto.base);
  title_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  body_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&color_) -
      reinterpret_cast<char*>(&header_)) + sizeof(color_));
}

Embed::~Embed() {
  // @@protoc_insertion_point(destructor:protocol.harmonytypes.v1.Embed)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Embed::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  title_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  body_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete footer_;
}

void Embed::ArenaDtor(void* object) {
  Embed* _this = reinterpret_cast< Embed* >(object);
  (void)_this;
}
void Embed::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Embed::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Embed& Embed::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Embed_harmonytypes_2fv1_2ftypes_2eproto.base);
  return *internal_default_instance();
}


void Embed::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.harmonytypes.v1.Embed)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fields_.Clear();
  actions_.Clear();
  title_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  body_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
  if (GetArena() == nullptr && footer_ != nullptr) {
    delete footer_;
  }
  footer_ = nullptr;
  color_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Embed::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string title = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_title();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.harmonytypes.v1.Embed.title"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string body = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_body();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.harmonytypes.v1.Embed.body"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 color = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          color_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .protocol.harmonytypes.v1.EmbedHeading header = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .protocol.harmonytypes.v1.EmbedHeading footer = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_footer(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .protocol.harmonytypes.v1.EmbedField fields = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_fields(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .protocol.harmonytypes.v1.Action actions = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_actions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Embed::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.harmonytypes.v1.Embed)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string title = 1;
  if (this->title().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_title().data(), static_cast<int>(this->_internal_title().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.harmonytypes.v1.Embed.title");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_title(), target);
  }

  // string body = 2;
  if (this->body().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_body().data(), static_cast<int>(this->_internal_body().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.harmonytypes.v1.Embed.body");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_body(), target);
  }

  // int64 color = 3;
  if (this->color() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_color(), target);
  }

  // .protocol.harmonytypes.v1.EmbedHeading header = 4;
  if (this->has_header()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::header(this), target, stream);
  }

  // .protocol.harmonytypes.v1.EmbedHeading footer = 5;
  if (this->has_footer()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::footer(this), target, stream);
  }

  // repeated .protocol.harmonytypes.v1.EmbedField fields = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_fields_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, this->_internal_fields(i), target, stream);
  }

  // repeated .protocol.harmonytypes.v1.Action actions = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_actions_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, this->_internal_actions(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.harmonytypes.v1.Embed)
  return target;
}

size_t Embed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.harmonytypes.v1.Embed)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protocol.harmonytypes.v1.EmbedField fields = 6;
  total_size += 1UL * this->_internal_fields_size();
  for (const auto& msg : this->fields_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .protocol.harmonytypes.v1.Action actions = 7;
  total_size += 1UL * this->_internal_actions_size();
  for (const auto& msg : this->actions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string title = 1;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_title());
  }

  // string body = 2;
  if (this->body().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_body());
  }

  // .protocol.harmonytypes.v1.EmbedHeading header = 4;
  if (this->has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .protocol.harmonytypes.v1.EmbedHeading footer = 5;
  if (this->has_footer()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *footer_);
  }

  // int64 color = 3;
  if (this->color() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_color());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Embed::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.harmonytypes.v1.Embed)
  GOOGLE_DCHECK_NE(&from, this);
  const Embed* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Embed>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.harmonytypes.v1.Embed)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.harmonytypes.v1.Embed)
    MergeFrom(*source);
  }
}

void Embed::MergeFrom(const Embed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.harmonytypes.v1.Embed)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fields_.MergeFrom(from.fields_);
  actions_.MergeFrom(from.actions_);
  if (from.title().size() > 0) {
    _internal_set_title(from._internal_title());
  }
  if (from.body().size() > 0) {
    _internal_set_body(from._internal_body());
  }
  if (from.has_header()) {
    _internal_mutable_header()->::protocol::harmonytypes::v1::EmbedHeading::MergeFrom(from._internal_header());
  }
  if (from.has_footer()) {
    _internal_mutable_footer()->::protocol::harmonytypes::v1::EmbedHeading::MergeFrom(from._internal_footer());
  }
  if (from.color() != 0) {
    _internal_set_color(from._internal_color());
  }
}

void Embed::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.harmonytypes.v1.Embed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Embed::CopyFrom(const Embed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.harmonytypes.v1.Embed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Embed::IsInitialized() const {
  return true;
}

void Embed::InternalSwap(Embed* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  fields_.InternalSwap(&other->fields_);
  actions_.InternalSwap(&other->actions_);
  title_.Swap(&other->title_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  body_.Swap(&other->body_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Embed, color_)
      + sizeof(Embed::color_)
      - PROTOBUF_FIELD_OFFSET(Embed, header_)>(
          reinterpret_cast<char*>(&header_),
          reinterpret_cast<char*>(&other->header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Embed::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Attachment::InitAsDefaultInstance() {
}
class Attachment::_Internal {
 public:
};

Attachment::Attachment(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.harmonytypes.v1.Attachment)
}
Attachment::Attachment(const Attachment& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_type().empty()) {
    type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_type(),
      GetArena());
  }
  size_ = from.size_;
  // @@protoc_insertion_point(copy_constructor:protocol.harmonytypes.v1.Attachment)
}

void Attachment::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Attachment_harmonytypes_2fv1_2ftypes_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  size_ = 0;
}

Attachment::~Attachment() {
  // @@protoc_insertion_point(destructor:protocol.harmonytypes.v1.Attachment)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Attachment::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Attachment::ArenaDtor(void* object) {
  Attachment* _this = reinterpret_cast< Attachment* >(object);
  (void)_this;
}
void Attachment::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Attachment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Attachment& Attachment::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Attachment_harmonytypes_2fv1_2ftypes_2eproto.base);
  return *internal_default_instance();
}


void Attachment::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.harmonytypes.v1.Attachment)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  size_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Attachment::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.harmonytypes.v1.Attachment.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.harmonytypes.v1.Attachment.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.harmonytypes.v1.Attachment.type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 size = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Attachment::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.harmonytypes.v1.Attachment)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.harmonytypes.v1.Attachment.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.harmonytypes.v1.Attachment.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string type = 3;
  if (this->type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.harmonytypes.v1.Attachment.type");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_type(), target);
  }

  // int32 size = 4;
  if (this->size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.harmonytypes.v1.Attachment)
  return target;
}

size_t Attachment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.harmonytypes.v1.Attachment)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string type = 3;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  // int32 size = 4;
  if (this->size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_size());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Attachment::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.harmonytypes.v1.Attachment)
  GOOGLE_DCHECK_NE(&from, this);
  const Attachment* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Attachment>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.harmonytypes.v1.Attachment)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.harmonytypes.v1.Attachment)
    MergeFrom(*source);
  }
}

void Attachment::MergeFrom(const Attachment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.harmonytypes.v1.Attachment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.type().size() > 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.size() != 0) {
    _internal_set_size(from._internal_size());
  }
}

void Attachment::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.harmonytypes.v1.Attachment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Attachment::CopyFrom(const Attachment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.harmonytypes.v1.Attachment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Attachment::IsInitialized() const {
  return true;
}

void Attachment::InternalSwap(Attachment* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  type_.Swap(&other->type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(size_, other->size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Attachment::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

Metadata_ExtensionEntry_DoNotUse::Metadata_ExtensionEntry_DoNotUse() {}
Metadata_ExtensionEntry_DoNotUse::Metadata_ExtensionEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Metadata_ExtensionEntry_DoNotUse::MergeFrom(const Metadata_ExtensionEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Metadata_ExtensionEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void Metadata_ExtensionEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void Metadata::InitAsDefaultInstance() {
}
class Metadata::_Internal {
 public:
};

void Metadata::clear_extension() {
  extension_.Clear();
}
Metadata::Metadata(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  extension_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.harmonytypes.v1.Metadata)
}
Metadata::Metadata(const Metadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  extension_.MergeFrom(from.extension_);
  kind_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_kind().empty()) {
    kind_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_kind(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:protocol.harmonytypes.v1.Metadata)
}

void Metadata::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Metadata_harmonytypes_2fv1_2ftypes_2eproto.base);
  kind_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Metadata::~Metadata() {
  // @@protoc_insertion_point(destructor:protocol.harmonytypes.v1.Metadata)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Metadata::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  kind_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Metadata::ArenaDtor(void* object) {
  Metadata* _this = reinterpret_cast< Metadata* >(object);
  (void)_this;
}
void Metadata::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Metadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Metadata& Metadata::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Metadata_harmonytypes_2fv1_2ftypes_2eproto.base);
  return *internal_default_instance();
}


void Metadata::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.harmonytypes.v1.Metadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  kind_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Metadata::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string kind = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_kind();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.harmonytypes.v1.Metadata.kind"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, .google.protobuf.Any> extension = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&extension_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Metadata::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.harmonytypes.v1.Metadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string kind = 1;
  if (this->kind().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_kind().data(), static_cast<int>(this->_internal_kind().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.harmonytypes.v1.Metadata.kind");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_kind(), target);
  }

  // map<string, .google.protobuf.Any> extension = 2;
  if (!this->_internal_extension().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, PROTOBUF_NAMESPACE_ID::Any >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "protocol.harmonytypes.v1.Metadata.ExtensionEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_extension().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_extension().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, PROTOBUF_NAMESPACE_ID::Any >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, PROTOBUF_NAMESPACE_ID::Any >::const_iterator
          it = this->_internal_extension().begin();
          it != this->_internal_extension().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Metadata_ExtensionEntry_DoNotUse::Funcs::InternalSerialize(2, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, PROTOBUF_NAMESPACE_ID::Any >::const_iterator
          it = this->_internal_extension().begin();
          it != this->_internal_extension().end(); ++it) {
        target = Metadata_ExtensionEntry_DoNotUse::Funcs::InternalSerialize(2, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.harmonytypes.v1.Metadata)
  return target;
}

size_t Metadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.harmonytypes.v1.Metadata)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .google.protobuf.Any> extension = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_extension_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, PROTOBUF_NAMESPACE_ID::Any >::const_iterator
      it = this->_internal_extension().begin();
      it != this->_internal_extension().end(); ++it) {
    total_size += Metadata_ExtensionEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string kind = 1;
  if (this->kind().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_kind());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Metadata::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.harmonytypes.v1.Metadata)
  GOOGLE_DCHECK_NE(&from, this);
  const Metadata* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Metadata>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.harmonytypes.v1.Metadata)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.harmonytypes.v1.Metadata)
    MergeFrom(*source);
  }
}

void Metadata::MergeFrom(const Metadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.harmonytypes.v1.Metadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.kind().size() > 0) {
    _internal_set_kind(from._internal_kind());
  }
}

void Metadata::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.harmonytypes.v1.Metadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Metadata::CopyFrom(const Metadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.harmonytypes.v1.Metadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Metadata::IsInitialized() const {
  return true;
}

void Metadata::InternalSwap(Metadata* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  extension_.Swap(&other->extension_);
  kind_.Swap(&other->kind_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Metadata::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Message::InitAsDefaultInstance() {
  ::protocol::harmonytypes::v1::_Message_default_instance_._instance.get_mutable()->metadata_ = const_cast< ::protocol::harmonytypes::v1::Metadata*>(
      ::protocol::harmonytypes::v1::Metadata::internal_default_instance());
  ::protocol::harmonytypes::v1::_Message_default_instance_._instance.get_mutable()->created_at_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::protocol::harmonytypes::v1::_Message_default_instance_._instance.get_mutable()->edited_at_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::protocol::harmonytypes::v1::_Message_default_instance_._instance.get_mutable()->overrides_ = const_cast< ::protocol::harmonytypes::v1::Override*>(
      ::protocol::harmonytypes::v1::Override::internal_default_instance());
}
class Message::_Internal {
 public:
  static const ::protocol::harmonytypes::v1::Metadata& metadata(const Message* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& created_at(const Message* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& edited_at(const Message* msg);
  static const ::protocol::harmonytypes::v1::Override& overrides(const Message* msg);
};

const ::protocol::harmonytypes::v1::Metadata&
Message::_Internal::metadata(const Message* msg) {
  return *msg->metadata_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
Message::_Internal::created_at(const Message* msg) {
  return *msg->created_at_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
Message::_Internal::edited_at(const Message* msg) {
  return *msg->edited_at_;
}
const ::protocol::harmonytypes::v1::Override&
Message::_Internal::overrides(const Message* msg) {
  return *msg->overrides_;
}
void Message::clear_created_at() {
  if (GetArena() == nullptr && created_at_ != nullptr) {
    delete created_at_;
  }
  created_at_ = nullptr;
}
void Message::clear_edited_at() {
  if (GetArena() == nullptr && edited_at_ != nullptr) {
    delete edited_at_;
  }
  edited_at_ = nullptr;
}
Message::Message(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  embeds_(arena),
  actions_(arena),
  attachments_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.harmonytypes.v1.Message)
}
Message::Message(const Message& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      embeds_(from.embeds_),
      actions_(from.actions_),
      attachments_(from.attachments_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_content().empty()) {
    content_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_content(),
      GetArena());
  }
  if (from._internal_has_created_at()) {
    created_at_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_at_);
  } else {
    created_at_ = nullptr;
  }
  if (from._internal_has_edited_at()) {
    edited_at_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.edited_at_);
  } else {
    edited_at_ = nullptr;
  }
  if (from._internal_has_overrides()) {
    overrides_ = new ::protocol::harmonytypes::v1::Override(*from.overrides_);
  } else {
    overrides_ = nullptr;
  }
  if (from._internal_has_metadata()) {
    metadata_ = new ::protocol::harmonytypes::v1::Metadata(*from.metadata_);
  } else {
    metadata_ = nullptr;
  }
  ::memcpy(&guild_id_, &from.guild_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&in_reply_to_) -
    reinterpret_cast<char*>(&guild_id_)) + sizeof(in_reply_to_));
  // @@protoc_insertion_point(copy_constructor:protocol.harmonytypes.v1.Message)
}

void Message::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Message_harmonytypes_2fv1_2ftypes_2eproto.base);
  content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&created_at_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&in_reply_to_) -
      reinterpret_cast<char*>(&created_at_)) + sizeof(in_reply_to_));
}

Message::~Message() {
  // @@protoc_insertion_point(destructor:protocol.harmonytypes.v1.Message)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Message::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  content_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete created_at_;
  if (this != internal_default_instance()) delete edited_at_;
  if (this != internal_default_instance()) delete overrides_;
  if (this != internal_default_instance()) delete metadata_;
}

void Message::ArenaDtor(void* object) {
  Message* _this = reinterpret_cast< Message* >(object);
  (void)_this;
}
void Message::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message& Message::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_harmonytypes_2fv1_2ftypes_2eproto.base);
  return *internal_default_instance();
}


void Message::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.harmonytypes.v1.Message)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  embeds_.Clear();
  actions_.Clear();
  attachments_.Clear();
  content_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && created_at_ != nullptr) {
    delete created_at_;
  }
  created_at_ = nullptr;
  if (GetArena() == nullptr && edited_at_ != nullptr) {
    delete edited_at_;
  }
  edited_at_ = nullptr;
  if (GetArena() == nullptr && overrides_ != nullptr) {
    delete overrides_;
  }
  overrides_ = nullptr;
  if (GetArena() == nullptr && metadata_ != nullptr) {
    delete metadata_;
  }
  metadata_ = nullptr;
  ::memset(&guild_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&in_reply_to_) -
      reinterpret_cast<char*>(&guild_id_)) + sizeof(in_reply_to_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 guild_id = 1 [jstype = JS_STRING];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 channel_id = 2 [jstype = JS_STRING];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          channel_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 message_id = 3 [jstype = JS_STRING];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          message_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 author_id = 4 [jstype = JS_STRING];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          author_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_at = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp edited_at = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_edited_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string content = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_content();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.harmonytypes.v1.Message.content"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .protocol.harmonytypes.v1.Embed embeds = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_embeds(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .protocol.harmonytypes.v1.Action actions = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_actions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .protocol.harmonytypes.v1.Attachment attachments = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_attachments(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else goto handle_unusual;
        continue;
      // uint64 in_reply_to = 11 [jstype = JS_STRING];
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          in_reply_to_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .protocol.harmonytypes.v1.Override overrides = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_overrides(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .protocol.harmonytypes.v1.Metadata metadata = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_metadata(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.harmonytypes.v1.Message)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guild_id = 1 [jstype = JS_STRING];
  if (this->guild_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_guild_id(), target);
  }

  // uint64 channel_id = 2 [jstype = JS_STRING];
  if (this->channel_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_channel_id(), target);
  }

  // uint64 message_id = 3 [jstype = JS_STRING];
  if (this->message_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_message_id(), target);
  }

  // uint64 author_id = 4 [jstype = JS_STRING];
  if (this->author_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_author_id(), target);
  }

  // .google.protobuf.Timestamp created_at = 5;
  if (this->has_created_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::created_at(this), target, stream);
  }

  // .google.protobuf.Timestamp edited_at = 6;
  if (this->has_edited_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::edited_at(this), target, stream);
  }

  // string content = 7;
  if (this->content().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_content().data(), static_cast<int>(this->_internal_content().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.harmonytypes.v1.Message.content");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_content(), target);
  }

  // repeated .protocol.harmonytypes.v1.Embed embeds = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_embeds_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, this->_internal_embeds(i), target, stream);
  }

  // repeated .protocol.harmonytypes.v1.Action actions = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_actions_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, this->_internal_actions(i), target, stream);
  }

  // repeated .protocol.harmonytypes.v1.Attachment attachments = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_attachments_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, this->_internal_attachments(i), target, stream);
  }

  // uint64 in_reply_to = 11 [jstype = JS_STRING];
  if (this->in_reply_to() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(11, this->_internal_in_reply_to(), target);
  }

  // .protocol.harmonytypes.v1.Override overrides = 12;
  if (this->has_overrides()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        12, _Internal::overrides(this), target, stream);
  }

  // .protocol.harmonytypes.v1.Metadata metadata = 13;
  if (this->has_metadata()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        13, _Internal::metadata(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.harmonytypes.v1.Message)
  return target;
}

size_t Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.harmonytypes.v1.Message)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protocol.harmonytypes.v1.Embed embeds = 8;
  total_size += 1UL * this->_internal_embeds_size();
  for (const auto& msg : this->embeds_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .protocol.harmonytypes.v1.Action actions = 9;
  total_size += 1UL * this->_internal_actions_size();
  for (const auto& msg : this->actions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .protocol.harmonytypes.v1.Attachment attachments = 10;
  total_size += 1UL * this->_internal_attachments_size();
  for (const auto& msg : this->attachments_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string content = 7;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_content());
  }

  // .google.protobuf.Timestamp created_at = 5;
  if (this->has_created_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_at_);
  }

  // .google.protobuf.Timestamp edited_at = 6;
  if (this->has_edited_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *edited_at_);
  }

  // .protocol.harmonytypes.v1.Override overrides = 12;
  if (this->has_overrides()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *overrides_);
  }

  // .protocol.harmonytypes.v1.Metadata metadata = 13;
  if (this->has_metadata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *metadata_);
  }

  // uint64 guild_id = 1 [jstype = JS_STRING];
  if (this->guild_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_guild_id());
  }

  // uint64 channel_id = 2 [jstype = JS_STRING];
  if (this->channel_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_channel_id());
  }

  // uint64 message_id = 3 [jstype = JS_STRING];
  if (this->message_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_message_id());
  }

  // uint64 author_id = 4 [jstype = JS_STRING];
  if (this->author_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_author_id());
  }

  // uint64 in_reply_to = 11 [jstype = JS_STRING];
  if (this->in_reply_to() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_in_reply_to());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.harmonytypes.v1.Message)
  GOOGLE_DCHECK_NE(&from, this);
  const Message* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.harmonytypes.v1.Message)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.harmonytypes.v1.Message)
    MergeFrom(*source);
  }
}

void Message::MergeFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.harmonytypes.v1.Message)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  embeds_.MergeFrom(from.embeds_);
  actions_.MergeFrom(from.actions_);
  attachments_.MergeFrom(from.attachments_);
  if (from.content().size() > 0) {
    _internal_set_content(from._internal_content());
  }
  if (from.has_created_at()) {
    _internal_mutable_created_at()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_at());
  }
  if (from.has_edited_at()) {
    _internal_mutable_edited_at()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_edited_at());
  }
  if (from.has_overrides()) {
    _internal_mutable_overrides()->::protocol::harmonytypes::v1::Override::MergeFrom(from._internal_overrides());
  }
  if (from.has_metadata()) {
    _internal_mutable_metadata()->::protocol::harmonytypes::v1::Metadata::MergeFrom(from._internal_metadata());
  }
  if (from.guild_id() != 0) {
    _internal_set_guild_id(from._internal_guild_id());
  }
  if (from.channel_id() != 0) {
    _internal_set_channel_id(from._internal_channel_id());
  }
  if (from.message_id() != 0) {
    _internal_set_message_id(from._internal_message_id());
  }
  if (from.author_id() != 0) {
    _internal_set_author_id(from._internal_author_id());
  }
  if (from.in_reply_to() != 0) {
    _internal_set_in_reply_to(from._internal_in_reply_to());
  }
}

void Message::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.harmonytypes.v1.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message::CopyFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.harmonytypes.v1.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message::IsInitialized() const {
  return true;
}

void Message::InternalSwap(Message* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  embeds_.InternalSwap(&other->embeds_);
  actions_.InternalSwap(&other->actions_);
  attachments_.InternalSwap(&other->attachments_);
  content_.Swap(&other->content_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message, in_reply_to_)
      + sizeof(Message::in_reply_to_)
      - PROTOBUF_FIELD_OFFSET(Message, created_at_)>(
          reinterpret_cast<char*>(&created_at_),
          reinterpret_cast<char*>(&other->created_at_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Message::GetMetadata() const {
  return GetMetadataStatic();
}

::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::protocol::harmonytypes::v1::HarmonyMethodMetadata >, 11, false >
  metadata(kMetadataFieldNumber, ::protocol::harmonytypes::v1::HarmonyMethodMetadata::default_instance());

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace harmonytypes
}  // namespace protocol
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::protocol::harmonytypes::v1::HarmonyMethodMetadata* Arena::CreateMaybeMessage< ::protocol::harmonytypes::v1::HarmonyMethodMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::harmonytypes::v1::HarmonyMethodMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::harmonytypes::v1::Override* Arena::CreateMaybeMessage< ::protocol::harmonytypes::v1::Override >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::harmonytypes::v1::Override >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::harmonytypes::v1::Action* Arena::CreateMaybeMessage< ::protocol::harmonytypes::v1::Action >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::harmonytypes::v1::Action >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::harmonytypes::v1::EmbedHeading* Arena::CreateMaybeMessage< ::protocol::harmonytypes::v1::EmbedHeading >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::harmonytypes::v1::EmbedHeading >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::harmonytypes::v1::EmbedField* Arena::CreateMaybeMessage< ::protocol::harmonytypes::v1::EmbedField >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::harmonytypes::v1::EmbedField >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::harmonytypes::v1::Embed* Arena::CreateMaybeMessage< ::protocol::harmonytypes::v1::Embed >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::harmonytypes::v1::Embed >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::harmonytypes::v1::Attachment* Arena::CreateMaybeMessage< ::protocol::harmonytypes::v1::Attachment >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::harmonytypes::v1::Attachment >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::harmonytypes::v1::Metadata_ExtensionEntry_DoNotUse* Arena::CreateMaybeMessage< ::protocol::harmonytypes::v1::Metadata_ExtensionEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::harmonytypes::v1::Metadata_ExtensionEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::harmonytypes::v1::Metadata* Arena::CreateMaybeMessage< ::protocol::harmonytypes::v1::Metadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::harmonytypes::v1::Metadata >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::harmonytypes::v1::Message* Arena::CreateMaybeMessage< ::protocol::harmonytypes::v1::Message >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::harmonytypes::v1::Message >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
