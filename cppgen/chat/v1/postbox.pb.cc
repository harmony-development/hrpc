// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chat/v1/postbox.proto

#include "chat/v1/postbox.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_chat_2fv1_2fpostbox_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SyncEvent_DMInvite_chat_2fv1_2fpostbox_2eproto;
namespace protocol {
namespace chat {
namespace v1 {
class SyncRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SyncRequest> _instance;
} _SyncRequest_default_instance_;
class SyncEvent_DMInviteDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SyncEvent_DMInvite> _instance;
} _SyncEvent_DMInvite_default_instance_;
class SyncEventDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SyncEvent> _instance;
  const ::protocol::chat::v1::SyncEvent_DMInvite* dm_invite_;
} _SyncEvent_default_instance_;
}  // namespace v1
}  // namespace chat
}  // namespace protocol
static void InitDefaultsscc_info_SyncEvent_chat_2fv1_2fpostbox_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::chat::v1::_SyncEvent_default_instance_;
    new (ptr) ::protocol::chat::v1::SyncEvent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::chat::v1::SyncEvent::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SyncEvent_chat_2fv1_2fpostbox_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SyncEvent_chat_2fv1_2fpostbox_2eproto}, {
      &scc_info_SyncEvent_DMInvite_chat_2fv1_2fpostbox_2eproto.base,}};

static void InitDefaultsscc_info_SyncEvent_DMInvite_chat_2fv1_2fpostbox_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::chat::v1::_SyncEvent_DMInvite_default_instance_;
    new (ptr) ::protocol::chat::v1::SyncEvent_DMInvite();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::chat::v1::SyncEvent_DMInvite::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SyncEvent_DMInvite_chat_2fv1_2fpostbox_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SyncEvent_DMInvite_chat_2fv1_2fpostbox_2eproto}, {}};

static void InitDefaultsscc_info_SyncRequest_chat_2fv1_2fpostbox_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::chat::v1::_SyncRequest_default_instance_;
    new (ptr) ::protocol::chat::v1::SyncRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::chat::v1::SyncRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SyncRequest_chat_2fv1_2fpostbox_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SyncRequest_chat_2fv1_2fpostbox_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_chat_2fv1_2fpostbox_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_chat_2fv1_2fpostbox_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_chat_2fv1_2fpostbox_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_chat_2fv1_2fpostbox_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::SyncRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::SyncRequest, token_),
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::SyncRequest, host_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::SyncEvent_DMInvite, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::SyncEvent_DMInvite, user_name_),
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::SyncEvent_DMInvite, user_avatar_),
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::SyncEvent_DMInvite, dm_name_),
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::SyncEvent_DMInvite, dm_avatar_),
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::SyncEvent_DMInvite, invite_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::SyncEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::SyncEvent, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::protocol::chat::v1::SyncEventDefaultTypeInternal, dm_invite_),
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::SyncEvent, event_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::protocol::chat::v1::SyncRequest)},
  { 7, -1, sizeof(::protocol::chat::v1::SyncEvent_DMInvite)},
  { 17, -1, sizeof(::protocol::chat::v1::SyncEvent)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::chat::v1::_SyncRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::chat::v1::_SyncEvent_DMInvite_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::chat::v1::_SyncEvent_default_instance_),
};

const char descriptor_table_protodef_chat_2fv1_2fpostbox_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\025chat/v1/postbox.proto\022\020protocol.chat.v"
  "1\"*\n\013SyncRequest\022\r\n\005token\030\001 \001(\t\022\014\n\004host\030"
  "\002 \001(\t\"\272\001\n\tSyncEvent\0229\n\tdm_invite\030\001 \001(\0132$"
  ".protocol.chat.v1.SyncEvent.DMInviteH\000\032i"
  "\n\010DMInvite\022\021\n\tuser_name\030\001 \001(\t\022\023\n\013user_av"
  "atar\030\002 \001(\t\022\017\n\007dm_name\030\003 \001(\t\022\021\n\tdm_avatar"
  "\030\004 \001(\t\022\021\n\tinvite_id\030\005 \001(\tB\007\n\005eventB3Z1gi"
  "thub.com/harmony-development/legato/gen/"
  "chat/v1b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_chat_2fv1_2fpostbox_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_chat_2fv1_2fpostbox_2eproto_sccs[3] = {
  &scc_info_SyncEvent_chat_2fv1_2fpostbox_2eproto.base,
  &scc_info_SyncEvent_DMInvite_chat_2fv1_2fpostbox_2eproto.base,
  &scc_info_SyncRequest_chat_2fv1_2fpostbox_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_chat_2fv1_2fpostbox_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_chat_2fv1_2fpostbox_2eproto = {
  false, false, descriptor_table_protodef_chat_2fv1_2fpostbox_2eproto, "chat/v1/postbox.proto", 335,
  &descriptor_table_chat_2fv1_2fpostbox_2eproto_once, descriptor_table_chat_2fv1_2fpostbox_2eproto_sccs, descriptor_table_chat_2fv1_2fpostbox_2eproto_deps, 3, 0,
  schemas, file_default_instances, TableStruct_chat_2fv1_2fpostbox_2eproto::offsets,
  file_level_metadata_chat_2fv1_2fpostbox_2eproto, 3, file_level_enum_descriptors_chat_2fv1_2fpostbox_2eproto, file_level_service_descriptors_chat_2fv1_2fpostbox_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_chat_2fv1_2fpostbox_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_chat_2fv1_2fpostbox_2eproto)), true);
namespace protocol {
namespace chat {
namespace v1 {

// ===================================================================

void SyncRequest::InitAsDefaultInstance() {
}
class SyncRequest::_Internal {
 public:
};

SyncRequest::SyncRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.chat.v1.SyncRequest)
}
SyncRequest::SyncRequest(const SyncRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_token().empty()) {
    token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_token(),
      GetArena());
  }
  host_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_host().empty()) {
    host_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_host(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:protocol.chat.v1.SyncRequest)
}

void SyncRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SyncRequest_chat_2fv1_2fpostbox_2eproto.base);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  host_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SyncRequest::~SyncRequest() {
  // @@protoc_insertion_point(destructor:protocol.chat.v1.SyncRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SyncRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  host_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SyncRequest::ArenaDtor(void* object) {
  SyncRequest* _this = reinterpret_cast< SyncRequest* >(object);
  (void)_this;
}
void SyncRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SyncRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SyncRequest& SyncRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SyncRequest_chat_2fv1_2fpostbox_2eproto.base);
  return *internal_default_instance();
}


void SyncRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.chat.v1.SyncRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  host_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SyncRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.chat.v1.SyncRequest.token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string host = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_host();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.chat.v1.SyncRequest.host"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SyncRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.chat.v1.SyncRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.chat.v1.SyncRequest.token");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_token(), target);
  }

  // string host = 2;
  if (this->host().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_host().data(), static_cast<int>(this->_internal_host().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.chat.v1.SyncRequest.host");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_host(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.chat.v1.SyncRequest)
  return target;
}

size_t SyncRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.chat.v1.SyncRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  // string host = 2;
  if (this->host().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_host());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SyncRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.chat.v1.SyncRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SyncRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SyncRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.chat.v1.SyncRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.chat.v1.SyncRequest)
    MergeFrom(*source);
  }
}

void SyncRequest::MergeFrom(const SyncRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.chat.v1.SyncRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {
    _internal_set_token(from._internal_token());
  }
  if (from.host().size() > 0) {
    _internal_set_host(from._internal_host());
  }
}

void SyncRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.chat.v1.SyncRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncRequest::CopyFrom(const SyncRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.chat.v1.SyncRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncRequest::IsInitialized() const {
  return true;
}

void SyncRequest::InternalSwap(SyncRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  token_.Swap(&other->token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  host_.Swap(&other->host_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SyncRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SyncEvent_DMInvite::InitAsDefaultInstance() {
}
class SyncEvent_DMInvite::_Internal {
 public:
};

SyncEvent_DMInvite::SyncEvent_DMInvite(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.chat.v1.SyncEvent.DMInvite)
}
SyncEvent_DMInvite::SyncEvent_DMInvite(const SyncEvent_DMInvite& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  user_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_user_name().empty()) {
    user_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_user_name(),
      GetArena());
  }
  user_avatar_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_user_avatar().empty()) {
    user_avatar_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_user_avatar(),
      GetArena());
  }
  dm_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_dm_name().empty()) {
    dm_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_dm_name(),
      GetArena());
  }
  dm_avatar_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_dm_avatar().empty()) {
    dm_avatar_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_dm_avatar(),
      GetArena());
  }
  invite_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_invite_id().empty()) {
    invite_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_invite_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:protocol.chat.v1.SyncEvent.DMInvite)
}

void SyncEvent_DMInvite::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SyncEvent_DMInvite_chat_2fv1_2fpostbox_2eproto.base);
  user_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_avatar_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  dm_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  dm_avatar_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  invite_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SyncEvent_DMInvite::~SyncEvent_DMInvite() {
  // @@protoc_insertion_point(destructor:protocol.chat.v1.SyncEvent.DMInvite)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SyncEvent_DMInvite::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  user_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_avatar_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  dm_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  dm_avatar_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  invite_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SyncEvent_DMInvite::ArenaDtor(void* object) {
  SyncEvent_DMInvite* _this = reinterpret_cast< SyncEvent_DMInvite* >(object);
  (void)_this;
}
void SyncEvent_DMInvite::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SyncEvent_DMInvite::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SyncEvent_DMInvite& SyncEvent_DMInvite::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SyncEvent_DMInvite_chat_2fv1_2fpostbox_2eproto.base);
  return *internal_default_instance();
}


void SyncEvent_DMInvite::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.chat.v1.SyncEvent.DMInvite)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  user_avatar_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  dm_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  dm_avatar_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  invite_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SyncEvent_DMInvite::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string user_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_user_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.chat.v1.SyncEvent.DMInvite.user_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string user_avatar = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_user_avatar();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.chat.v1.SyncEvent.DMInvite.user_avatar"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string dm_name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_dm_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.chat.v1.SyncEvent.DMInvite.dm_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string dm_avatar = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_dm_avatar();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.chat.v1.SyncEvent.DMInvite.dm_avatar"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string invite_id = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_invite_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.chat.v1.SyncEvent.DMInvite.invite_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SyncEvent_DMInvite::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.chat.v1.SyncEvent.DMInvite)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_name = 1;
  if (this->user_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_name().data(), static_cast<int>(this->_internal_user_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.chat.v1.SyncEvent.DMInvite.user_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_user_name(), target);
  }

  // string user_avatar = 2;
  if (this->user_avatar().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_avatar().data(), static_cast<int>(this->_internal_user_avatar().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.chat.v1.SyncEvent.DMInvite.user_avatar");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_user_avatar(), target);
  }

  // string dm_name = 3;
  if (this->dm_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dm_name().data(), static_cast<int>(this->_internal_dm_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.chat.v1.SyncEvent.DMInvite.dm_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_dm_name(), target);
  }

  // string dm_avatar = 4;
  if (this->dm_avatar().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dm_avatar().data(), static_cast<int>(this->_internal_dm_avatar().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.chat.v1.SyncEvent.DMInvite.dm_avatar");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_dm_avatar(), target);
  }

  // string invite_id = 5;
  if (this->invite_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_invite_id().data(), static_cast<int>(this->_internal_invite_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.chat.v1.SyncEvent.DMInvite.invite_id");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_invite_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.chat.v1.SyncEvent.DMInvite)
  return target;
}

size_t SyncEvent_DMInvite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.chat.v1.SyncEvent.DMInvite)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string user_name = 1;
  if (this->user_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_name());
  }

  // string user_avatar = 2;
  if (this->user_avatar().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_avatar());
  }

  // string dm_name = 3;
  if (this->dm_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dm_name());
  }

  // string dm_avatar = 4;
  if (this->dm_avatar().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dm_avatar());
  }

  // string invite_id = 5;
  if (this->invite_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_invite_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SyncEvent_DMInvite::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.chat.v1.SyncEvent.DMInvite)
  GOOGLE_DCHECK_NE(&from, this);
  const SyncEvent_DMInvite* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SyncEvent_DMInvite>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.chat.v1.SyncEvent.DMInvite)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.chat.v1.SyncEvent.DMInvite)
    MergeFrom(*source);
  }
}

void SyncEvent_DMInvite::MergeFrom(const SyncEvent_DMInvite& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.chat.v1.SyncEvent.DMInvite)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_name().size() > 0) {
    _internal_set_user_name(from._internal_user_name());
  }
  if (from.user_avatar().size() > 0) {
    _internal_set_user_avatar(from._internal_user_avatar());
  }
  if (from.dm_name().size() > 0) {
    _internal_set_dm_name(from._internal_dm_name());
  }
  if (from.dm_avatar().size() > 0) {
    _internal_set_dm_avatar(from._internal_dm_avatar());
  }
  if (from.invite_id().size() > 0) {
    _internal_set_invite_id(from._internal_invite_id());
  }
}

void SyncEvent_DMInvite::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.chat.v1.SyncEvent.DMInvite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncEvent_DMInvite::CopyFrom(const SyncEvent_DMInvite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.chat.v1.SyncEvent.DMInvite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncEvent_DMInvite::IsInitialized() const {
  return true;
}

void SyncEvent_DMInvite::InternalSwap(SyncEvent_DMInvite* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  user_name_.Swap(&other->user_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  user_avatar_.Swap(&other->user_avatar_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  dm_name_.Swap(&other->dm_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  dm_avatar_.Swap(&other->dm_avatar_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  invite_id_.Swap(&other->invite_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SyncEvent_DMInvite::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SyncEvent::InitAsDefaultInstance() {
  ::protocol::chat::v1::_SyncEvent_default_instance_.dm_invite_ = const_cast< ::protocol::chat::v1::SyncEvent_DMInvite*>(
      ::protocol::chat::v1::SyncEvent_DMInvite::internal_default_instance());
}
class SyncEvent::_Internal {
 public:
  static const ::protocol::chat::v1::SyncEvent_DMInvite& dm_invite(const SyncEvent* msg);
};

const ::protocol::chat::v1::SyncEvent_DMInvite&
SyncEvent::_Internal::dm_invite(const SyncEvent* msg) {
  return *msg->event_.dm_invite_;
}
void SyncEvent::set_allocated_dm_invite(::protocol::chat::v1::SyncEvent_DMInvite* dm_invite) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_event();
  if (dm_invite) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(dm_invite);
    if (message_arena != submessage_arena) {
      dm_invite = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dm_invite, submessage_arena);
    }
    set_has_dm_invite();
    event_.dm_invite_ = dm_invite;
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.chat.v1.SyncEvent.dm_invite)
}
SyncEvent::SyncEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.chat.v1.SyncEvent)
}
SyncEvent::SyncEvent(const SyncEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_event();
  switch (from.event_case()) {
    case kDmInvite: {
      _internal_mutable_dm_invite()->::protocol::chat::v1::SyncEvent_DMInvite::MergeFrom(from._internal_dm_invite());
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:protocol.chat.v1.SyncEvent)
}

void SyncEvent::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SyncEvent_chat_2fv1_2fpostbox_2eproto.base);
  clear_has_event();
}

SyncEvent::~SyncEvent() {
  // @@protoc_insertion_point(destructor:protocol.chat.v1.SyncEvent)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SyncEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_event()) {
    clear_event();
  }
}

void SyncEvent::ArenaDtor(void* object) {
  SyncEvent* _this = reinterpret_cast< SyncEvent* >(object);
  (void)_this;
}
void SyncEvent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SyncEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SyncEvent& SyncEvent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SyncEvent_chat_2fv1_2fpostbox_2eproto.base);
  return *internal_default_instance();
}


void SyncEvent::clear_event() {
// @@protoc_insertion_point(one_of_clear_start:protocol.chat.v1.SyncEvent)
  switch (event_case()) {
    case kDmInvite: {
      if (GetArena() == nullptr) {
        delete event_.dm_invite_;
      }
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = EVENT_NOT_SET;
}


void SyncEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.chat.v1.SyncEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_event();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SyncEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .protocol.chat.v1.SyncEvent.DMInvite dm_invite = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_dm_invite(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SyncEvent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.chat.v1.SyncEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.chat.v1.SyncEvent.DMInvite dm_invite = 1;
  if (_internal_has_dm_invite()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::dm_invite(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.chat.v1.SyncEvent)
  return target;
}

size_t SyncEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.chat.v1.SyncEvent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (event_case()) {
    // .protocol.chat.v1.SyncEvent.DMInvite dm_invite = 1;
    case kDmInvite: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *event_.dm_invite_);
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SyncEvent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.chat.v1.SyncEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const SyncEvent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SyncEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.chat.v1.SyncEvent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.chat.v1.SyncEvent)
    MergeFrom(*source);
  }
}

void SyncEvent::MergeFrom(const SyncEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.chat.v1.SyncEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.event_case()) {
    case kDmInvite: {
      _internal_mutable_dm_invite()->::protocol::chat::v1::SyncEvent_DMInvite::MergeFrom(from._internal_dm_invite());
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
}

void SyncEvent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.chat.v1.SyncEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncEvent::CopyFrom(const SyncEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.chat.v1.SyncEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncEvent::IsInitialized() const {
  return true;
}

void SyncEvent::InternalSwap(SyncEvent* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(event_, other->event_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata SyncEvent::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace chat
}  // namespace protocol
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::protocol::chat::v1::SyncRequest* Arena::CreateMaybeMessage< ::protocol::chat::v1::SyncRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::chat::v1::SyncRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::chat::v1::SyncEvent_DMInvite* Arena::CreateMaybeMessage< ::protocol::chat::v1::SyncEvent_DMInvite >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::chat::v1::SyncEvent_DMInvite >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::chat::v1::SyncEvent* Arena::CreateMaybeMessage< ::protocol::chat::v1::SyncEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::chat::v1::SyncEvent >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
