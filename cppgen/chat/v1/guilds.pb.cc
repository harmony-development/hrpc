// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chat/v1/guilds.proto

#include "chat/v1/guilds.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_chat_2fv1_2fguilds_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetGuildInvitesResponse_Invite_chat_2fv1_2fguilds_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_chat_2fv1_2fguilds_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetGuildListResponse_GuildListEntry_chat_2fv1_2fguilds_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_harmonytypes_2fv1_2ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Metadata_harmonytypes_2fv1_2ftypes_2eproto;
namespace protocol {
namespace chat {
namespace v1 {
class CreateGuildRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateGuildRequest> _instance;
} _CreateGuildRequest_default_instance_;
class CreateGuildResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateGuildResponse> _instance;
} _CreateGuildResponse_default_instance_;
class CreateInviteRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateInviteRequest> _instance;
} _CreateInviteRequest_default_instance_;
class CreateInviteResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateInviteResponse> _instance;
} _CreateInviteResponse_default_instance_;
class GetGuildListRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetGuildListRequest> _instance;
} _GetGuildListRequest_default_instance_;
class GetGuildListResponse_GuildListEntryDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetGuildListResponse_GuildListEntry> _instance;
} _GetGuildListResponse_GuildListEntry_default_instance_;
class GetGuildListResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetGuildListResponse> _instance;
} _GetGuildListResponse_default_instance_;
class GetGuildRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetGuildRequest> _instance;
} _GetGuildRequest_default_instance_;
class GetGuildResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetGuildResponse> _instance;
} _GetGuildResponse_default_instance_;
class GetGuildInvitesRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetGuildInvitesRequest> _instance;
} _GetGuildInvitesRequest_default_instance_;
class GetGuildInvitesResponse_InviteDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetGuildInvitesResponse_Invite> _instance;
} _GetGuildInvitesResponse_Invite_default_instance_;
class GetGuildInvitesResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetGuildInvitesResponse> _instance;
} _GetGuildInvitesResponse_default_instance_;
class GetGuildMembersRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetGuildMembersRequest> _instance;
} _GetGuildMembersRequest_default_instance_;
class GetGuildMembersResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetGuildMembersResponse> _instance;
} _GetGuildMembersResponse_default_instance_;
class UpdateGuildInformationRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateGuildInformationRequest> _instance;
} _UpdateGuildInformationRequest_default_instance_;
class DeleteGuildRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteGuildRequest> _instance;
} _DeleteGuildRequest_default_instance_;
class DeleteInviteRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteInviteRequest> _instance;
} _DeleteInviteRequest_default_instance_;
class JoinGuildRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<JoinGuildRequest> _instance;
} _JoinGuildRequest_default_instance_;
class JoinGuildResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<JoinGuildResponse> _instance;
} _JoinGuildResponse_default_instance_;
class PreviewGuildRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PreviewGuildRequest> _instance;
} _PreviewGuildRequest_default_instance_;
class PreviewGuildResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PreviewGuildResponse> _instance;
} _PreviewGuildResponse_default_instance_;
class LeaveGuildRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LeaveGuildRequest> _instance;
} _LeaveGuildRequest_default_instance_;
class AddGuildToGuildListRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddGuildToGuildListRequest> _instance;
} _AddGuildToGuildListRequest_default_instance_;
class AddGuildToGuildListResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddGuildToGuildListResponse> _instance;
} _AddGuildToGuildListResponse_default_instance_;
class RemoveGuildFromGuildListRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveGuildFromGuildListRequest> _instance;
} _RemoveGuildFromGuildListRequest_default_instance_;
class RemoveGuildFromGuildListResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveGuildFromGuildListResponse> _instance;
} _RemoveGuildFromGuildListResponse_default_instance_;
}  // namespace v1
}  // namespace chat
}  // namespace protocol
static void InitDefaultsscc_info_AddGuildToGuildListRequest_chat_2fv1_2fguilds_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::chat::v1::_AddGuildToGuildListRequest_default_instance_;
    new (ptr) ::protocol::chat::v1::AddGuildToGuildListRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::chat::v1::AddGuildToGuildListRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddGuildToGuildListRequest_chat_2fv1_2fguilds_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddGuildToGuildListRequest_chat_2fv1_2fguilds_2eproto}, {}};

static void InitDefaultsscc_info_AddGuildToGuildListResponse_chat_2fv1_2fguilds_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::chat::v1::_AddGuildToGuildListResponse_default_instance_;
    new (ptr) ::protocol::chat::v1::AddGuildToGuildListResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::chat::v1::AddGuildToGuildListResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddGuildToGuildListResponse_chat_2fv1_2fguilds_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddGuildToGuildListResponse_chat_2fv1_2fguilds_2eproto}, {}};

static void InitDefaultsscc_info_CreateGuildRequest_chat_2fv1_2fguilds_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::chat::v1::_CreateGuildRequest_default_instance_;
    new (ptr) ::protocol::chat::v1::CreateGuildRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::chat::v1::CreateGuildRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateGuildRequest_chat_2fv1_2fguilds_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateGuildRequest_chat_2fv1_2fguilds_2eproto}, {
      &scc_info_Metadata_harmonytypes_2fv1_2ftypes_2eproto.base,}};

static void InitDefaultsscc_info_CreateGuildResponse_chat_2fv1_2fguilds_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::chat::v1::_CreateGuildResponse_default_instance_;
    new (ptr) ::protocol::chat::v1::CreateGuildResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::chat::v1::CreateGuildResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateGuildResponse_chat_2fv1_2fguilds_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateGuildResponse_chat_2fv1_2fguilds_2eproto}, {}};

static void InitDefaultsscc_info_CreateInviteRequest_chat_2fv1_2fguilds_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::chat::v1::_CreateInviteRequest_default_instance_;
    new (ptr) ::protocol::chat::v1::CreateInviteRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::chat::v1::CreateInviteRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateInviteRequest_chat_2fv1_2fguilds_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateInviteRequest_chat_2fv1_2fguilds_2eproto}, {}};

static void InitDefaultsscc_info_CreateInviteResponse_chat_2fv1_2fguilds_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::chat::v1::_CreateInviteResponse_default_instance_;
    new (ptr) ::protocol::chat::v1::CreateInviteResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::chat::v1::CreateInviteResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateInviteResponse_chat_2fv1_2fguilds_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateInviteResponse_chat_2fv1_2fguilds_2eproto}, {}};

static void InitDefaultsscc_info_DeleteGuildRequest_chat_2fv1_2fguilds_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::chat::v1::_DeleteGuildRequest_default_instance_;
    new (ptr) ::protocol::chat::v1::DeleteGuildRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::chat::v1::DeleteGuildRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteGuildRequest_chat_2fv1_2fguilds_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteGuildRequest_chat_2fv1_2fguilds_2eproto}, {}};

static void InitDefaultsscc_info_DeleteInviteRequest_chat_2fv1_2fguilds_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::chat::v1::_DeleteInviteRequest_default_instance_;
    new (ptr) ::protocol::chat::v1::DeleteInviteRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::chat::v1::DeleteInviteRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteInviteRequest_chat_2fv1_2fguilds_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteInviteRequest_chat_2fv1_2fguilds_2eproto}, {}};

static void InitDefaultsscc_info_GetGuildInvitesRequest_chat_2fv1_2fguilds_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::chat::v1::_GetGuildInvitesRequest_default_instance_;
    new (ptr) ::protocol::chat::v1::GetGuildInvitesRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::chat::v1::GetGuildInvitesRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetGuildInvitesRequest_chat_2fv1_2fguilds_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetGuildInvitesRequest_chat_2fv1_2fguilds_2eproto}, {}};

static void InitDefaultsscc_info_GetGuildInvitesResponse_chat_2fv1_2fguilds_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::chat::v1::_GetGuildInvitesResponse_default_instance_;
    new (ptr) ::protocol::chat::v1::GetGuildInvitesResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::chat::v1::GetGuildInvitesResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetGuildInvitesResponse_chat_2fv1_2fguilds_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetGuildInvitesResponse_chat_2fv1_2fguilds_2eproto}, {
      &scc_info_GetGuildInvitesResponse_Invite_chat_2fv1_2fguilds_2eproto.base,}};

static void InitDefaultsscc_info_GetGuildInvitesResponse_Invite_chat_2fv1_2fguilds_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::chat::v1::_GetGuildInvitesResponse_Invite_default_instance_;
    new (ptr) ::protocol::chat::v1::GetGuildInvitesResponse_Invite();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::chat::v1::GetGuildInvitesResponse_Invite::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetGuildInvitesResponse_Invite_chat_2fv1_2fguilds_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetGuildInvitesResponse_Invite_chat_2fv1_2fguilds_2eproto}, {}};

static void InitDefaultsscc_info_GetGuildListRequest_chat_2fv1_2fguilds_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::chat::v1::_GetGuildListRequest_default_instance_;
    new (ptr) ::protocol::chat::v1::GetGuildListRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::chat::v1::GetGuildListRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetGuildListRequest_chat_2fv1_2fguilds_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetGuildListRequest_chat_2fv1_2fguilds_2eproto}, {}};

static void InitDefaultsscc_info_GetGuildListResponse_chat_2fv1_2fguilds_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::chat::v1::_GetGuildListResponse_default_instance_;
    new (ptr) ::protocol::chat::v1::GetGuildListResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::chat::v1::GetGuildListResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetGuildListResponse_chat_2fv1_2fguilds_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetGuildListResponse_chat_2fv1_2fguilds_2eproto}, {
      &scc_info_GetGuildListResponse_GuildListEntry_chat_2fv1_2fguilds_2eproto.base,}};

static void InitDefaultsscc_info_GetGuildListResponse_GuildListEntry_chat_2fv1_2fguilds_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::chat::v1::_GetGuildListResponse_GuildListEntry_default_instance_;
    new (ptr) ::protocol::chat::v1::GetGuildListResponse_GuildListEntry();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::chat::v1::GetGuildListResponse_GuildListEntry::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetGuildListResponse_GuildListEntry_chat_2fv1_2fguilds_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetGuildListResponse_GuildListEntry_chat_2fv1_2fguilds_2eproto}, {}};

static void InitDefaultsscc_info_GetGuildMembersRequest_chat_2fv1_2fguilds_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::chat::v1::_GetGuildMembersRequest_default_instance_;
    new (ptr) ::protocol::chat::v1::GetGuildMembersRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::chat::v1::GetGuildMembersRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetGuildMembersRequest_chat_2fv1_2fguilds_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetGuildMembersRequest_chat_2fv1_2fguilds_2eproto}, {}};

static void InitDefaultsscc_info_GetGuildMembersResponse_chat_2fv1_2fguilds_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::chat::v1::_GetGuildMembersResponse_default_instance_;
    new (ptr) ::protocol::chat::v1::GetGuildMembersResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::chat::v1::GetGuildMembersResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetGuildMembersResponse_chat_2fv1_2fguilds_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetGuildMembersResponse_chat_2fv1_2fguilds_2eproto}, {}};

static void InitDefaultsscc_info_GetGuildRequest_chat_2fv1_2fguilds_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::chat::v1::_GetGuildRequest_default_instance_;
    new (ptr) ::protocol::chat::v1::GetGuildRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::chat::v1::GetGuildRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetGuildRequest_chat_2fv1_2fguilds_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetGuildRequest_chat_2fv1_2fguilds_2eproto}, {}};

static void InitDefaultsscc_info_GetGuildResponse_chat_2fv1_2fguilds_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::chat::v1::_GetGuildResponse_default_instance_;
    new (ptr) ::protocol::chat::v1::GetGuildResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::chat::v1::GetGuildResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetGuildResponse_chat_2fv1_2fguilds_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetGuildResponse_chat_2fv1_2fguilds_2eproto}, {
      &scc_info_Metadata_harmonytypes_2fv1_2ftypes_2eproto.base,}};

static void InitDefaultsscc_info_JoinGuildRequest_chat_2fv1_2fguilds_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::chat::v1::_JoinGuildRequest_default_instance_;
    new (ptr) ::protocol::chat::v1::JoinGuildRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::chat::v1::JoinGuildRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_JoinGuildRequest_chat_2fv1_2fguilds_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_JoinGuildRequest_chat_2fv1_2fguilds_2eproto}, {}};

static void InitDefaultsscc_info_JoinGuildResponse_chat_2fv1_2fguilds_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::chat::v1::_JoinGuildResponse_default_instance_;
    new (ptr) ::protocol::chat::v1::JoinGuildResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::chat::v1::JoinGuildResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_JoinGuildResponse_chat_2fv1_2fguilds_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_JoinGuildResponse_chat_2fv1_2fguilds_2eproto}, {}};

static void InitDefaultsscc_info_LeaveGuildRequest_chat_2fv1_2fguilds_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::chat::v1::_LeaveGuildRequest_default_instance_;
    new (ptr) ::protocol::chat::v1::LeaveGuildRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::chat::v1::LeaveGuildRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LeaveGuildRequest_chat_2fv1_2fguilds_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LeaveGuildRequest_chat_2fv1_2fguilds_2eproto}, {}};

static void InitDefaultsscc_info_PreviewGuildRequest_chat_2fv1_2fguilds_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::chat::v1::_PreviewGuildRequest_default_instance_;
    new (ptr) ::protocol::chat::v1::PreviewGuildRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::chat::v1::PreviewGuildRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PreviewGuildRequest_chat_2fv1_2fguilds_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PreviewGuildRequest_chat_2fv1_2fguilds_2eproto}, {}};

static void InitDefaultsscc_info_PreviewGuildResponse_chat_2fv1_2fguilds_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::chat::v1::_PreviewGuildResponse_default_instance_;
    new (ptr) ::protocol::chat::v1::PreviewGuildResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::chat::v1::PreviewGuildResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PreviewGuildResponse_chat_2fv1_2fguilds_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PreviewGuildResponse_chat_2fv1_2fguilds_2eproto}, {}};

static void InitDefaultsscc_info_RemoveGuildFromGuildListRequest_chat_2fv1_2fguilds_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::chat::v1::_RemoveGuildFromGuildListRequest_default_instance_;
    new (ptr) ::protocol::chat::v1::RemoveGuildFromGuildListRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::chat::v1::RemoveGuildFromGuildListRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveGuildFromGuildListRequest_chat_2fv1_2fguilds_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveGuildFromGuildListRequest_chat_2fv1_2fguilds_2eproto}, {}};

static void InitDefaultsscc_info_RemoveGuildFromGuildListResponse_chat_2fv1_2fguilds_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::chat::v1::_RemoveGuildFromGuildListResponse_default_instance_;
    new (ptr) ::protocol::chat::v1::RemoveGuildFromGuildListResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::chat::v1::RemoveGuildFromGuildListResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveGuildFromGuildListResponse_chat_2fv1_2fguilds_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveGuildFromGuildListResponse_chat_2fv1_2fguilds_2eproto}, {}};

static void InitDefaultsscc_info_UpdateGuildInformationRequest_chat_2fv1_2fguilds_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::chat::v1::_UpdateGuildInformationRequest_default_instance_;
    new (ptr) ::protocol::chat::v1::UpdateGuildInformationRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::chat::v1::UpdateGuildInformationRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdateGuildInformationRequest_chat_2fv1_2fguilds_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UpdateGuildInformationRequest_chat_2fv1_2fguilds_2eproto}, {
      &scc_info_Metadata_harmonytypes_2fv1_2ftypes_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_chat_2fv1_2fguilds_2eproto[26];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_chat_2fv1_2fguilds_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_chat_2fv1_2fguilds_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_chat_2fv1_2fguilds_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::CreateGuildRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::CreateGuildRequest, metadata_),
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::CreateGuildRequest, guild_name_),
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::CreateGuildRequest, picture_url_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::CreateGuildResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::CreateGuildResponse, guild_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::CreateInviteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::CreateInviteRequest, guild_id_),
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::CreateInviteRequest, name_),
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::CreateInviteRequest, possible_uses_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::CreateInviteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::CreateInviteResponse, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::GetGuildListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::GetGuildListResponse_GuildListEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::GetGuildListResponse_GuildListEntry, guild_id_),
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::GetGuildListResponse_GuildListEntry, host_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::GetGuildListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::GetGuildListResponse, guilds_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::GetGuildRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::GetGuildRequest, guild_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::GetGuildResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::GetGuildResponse, metadata_),
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::GetGuildResponse, guild_name_),
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::GetGuildResponse, guild_owner_),
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::GetGuildResponse, guild_picture_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::GetGuildInvitesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::GetGuildInvitesRequest, guild_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::GetGuildInvitesResponse_Invite, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::GetGuildInvitesResponse_Invite, invite_id_),
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::GetGuildInvitesResponse_Invite, possible_uses_),
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::GetGuildInvitesResponse_Invite, use_count_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::GetGuildInvitesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::GetGuildInvitesResponse, invites_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::GetGuildMembersRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::GetGuildMembersRequest, guild_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::GetGuildMembersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::GetGuildMembersResponse, members_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::UpdateGuildInformationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::UpdateGuildInformationRequest, guild_id_),
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::UpdateGuildInformationRequest, new_guild_name_),
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::UpdateGuildInformationRequest, update_guild_name_),
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::UpdateGuildInformationRequest, new_guild_picture_),
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::UpdateGuildInformationRequest, update_guild_picture_),
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::UpdateGuildInformationRequest, metadata_),
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::UpdateGuildInformationRequest, update_metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::DeleteGuildRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::DeleteGuildRequest, guild_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::DeleteInviteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::DeleteInviteRequest, guild_id_),
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::DeleteInviteRequest, invite_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::JoinGuildRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::JoinGuildRequest, invite_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::JoinGuildResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::JoinGuildResponse, guild_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::PreviewGuildRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::PreviewGuildRequest, invite_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::PreviewGuildResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::PreviewGuildResponse, name_),
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::PreviewGuildResponse, avatar_),
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::PreviewGuildResponse, member_count_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::LeaveGuildRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::LeaveGuildRequest, guild_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::AddGuildToGuildListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::AddGuildToGuildListRequest, guild_id_),
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::AddGuildToGuildListRequest, homeserver_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::AddGuildToGuildListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::RemoveGuildFromGuildListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::RemoveGuildFromGuildListRequest, guild_id_),
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::RemoveGuildFromGuildListRequest, homeserver_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::chat::v1::RemoveGuildFromGuildListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::protocol::chat::v1::CreateGuildRequest)},
  { 8, -1, sizeof(::protocol::chat::v1::CreateGuildResponse)},
  { 14, -1, sizeof(::protocol::chat::v1::CreateInviteRequest)},
  { 22, -1, sizeof(::protocol::chat::v1::CreateInviteResponse)},
  { 28, -1, sizeof(::protocol::chat::v1::GetGuildListRequest)},
  { 33, -1, sizeof(::protocol::chat::v1::GetGuildListResponse_GuildListEntry)},
  { 40, -1, sizeof(::protocol::chat::v1::GetGuildListResponse)},
  { 46, -1, sizeof(::protocol::chat::v1::GetGuildRequest)},
  { 52, -1, sizeof(::protocol::chat::v1::GetGuildResponse)},
  { 61, -1, sizeof(::protocol::chat::v1::GetGuildInvitesRequest)},
  { 67, -1, sizeof(::protocol::chat::v1::GetGuildInvitesResponse_Invite)},
  { 75, -1, sizeof(::protocol::chat::v1::GetGuildInvitesResponse)},
  { 81, -1, sizeof(::protocol::chat::v1::GetGuildMembersRequest)},
  { 87, -1, sizeof(::protocol::chat::v1::GetGuildMembersResponse)},
  { 93, -1, sizeof(::protocol::chat::v1::UpdateGuildInformationRequest)},
  { 105, -1, sizeof(::protocol::chat::v1::DeleteGuildRequest)},
  { 111, -1, sizeof(::protocol::chat::v1::DeleteInviteRequest)},
  { 118, -1, sizeof(::protocol::chat::v1::JoinGuildRequest)},
  { 124, -1, sizeof(::protocol::chat::v1::JoinGuildResponse)},
  { 130, -1, sizeof(::protocol::chat::v1::PreviewGuildRequest)},
  { 136, -1, sizeof(::protocol::chat::v1::PreviewGuildResponse)},
  { 144, -1, sizeof(::protocol::chat::v1::LeaveGuildRequest)},
  { 150, -1, sizeof(::protocol::chat::v1::AddGuildToGuildListRequest)},
  { 157, -1, sizeof(::protocol::chat::v1::AddGuildToGuildListResponse)},
  { 162, -1, sizeof(::protocol::chat::v1::RemoveGuildFromGuildListRequest)},
  { 169, -1, sizeof(::protocol::chat::v1::RemoveGuildFromGuildListResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::chat::v1::_CreateGuildRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::chat::v1::_CreateGuildResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::chat::v1::_CreateInviteRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::chat::v1::_CreateInviteResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::chat::v1::_GetGuildListRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::chat::v1::_GetGuildListResponse_GuildListEntry_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::chat::v1::_GetGuildListResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::chat::v1::_GetGuildRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::chat::v1::_GetGuildResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::chat::v1::_GetGuildInvitesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::chat::v1::_GetGuildInvitesResponse_Invite_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::chat::v1::_GetGuildInvitesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::chat::v1::_GetGuildMembersRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::chat::v1::_GetGuildMembersResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::chat::v1::_UpdateGuildInformationRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::chat::v1::_DeleteGuildRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::chat::v1::_DeleteInviteRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::chat::v1::_JoinGuildRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::chat::v1::_JoinGuildResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::chat::v1::_PreviewGuildRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::chat::v1::_PreviewGuildResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::chat::v1::_LeaveGuildRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::chat::v1::_AddGuildToGuildListRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::chat::v1::_AddGuildToGuildListResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::chat::v1::_RemoveGuildFromGuildListRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::chat::v1::_RemoveGuildFromGuildListResponse_default_instance_),
};

const char descriptor_table_protodef_chat_2fv1_2fguilds_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\024chat/v1/guilds.proto\022\020protocol.chat.v1"
  "\032\033harmonytypes/v1/types.proto\"s\n\022CreateG"
  "uildRequest\0224\n\010metadata\030\003 \001(\0132\".protocol"
  ".harmonytypes.v1.Metadata\022\022\n\nguild_name\030"
  "\001 \001(\t\022\023\n\013picture_url\030\002 \001(\t\"+\n\023CreateGuil"
  "dResponse\022\024\n\010guild_id\030\001 \001(\004B\0020\001\"P\n\023Creat"
  "eInviteRequest\022\024\n\010guild_id\030\001 \001(\004B\0020\001\022\014\n\004"
  "name\030\002 \001(\t\022\025\n\rpossible_uses\030\003 \001(\005\"$\n\024Cre"
  "ateInviteResponse\022\014\n\004name\030\001 \001(\t\"\025\n\023GetGu"
  "ildListRequest\"\223\001\n\024GetGuildListResponse\022"
  "E\n\006guilds\030\001 \003(\01325.protocol.chat.v1.GetGu"
  "ildListResponse.GuildListEntry\0324\n\016GuildL"
  "istEntry\022\024\n\010guild_id\030\001 \001(\004B\0020\001\022\014\n\004host\030\002"
  " \001(\t\"\'\n\017GetGuildRequest\022\024\n\010guild_id\030\001 \001("
  "\004B\0020\001\"\214\001\n\020GetGuildResponse\0224\n\010metadata\030\004"
  " \001(\0132\".protocol.harmonytypes.v1.Metadata"
  "\022\022\n\nguild_name\030\001 \001(\t\022\027\n\013guild_owner\030\002 \001("
  "\004B\0020\001\022\025\n\rguild_picture\030\003 \001(\t\".\n\026GetGuild"
  "InvitesRequest\022\024\n\010guild_id\030\001 \001(\004B\0020\001\"\243\001\n"
  "\027GetGuildInvitesResponse\022A\n\007invites\030\001 \003("
  "\01320.protocol.chat.v1.GetGuildInvitesResp"
  "onse.Invite\032E\n\006Invite\022\021\n\tinvite_id\030\001 \001(\t"
  "\022\025\n\rpossible_uses\030\002 \001(\005\022\021\n\tuse_count\030\003 \001"
  "(\005\".\n\026GetGuildMembersRequest\022\024\n\010guild_id"
  "\030\001 \001(\004B\0020\001\".\n\027GetGuildMembersResponse\022\023\n"
  "\007members\030\001 \003(\004B\0020\001\"\360\001\n\035UpdateGuildInform"
  "ationRequest\022\024\n\010guild_id\030\001 \001(\004B\0020\001\022\026\n\016ne"
  "w_guild_name\030\002 \001(\t\022\031\n\021update_guild_name\030"
  "\003 \001(\010\022\031\n\021new_guild_picture\030\004 \001(\t\022\034\n\024upda"
  "te_guild_picture\030\005 \001(\010\0224\n\010metadata\030\006 \001(\013"
  "2\".protocol.harmonytypes.v1.Metadata\022\027\n\017"
  "update_metadata\030\007 \001(\010\"*\n\022DeleteGuildRequ"
  "est\022\024\n\010guild_id\030\001 \001(\004B\0020\001\">\n\023DeleteInvit"
  "eRequest\022\024\n\010guild_id\030\001 \001(\004B\0020\001\022\021\n\tinvite"
  "_id\030\002 \001(\t\"%\n\020JoinGuildRequest\022\021\n\tinvite_"
  "id\030\001 \001(\t\")\n\021JoinGuildResponse\022\024\n\010guild_i"
  "d\030\001 \001(\004B\0020\001\"(\n\023PreviewGuildRequest\022\021\n\tin"
  "vite_id\030\001 \001(\t\"N\n\024PreviewGuildResponse\022\014\n"
  "\004name\030\001 \001(\t\022\016\n\006avatar\030\002 \001(\t\022\030\n\014member_co"
  "unt\030\003 \001(\004B\0020\001\")\n\021LeaveGuildRequest\022\024\n\010gu"
  "ild_id\030\001 \001(\004B\0020\001\"F\n\032AddGuildToGuildListR"
  "equest\022\024\n\010guild_id\030\001 \001(\004B\0020\001\022\022\n\nhomeserv"
  "er\030\002 \001(\t\"\035\n\033AddGuildToGuildListResponse\""
  "K\n\037RemoveGuildFromGuildListRequest\022\024\n\010gu"
  "ild_id\030\001 \001(\004B\0020\001\022\022\n\nhomeserver\030\002 \001(\t\"\"\n "
  "RemoveGuildFromGuildListResponseB3Z1gith"
  "ub.com/harmony-development/legato/gen/ch"
  "at/v1b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_chat_2fv1_2fguilds_2eproto_deps[1] = {
  &::descriptor_table_harmonytypes_2fv1_2ftypes_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_chat_2fv1_2fguilds_2eproto_sccs[26] = {
  &scc_info_AddGuildToGuildListRequest_chat_2fv1_2fguilds_2eproto.base,
  &scc_info_AddGuildToGuildListResponse_chat_2fv1_2fguilds_2eproto.base,
  &scc_info_CreateGuildRequest_chat_2fv1_2fguilds_2eproto.base,
  &scc_info_CreateGuildResponse_chat_2fv1_2fguilds_2eproto.base,
  &scc_info_CreateInviteRequest_chat_2fv1_2fguilds_2eproto.base,
  &scc_info_CreateInviteResponse_chat_2fv1_2fguilds_2eproto.base,
  &scc_info_DeleteGuildRequest_chat_2fv1_2fguilds_2eproto.base,
  &scc_info_DeleteInviteRequest_chat_2fv1_2fguilds_2eproto.base,
  &scc_info_GetGuildInvitesRequest_chat_2fv1_2fguilds_2eproto.base,
  &scc_info_GetGuildInvitesResponse_chat_2fv1_2fguilds_2eproto.base,
  &scc_info_GetGuildInvitesResponse_Invite_chat_2fv1_2fguilds_2eproto.base,
  &scc_info_GetGuildListRequest_chat_2fv1_2fguilds_2eproto.base,
  &scc_info_GetGuildListResponse_chat_2fv1_2fguilds_2eproto.base,
  &scc_info_GetGuildListResponse_GuildListEntry_chat_2fv1_2fguilds_2eproto.base,
  &scc_info_GetGuildMembersRequest_chat_2fv1_2fguilds_2eproto.base,
  &scc_info_GetGuildMembersResponse_chat_2fv1_2fguilds_2eproto.base,
  &scc_info_GetGuildRequest_chat_2fv1_2fguilds_2eproto.base,
  &scc_info_GetGuildResponse_chat_2fv1_2fguilds_2eproto.base,
  &scc_info_JoinGuildRequest_chat_2fv1_2fguilds_2eproto.base,
  &scc_info_JoinGuildResponse_chat_2fv1_2fguilds_2eproto.base,
  &scc_info_LeaveGuildRequest_chat_2fv1_2fguilds_2eproto.base,
  &scc_info_PreviewGuildRequest_chat_2fv1_2fguilds_2eproto.base,
  &scc_info_PreviewGuildResponse_chat_2fv1_2fguilds_2eproto.base,
  &scc_info_RemoveGuildFromGuildListRequest_chat_2fv1_2fguilds_2eproto.base,
  &scc_info_RemoveGuildFromGuildListResponse_chat_2fv1_2fguilds_2eproto.base,
  &scc_info_UpdateGuildInformationRequest_chat_2fv1_2fguilds_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_chat_2fv1_2fguilds_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_chat_2fv1_2fguilds_2eproto = {
  false, false, descriptor_table_protodef_chat_2fv1_2fguilds_2eproto, "chat/v1/guilds.proto", 1893,
  &descriptor_table_chat_2fv1_2fguilds_2eproto_once, descriptor_table_chat_2fv1_2fguilds_2eproto_sccs, descriptor_table_chat_2fv1_2fguilds_2eproto_deps, 26, 1,
  schemas, file_default_instances, TableStruct_chat_2fv1_2fguilds_2eproto::offsets,
  file_level_metadata_chat_2fv1_2fguilds_2eproto, 26, file_level_enum_descriptors_chat_2fv1_2fguilds_2eproto, file_level_service_descriptors_chat_2fv1_2fguilds_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_chat_2fv1_2fguilds_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_chat_2fv1_2fguilds_2eproto)), true);
namespace protocol {
namespace chat {
namespace v1 {

// ===================================================================

void CreateGuildRequest::InitAsDefaultInstance() {
  ::protocol::chat::v1::_CreateGuildRequest_default_instance_._instance.get_mutable()->metadata_ = const_cast< ::protocol::harmonytypes::v1::Metadata*>(
      ::protocol::harmonytypes::v1::Metadata::internal_default_instance());
}
class CreateGuildRequest::_Internal {
 public:
  static const ::protocol::harmonytypes::v1::Metadata& metadata(const CreateGuildRequest* msg);
};

const ::protocol::harmonytypes::v1::Metadata&
CreateGuildRequest::_Internal::metadata(const CreateGuildRequest* msg) {
  return *msg->metadata_;
}
void CreateGuildRequest::clear_metadata() {
  if (GetArena() == nullptr && metadata_ != nullptr) {
    delete metadata_;
  }
  metadata_ = nullptr;
}
CreateGuildRequest::CreateGuildRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.chat.v1.CreateGuildRequest)
}
CreateGuildRequest::CreateGuildRequest(const CreateGuildRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  guild_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_guild_name().empty()) {
    guild_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_guild_name(),
      GetArena());
  }
  picture_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_picture_url().empty()) {
    picture_url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_picture_url(),
      GetArena());
  }
  if (from._internal_has_metadata()) {
    metadata_ = new ::protocol::harmonytypes::v1::Metadata(*from.metadata_);
  } else {
    metadata_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protocol.chat.v1.CreateGuildRequest)
}

void CreateGuildRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateGuildRequest_chat_2fv1_2fguilds_2eproto.base);
  guild_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  picture_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  metadata_ = nullptr;
}

CreateGuildRequest::~CreateGuildRequest() {
  // @@protoc_insertion_point(destructor:protocol.chat.v1.CreateGuildRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateGuildRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  guild_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  picture_url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete metadata_;
}

void CreateGuildRequest::ArenaDtor(void* object) {
  CreateGuildRequest* _this = reinterpret_cast< CreateGuildRequest* >(object);
  (void)_this;
}
void CreateGuildRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateGuildRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateGuildRequest& CreateGuildRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateGuildRequest_chat_2fv1_2fguilds_2eproto.base);
  return *internal_default_instance();
}


void CreateGuildRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.chat.v1.CreateGuildRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guild_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  picture_url_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && metadata_ != nullptr) {
    delete metadata_;
  }
  metadata_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateGuildRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string guild_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_guild_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.chat.v1.CreateGuildRequest.guild_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string picture_url = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_picture_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.chat.v1.CreateGuildRequest.picture_url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .protocol.harmonytypes.v1.Metadata metadata = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_metadata(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateGuildRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.chat.v1.CreateGuildRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string guild_name = 1;
  if (this->guild_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_guild_name().data(), static_cast<int>(this->_internal_guild_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.chat.v1.CreateGuildRequest.guild_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_guild_name(), target);
  }

  // string picture_url = 2;
  if (this->picture_url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_picture_url().data(), static_cast<int>(this->_internal_picture_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.chat.v1.CreateGuildRequest.picture_url");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_picture_url(), target);
  }

  // .protocol.harmonytypes.v1.Metadata metadata = 3;
  if (this->has_metadata()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::metadata(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.chat.v1.CreateGuildRequest)
  return target;
}

size_t CreateGuildRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.chat.v1.CreateGuildRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string guild_name = 1;
  if (this->guild_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_guild_name());
  }

  // string picture_url = 2;
  if (this->picture_url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_picture_url());
  }

  // .protocol.harmonytypes.v1.Metadata metadata = 3;
  if (this->has_metadata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *metadata_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateGuildRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.chat.v1.CreateGuildRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateGuildRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateGuildRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.chat.v1.CreateGuildRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.chat.v1.CreateGuildRequest)
    MergeFrom(*source);
  }
}

void CreateGuildRequest::MergeFrom(const CreateGuildRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.chat.v1.CreateGuildRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.guild_name().size() > 0) {
    _internal_set_guild_name(from._internal_guild_name());
  }
  if (from.picture_url().size() > 0) {
    _internal_set_picture_url(from._internal_picture_url());
  }
  if (from.has_metadata()) {
    _internal_mutable_metadata()->::protocol::harmonytypes::v1::Metadata::MergeFrom(from._internal_metadata());
  }
}

void CreateGuildRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.chat.v1.CreateGuildRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateGuildRequest::CopyFrom(const CreateGuildRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.chat.v1.CreateGuildRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateGuildRequest::IsInitialized() const {
  return true;
}

void CreateGuildRequest::InternalSwap(CreateGuildRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  guild_name_.Swap(&other->guild_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  picture_url_.Swap(&other->picture_url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(metadata_, other->metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateGuildRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateGuildResponse::InitAsDefaultInstance() {
}
class CreateGuildResponse::_Internal {
 public:
};

CreateGuildResponse::CreateGuildResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.chat.v1.CreateGuildResponse)
}
CreateGuildResponse::CreateGuildResponse(const CreateGuildResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  guild_id_ = from.guild_id_;
  // @@protoc_insertion_point(copy_constructor:protocol.chat.v1.CreateGuildResponse)
}

void CreateGuildResponse::SharedCtor() {
  guild_id_ = PROTOBUF_ULONGLONG(0);
}

CreateGuildResponse::~CreateGuildResponse() {
  // @@protoc_insertion_point(destructor:protocol.chat.v1.CreateGuildResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateGuildResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CreateGuildResponse::ArenaDtor(void* object) {
  CreateGuildResponse* _this = reinterpret_cast< CreateGuildResponse* >(object);
  (void)_this;
}
void CreateGuildResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateGuildResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateGuildResponse& CreateGuildResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateGuildResponse_chat_2fv1_2fguilds_2eproto.base);
  return *internal_default_instance();
}


void CreateGuildResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.chat.v1.CreateGuildResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guild_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateGuildResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 guild_id = 1 [jstype = JS_STRING];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateGuildResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.chat.v1.CreateGuildResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guild_id = 1 [jstype = JS_STRING];
  if (this->guild_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_guild_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.chat.v1.CreateGuildResponse)
  return target;
}

size_t CreateGuildResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.chat.v1.CreateGuildResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 guild_id = 1 [jstype = JS_STRING];
  if (this->guild_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_guild_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateGuildResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.chat.v1.CreateGuildResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateGuildResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateGuildResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.chat.v1.CreateGuildResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.chat.v1.CreateGuildResponse)
    MergeFrom(*source);
  }
}

void CreateGuildResponse::MergeFrom(const CreateGuildResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.chat.v1.CreateGuildResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.guild_id() != 0) {
    _internal_set_guild_id(from._internal_guild_id());
  }
}

void CreateGuildResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.chat.v1.CreateGuildResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateGuildResponse::CopyFrom(const CreateGuildResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.chat.v1.CreateGuildResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateGuildResponse::IsInitialized() const {
  return true;
}

void CreateGuildResponse::InternalSwap(CreateGuildResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(guild_id_, other->guild_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateGuildResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateInviteRequest::InitAsDefaultInstance() {
}
class CreateInviteRequest::_Internal {
 public:
};

CreateInviteRequest::CreateInviteRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.chat.v1.CreateInviteRequest)
}
CreateInviteRequest::CreateInviteRequest(const CreateInviteRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  ::memcpy(&guild_id_, &from.guild_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&possible_uses_) -
    reinterpret_cast<char*>(&guild_id_)) + sizeof(possible_uses_));
  // @@protoc_insertion_point(copy_constructor:protocol.chat.v1.CreateInviteRequest)
}

void CreateInviteRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateInviteRequest_chat_2fv1_2fguilds_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&guild_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&possible_uses_) -
      reinterpret_cast<char*>(&guild_id_)) + sizeof(possible_uses_));
}

CreateInviteRequest::~CreateInviteRequest() {
  // @@protoc_insertion_point(destructor:protocol.chat.v1.CreateInviteRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateInviteRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CreateInviteRequest::ArenaDtor(void* object) {
  CreateInviteRequest* _this = reinterpret_cast< CreateInviteRequest* >(object);
  (void)_this;
}
void CreateInviteRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateInviteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateInviteRequest& CreateInviteRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateInviteRequest_chat_2fv1_2fguilds_2eproto.base);
  return *internal_default_instance();
}


void CreateInviteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.chat.v1.CreateInviteRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&guild_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&possible_uses_) -
      reinterpret_cast<char*>(&guild_id_)) + sizeof(possible_uses_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateInviteRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 guild_id = 1 [jstype = JS_STRING];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.chat.v1.CreateInviteRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 possible_uses = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          possible_uses_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateInviteRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.chat.v1.CreateInviteRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guild_id = 1 [jstype = JS_STRING];
  if (this->guild_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_guild_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.chat.v1.CreateInviteRequest.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // int32 possible_uses = 3;
  if (this->possible_uses() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_possible_uses(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.chat.v1.CreateInviteRequest)
  return target;
}

size_t CreateInviteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.chat.v1.CreateInviteRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // uint64 guild_id = 1 [jstype = JS_STRING];
  if (this->guild_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_guild_id());
  }

  // int32 possible_uses = 3;
  if (this->possible_uses() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_possible_uses());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateInviteRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.chat.v1.CreateInviteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateInviteRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateInviteRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.chat.v1.CreateInviteRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.chat.v1.CreateInviteRequest)
    MergeFrom(*source);
  }
}

void CreateInviteRequest::MergeFrom(const CreateInviteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.chat.v1.CreateInviteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.guild_id() != 0) {
    _internal_set_guild_id(from._internal_guild_id());
  }
  if (from.possible_uses() != 0) {
    _internal_set_possible_uses(from._internal_possible_uses());
  }
}

void CreateInviteRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.chat.v1.CreateInviteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateInviteRequest::CopyFrom(const CreateInviteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.chat.v1.CreateInviteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateInviteRequest::IsInitialized() const {
  return true;
}

void CreateInviteRequest::InternalSwap(CreateInviteRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateInviteRequest, possible_uses_)
      + sizeof(CreateInviteRequest::possible_uses_)
      - PROTOBUF_FIELD_OFFSET(CreateInviteRequest, guild_id_)>(
          reinterpret_cast<char*>(&guild_id_),
          reinterpret_cast<char*>(&other->guild_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateInviteRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateInviteResponse::InitAsDefaultInstance() {
}
class CreateInviteResponse::_Internal {
 public:
};

CreateInviteResponse::CreateInviteResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.chat.v1.CreateInviteResponse)
}
CreateInviteResponse::CreateInviteResponse(const CreateInviteResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:protocol.chat.v1.CreateInviteResponse)
}

void CreateInviteResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateInviteResponse_chat_2fv1_2fguilds_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CreateInviteResponse::~CreateInviteResponse() {
  // @@protoc_insertion_point(destructor:protocol.chat.v1.CreateInviteResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateInviteResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CreateInviteResponse::ArenaDtor(void* object) {
  CreateInviteResponse* _this = reinterpret_cast< CreateInviteResponse* >(object);
  (void)_this;
}
void CreateInviteResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateInviteResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateInviteResponse& CreateInviteResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateInviteResponse_chat_2fv1_2fguilds_2eproto.base);
  return *internal_default_instance();
}


void CreateInviteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.chat.v1.CreateInviteResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateInviteResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.chat.v1.CreateInviteResponse.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateInviteResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.chat.v1.CreateInviteResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.chat.v1.CreateInviteResponse.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.chat.v1.CreateInviteResponse)
  return target;
}

size_t CreateInviteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.chat.v1.CreateInviteResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateInviteResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.chat.v1.CreateInviteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateInviteResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateInviteResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.chat.v1.CreateInviteResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.chat.v1.CreateInviteResponse)
    MergeFrom(*source);
  }
}

void CreateInviteResponse::MergeFrom(const CreateInviteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.chat.v1.CreateInviteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void CreateInviteResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.chat.v1.CreateInviteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateInviteResponse::CopyFrom(const CreateInviteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.chat.v1.CreateInviteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateInviteResponse::IsInitialized() const {
  return true;
}

void CreateInviteResponse::InternalSwap(CreateInviteResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateInviteResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetGuildListRequest::InitAsDefaultInstance() {
}
class GetGuildListRequest::_Internal {
 public:
};

GetGuildListRequest::GetGuildListRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.chat.v1.GetGuildListRequest)
}
GetGuildListRequest::GetGuildListRequest(const GetGuildListRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protocol.chat.v1.GetGuildListRequest)
}

void GetGuildListRequest::SharedCtor() {
}

GetGuildListRequest::~GetGuildListRequest() {
  // @@protoc_insertion_point(destructor:protocol.chat.v1.GetGuildListRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetGuildListRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetGuildListRequest::ArenaDtor(void* object) {
  GetGuildListRequest* _this = reinterpret_cast< GetGuildListRequest* >(object);
  (void)_this;
}
void GetGuildListRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetGuildListRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetGuildListRequest& GetGuildListRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetGuildListRequest_chat_2fv1_2fguilds_2eproto.base);
  return *internal_default_instance();
}


void GetGuildListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.chat.v1.GetGuildListRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGuildListRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetGuildListRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.chat.v1.GetGuildListRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.chat.v1.GetGuildListRequest)
  return target;
}

size_t GetGuildListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.chat.v1.GetGuildListRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetGuildListRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.chat.v1.GetGuildListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetGuildListRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetGuildListRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.chat.v1.GetGuildListRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.chat.v1.GetGuildListRequest)
    MergeFrom(*source);
  }
}

void GetGuildListRequest::MergeFrom(const GetGuildListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.chat.v1.GetGuildListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetGuildListRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.chat.v1.GetGuildListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetGuildListRequest::CopyFrom(const GetGuildListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.chat.v1.GetGuildListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGuildListRequest::IsInitialized() const {
  return true;
}

void GetGuildListRequest::InternalSwap(GetGuildListRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGuildListRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetGuildListResponse_GuildListEntry::InitAsDefaultInstance() {
}
class GetGuildListResponse_GuildListEntry::_Internal {
 public:
};

GetGuildListResponse_GuildListEntry::GetGuildListResponse_GuildListEntry(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.chat.v1.GetGuildListResponse.GuildListEntry)
}
GetGuildListResponse_GuildListEntry::GetGuildListResponse_GuildListEntry(const GetGuildListResponse_GuildListEntry& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  host_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_host().empty()) {
    host_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_host(),
      GetArena());
  }
  guild_id_ = from.guild_id_;
  // @@protoc_insertion_point(copy_constructor:protocol.chat.v1.GetGuildListResponse.GuildListEntry)
}

void GetGuildListResponse_GuildListEntry::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetGuildListResponse_GuildListEntry_chat_2fv1_2fguilds_2eproto.base);
  host_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  guild_id_ = PROTOBUF_ULONGLONG(0);
}

GetGuildListResponse_GuildListEntry::~GetGuildListResponse_GuildListEntry() {
  // @@protoc_insertion_point(destructor:protocol.chat.v1.GetGuildListResponse.GuildListEntry)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetGuildListResponse_GuildListEntry::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  host_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetGuildListResponse_GuildListEntry::ArenaDtor(void* object) {
  GetGuildListResponse_GuildListEntry* _this = reinterpret_cast< GetGuildListResponse_GuildListEntry* >(object);
  (void)_this;
}
void GetGuildListResponse_GuildListEntry::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetGuildListResponse_GuildListEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetGuildListResponse_GuildListEntry& GetGuildListResponse_GuildListEntry::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetGuildListResponse_GuildListEntry_chat_2fv1_2fguilds_2eproto.base);
  return *internal_default_instance();
}


void GetGuildListResponse_GuildListEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.chat.v1.GetGuildListResponse.GuildListEntry)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  host_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  guild_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGuildListResponse_GuildListEntry::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 guild_id = 1 [jstype = JS_STRING];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string host = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_host();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.chat.v1.GetGuildListResponse.GuildListEntry.host"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetGuildListResponse_GuildListEntry::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.chat.v1.GetGuildListResponse.GuildListEntry)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guild_id = 1 [jstype = JS_STRING];
  if (this->guild_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_guild_id(), target);
  }

  // string host = 2;
  if (this->host().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_host().data(), static_cast<int>(this->_internal_host().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.chat.v1.GetGuildListResponse.GuildListEntry.host");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_host(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.chat.v1.GetGuildListResponse.GuildListEntry)
  return target;
}

size_t GetGuildListResponse_GuildListEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.chat.v1.GetGuildListResponse.GuildListEntry)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string host = 2;
  if (this->host().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_host());
  }

  // uint64 guild_id = 1 [jstype = JS_STRING];
  if (this->guild_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_guild_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetGuildListResponse_GuildListEntry::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.chat.v1.GetGuildListResponse.GuildListEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const GetGuildListResponse_GuildListEntry* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetGuildListResponse_GuildListEntry>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.chat.v1.GetGuildListResponse.GuildListEntry)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.chat.v1.GetGuildListResponse.GuildListEntry)
    MergeFrom(*source);
  }
}

void GetGuildListResponse_GuildListEntry::MergeFrom(const GetGuildListResponse_GuildListEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.chat.v1.GetGuildListResponse.GuildListEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.host().size() > 0) {
    _internal_set_host(from._internal_host());
  }
  if (from.guild_id() != 0) {
    _internal_set_guild_id(from._internal_guild_id());
  }
}

void GetGuildListResponse_GuildListEntry::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.chat.v1.GetGuildListResponse.GuildListEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetGuildListResponse_GuildListEntry::CopyFrom(const GetGuildListResponse_GuildListEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.chat.v1.GetGuildListResponse.GuildListEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGuildListResponse_GuildListEntry::IsInitialized() const {
  return true;
}

void GetGuildListResponse_GuildListEntry::InternalSwap(GetGuildListResponse_GuildListEntry* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  host_.Swap(&other->host_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(guild_id_, other->guild_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGuildListResponse_GuildListEntry::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetGuildListResponse::InitAsDefaultInstance() {
}
class GetGuildListResponse::_Internal {
 public:
};

GetGuildListResponse::GetGuildListResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  guilds_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.chat.v1.GetGuildListResponse)
}
GetGuildListResponse::GetGuildListResponse(const GetGuildListResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      guilds_(from.guilds_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protocol.chat.v1.GetGuildListResponse)
}

void GetGuildListResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetGuildListResponse_chat_2fv1_2fguilds_2eproto.base);
}

GetGuildListResponse::~GetGuildListResponse() {
  // @@protoc_insertion_point(destructor:protocol.chat.v1.GetGuildListResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetGuildListResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetGuildListResponse::ArenaDtor(void* object) {
  GetGuildListResponse* _this = reinterpret_cast< GetGuildListResponse* >(object);
  (void)_this;
}
void GetGuildListResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetGuildListResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetGuildListResponse& GetGuildListResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetGuildListResponse_chat_2fv1_2fguilds_2eproto.base);
  return *internal_default_instance();
}


void GetGuildListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.chat.v1.GetGuildListResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guilds_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGuildListResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .protocol.chat.v1.GetGuildListResponse.GuildListEntry guilds = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_guilds(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetGuildListResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.chat.v1.GetGuildListResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protocol.chat.v1.GetGuildListResponse.GuildListEntry guilds = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_guilds_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_guilds(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.chat.v1.GetGuildListResponse)
  return target;
}

size_t GetGuildListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.chat.v1.GetGuildListResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protocol.chat.v1.GetGuildListResponse.GuildListEntry guilds = 1;
  total_size += 1UL * this->_internal_guilds_size();
  for (const auto& msg : this->guilds_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetGuildListResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.chat.v1.GetGuildListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetGuildListResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetGuildListResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.chat.v1.GetGuildListResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.chat.v1.GetGuildListResponse)
    MergeFrom(*source);
  }
}

void GetGuildListResponse::MergeFrom(const GetGuildListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.chat.v1.GetGuildListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  guilds_.MergeFrom(from.guilds_);
}

void GetGuildListResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.chat.v1.GetGuildListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetGuildListResponse::CopyFrom(const GetGuildListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.chat.v1.GetGuildListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGuildListResponse::IsInitialized() const {
  return true;
}

void GetGuildListResponse::InternalSwap(GetGuildListResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  guilds_.InternalSwap(&other->guilds_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGuildListResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetGuildRequest::InitAsDefaultInstance() {
}
class GetGuildRequest::_Internal {
 public:
};

GetGuildRequest::GetGuildRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.chat.v1.GetGuildRequest)
}
GetGuildRequest::GetGuildRequest(const GetGuildRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  guild_id_ = from.guild_id_;
  // @@protoc_insertion_point(copy_constructor:protocol.chat.v1.GetGuildRequest)
}

void GetGuildRequest::SharedCtor() {
  guild_id_ = PROTOBUF_ULONGLONG(0);
}

GetGuildRequest::~GetGuildRequest() {
  // @@protoc_insertion_point(destructor:protocol.chat.v1.GetGuildRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetGuildRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetGuildRequest::ArenaDtor(void* object) {
  GetGuildRequest* _this = reinterpret_cast< GetGuildRequest* >(object);
  (void)_this;
}
void GetGuildRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetGuildRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetGuildRequest& GetGuildRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetGuildRequest_chat_2fv1_2fguilds_2eproto.base);
  return *internal_default_instance();
}


void GetGuildRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.chat.v1.GetGuildRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guild_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGuildRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 guild_id = 1 [jstype = JS_STRING];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetGuildRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.chat.v1.GetGuildRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guild_id = 1 [jstype = JS_STRING];
  if (this->guild_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_guild_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.chat.v1.GetGuildRequest)
  return target;
}

size_t GetGuildRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.chat.v1.GetGuildRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 guild_id = 1 [jstype = JS_STRING];
  if (this->guild_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_guild_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetGuildRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.chat.v1.GetGuildRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetGuildRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetGuildRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.chat.v1.GetGuildRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.chat.v1.GetGuildRequest)
    MergeFrom(*source);
  }
}

void GetGuildRequest::MergeFrom(const GetGuildRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.chat.v1.GetGuildRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.guild_id() != 0) {
    _internal_set_guild_id(from._internal_guild_id());
  }
}

void GetGuildRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.chat.v1.GetGuildRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetGuildRequest::CopyFrom(const GetGuildRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.chat.v1.GetGuildRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGuildRequest::IsInitialized() const {
  return true;
}

void GetGuildRequest::InternalSwap(GetGuildRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(guild_id_, other->guild_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGuildRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetGuildResponse::InitAsDefaultInstance() {
  ::protocol::chat::v1::_GetGuildResponse_default_instance_._instance.get_mutable()->metadata_ = const_cast< ::protocol::harmonytypes::v1::Metadata*>(
      ::protocol::harmonytypes::v1::Metadata::internal_default_instance());
}
class GetGuildResponse::_Internal {
 public:
  static const ::protocol::harmonytypes::v1::Metadata& metadata(const GetGuildResponse* msg);
};

const ::protocol::harmonytypes::v1::Metadata&
GetGuildResponse::_Internal::metadata(const GetGuildResponse* msg) {
  return *msg->metadata_;
}
void GetGuildResponse::clear_metadata() {
  if (GetArena() == nullptr && metadata_ != nullptr) {
    delete metadata_;
  }
  metadata_ = nullptr;
}
GetGuildResponse::GetGuildResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.chat.v1.GetGuildResponse)
}
GetGuildResponse::GetGuildResponse(const GetGuildResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  guild_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_guild_name().empty()) {
    guild_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_guild_name(),
      GetArena());
  }
  guild_picture_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_guild_picture().empty()) {
    guild_picture_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_guild_picture(),
      GetArena());
  }
  if (from._internal_has_metadata()) {
    metadata_ = new ::protocol::harmonytypes::v1::Metadata(*from.metadata_);
  } else {
    metadata_ = nullptr;
  }
  guild_owner_ = from.guild_owner_;
  // @@protoc_insertion_point(copy_constructor:protocol.chat.v1.GetGuildResponse)
}

void GetGuildResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetGuildResponse_chat_2fv1_2fguilds_2eproto.base);
  guild_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  guild_picture_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&metadata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&guild_owner_) -
      reinterpret_cast<char*>(&metadata_)) + sizeof(guild_owner_));
}

GetGuildResponse::~GetGuildResponse() {
  // @@protoc_insertion_point(destructor:protocol.chat.v1.GetGuildResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetGuildResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  guild_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  guild_picture_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete metadata_;
}

void GetGuildResponse::ArenaDtor(void* object) {
  GetGuildResponse* _this = reinterpret_cast< GetGuildResponse* >(object);
  (void)_this;
}
void GetGuildResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetGuildResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetGuildResponse& GetGuildResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetGuildResponse_chat_2fv1_2fguilds_2eproto.base);
  return *internal_default_instance();
}


void GetGuildResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.chat.v1.GetGuildResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guild_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  guild_picture_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && metadata_ != nullptr) {
    delete metadata_;
  }
  metadata_ = nullptr;
  guild_owner_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGuildResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string guild_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_guild_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.chat.v1.GetGuildResponse.guild_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 guild_owner = 2 [jstype = JS_STRING];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          guild_owner_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string guild_picture = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_guild_picture();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.chat.v1.GetGuildResponse.guild_picture"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .protocol.harmonytypes.v1.Metadata metadata = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_metadata(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetGuildResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.chat.v1.GetGuildResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string guild_name = 1;
  if (this->guild_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_guild_name().data(), static_cast<int>(this->_internal_guild_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.chat.v1.GetGuildResponse.guild_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_guild_name(), target);
  }

  // uint64 guild_owner = 2 [jstype = JS_STRING];
  if (this->guild_owner() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_guild_owner(), target);
  }

  // string guild_picture = 3;
  if (this->guild_picture().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_guild_picture().data(), static_cast<int>(this->_internal_guild_picture().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.chat.v1.GetGuildResponse.guild_picture");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_guild_picture(), target);
  }

  // .protocol.harmonytypes.v1.Metadata metadata = 4;
  if (this->has_metadata()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::metadata(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.chat.v1.GetGuildResponse)
  return target;
}

size_t GetGuildResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.chat.v1.GetGuildResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string guild_name = 1;
  if (this->guild_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_guild_name());
  }

  // string guild_picture = 3;
  if (this->guild_picture().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_guild_picture());
  }

  // .protocol.harmonytypes.v1.Metadata metadata = 4;
  if (this->has_metadata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *metadata_);
  }

  // uint64 guild_owner = 2 [jstype = JS_STRING];
  if (this->guild_owner() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_guild_owner());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetGuildResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.chat.v1.GetGuildResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetGuildResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetGuildResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.chat.v1.GetGuildResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.chat.v1.GetGuildResponse)
    MergeFrom(*source);
  }
}

void GetGuildResponse::MergeFrom(const GetGuildResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.chat.v1.GetGuildResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.guild_name().size() > 0) {
    _internal_set_guild_name(from._internal_guild_name());
  }
  if (from.guild_picture().size() > 0) {
    _internal_set_guild_picture(from._internal_guild_picture());
  }
  if (from.has_metadata()) {
    _internal_mutable_metadata()->::protocol::harmonytypes::v1::Metadata::MergeFrom(from._internal_metadata());
  }
  if (from.guild_owner() != 0) {
    _internal_set_guild_owner(from._internal_guild_owner());
  }
}

void GetGuildResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.chat.v1.GetGuildResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetGuildResponse::CopyFrom(const GetGuildResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.chat.v1.GetGuildResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGuildResponse::IsInitialized() const {
  return true;
}

void GetGuildResponse::InternalSwap(GetGuildResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  guild_name_.Swap(&other->guild_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  guild_picture_.Swap(&other->guild_picture_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetGuildResponse, guild_owner_)
      + sizeof(GetGuildResponse::guild_owner_)
      - PROTOBUF_FIELD_OFFSET(GetGuildResponse, metadata_)>(
          reinterpret_cast<char*>(&metadata_),
          reinterpret_cast<char*>(&other->metadata_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGuildResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetGuildInvitesRequest::InitAsDefaultInstance() {
}
class GetGuildInvitesRequest::_Internal {
 public:
};

GetGuildInvitesRequest::GetGuildInvitesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.chat.v1.GetGuildInvitesRequest)
}
GetGuildInvitesRequest::GetGuildInvitesRequest(const GetGuildInvitesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  guild_id_ = from.guild_id_;
  // @@protoc_insertion_point(copy_constructor:protocol.chat.v1.GetGuildInvitesRequest)
}

void GetGuildInvitesRequest::SharedCtor() {
  guild_id_ = PROTOBUF_ULONGLONG(0);
}

GetGuildInvitesRequest::~GetGuildInvitesRequest() {
  // @@protoc_insertion_point(destructor:protocol.chat.v1.GetGuildInvitesRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetGuildInvitesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetGuildInvitesRequest::ArenaDtor(void* object) {
  GetGuildInvitesRequest* _this = reinterpret_cast< GetGuildInvitesRequest* >(object);
  (void)_this;
}
void GetGuildInvitesRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetGuildInvitesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetGuildInvitesRequest& GetGuildInvitesRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetGuildInvitesRequest_chat_2fv1_2fguilds_2eproto.base);
  return *internal_default_instance();
}


void GetGuildInvitesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.chat.v1.GetGuildInvitesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guild_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGuildInvitesRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 guild_id = 1 [jstype = JS_STRING];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetGuildInvitesRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.chat.v1.GetGuildInvitesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guild_id = 1 [jstype = JS_STRING];
  if (this->guild_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_guild_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.chat.v1.GetGuildInvitesRequest)
  return target;
}

size_t GetGuildInvitesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.chat.v1.GetGuildInvitesRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 guild_id = 1 [jstype = JS_STRING];
  if (this->guild_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_guild_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetGuildInvitesRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.chat.v1.GetGuildInvitesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetGuildInvitesRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetGuildInvitesRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.chat.v1.GetGuildInvitesRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.chat.v1.GetGuildInvitesRequest)
    MergeFrom(*source);
  }
}

void GetGuildInvitesRequest::MergeFrom(const GetGuildInvitesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.chat.v1.GetGuildInvitesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.guild_id() != 0) {
    _internal_set_guild_id(from._internal_guild_id());
  }
}

void GetGuildInvitesRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.chat.v1.GetGuildInvitesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetGuildInvitesRequest::CopyFrom(const GetGuildInvitesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.chat.v1.GetGuildInvitesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGuildInvitesRequest::IsInitialized() const {
  return true;
}

void GetGuildInvitesRequest::InternalSwap(GetGuildInvitesRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(guild_id_, other->guild_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGuildInvitesRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetGuildInvitesResponse_Invite::InitAsDefaultInstance() {
}
class GetGuildInvitesResponse_Invite::_Internal {
 public:
};

GetGuildInvitesResponse_Invite::GetGuildInvitesResponse_Invite(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.chat.v1.GetGuildInvitesResponse.Invite)
}
GetGuildInvitesResponse_Invite::GetGuildInvitesResponse_Invite(const GetGuildInvitesResponse_Invite& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  invite_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_invite_id().empty()) {
    invite_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_invite_id(),
      GetArena());
  }
  ::memcpy(&possible_uses_, &from.possible_uses_,
    static_cast<size_t>(reinterpret_cast<char*>(&use_count_) -
    reinterpret_cast<char*>(&possible_uses_)) + sizeof(use_count_));
  // @@protoc_insertion_point(copy_constructor:protocol.chat.v1.GetGuildInvitesResponse.Invite)
}

void GetGuildInvitesResponse_Invite::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetGuildInvitesResponse_Invite_chat_2fv1_2fguilds_2eproto.base);
  invite_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&possible_uses_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&use_count_) -
      reinterpret_cast<char*>(&possible_uses_)) + sizeof(use_count_));
}

GetGuildInvitesResponse_Invite::~GetGuildInvitesResponse_Invite() {
  // @@protoc_insertion_point(destructor:protocol.chat.v1.GetGuildInvitesResponse.Invite)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetGuildInvitesResponse_Invite::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  invite_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetGuildInvitesResponse_Invite::ArenaDtor(void* object) {
  GetGuildInvitesResponse_Invite* _this = reinterpret_cast< GetGuildInvitesResponse_Invite* >(object);
  (void)_this;
}
void GetGuildInvitesResponse_Invite::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetGuildInvitesResponse_Invite::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetGuildInvitesResponse_Invite& GetGuildInvitesResponse_Invite::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetGuildInvitesResponse_Invite_chat_2fv1_2fguilds_2eproto.base);
  return *internal_default_instance();
}


void GetGuildInvitesResponse_Invite::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.chat.v1.GetGuildInvitesResponse.Invite)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  invite_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&possible_uses_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&use_count_) -
      reinterpret_cast<char*>(&possible_uses_)) + sizeof(use_count_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGuildInvitesResponse_Invite::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string invite_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_invite_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.chat.v1.GetGuildInvitesResponse.Invite.invite_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 possible_uses = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          possible_uses_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 use_count = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          use_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetGuildInvitesResponse_Invite::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.chat.v1.GetGuildInvitesResponse.Invite)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string invite_id = 1;
  if (this->invite_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_invite_id().data(), static_cast<int>(this->_internal_invite_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.chat.v1.GetGuildInvitesResponse.Invite.invite_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_invite_id(), target);
  }

  // int32 possible_uses = 2;
  if (this->possible_uses() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_possible_uses(), target);
  }

  // int32 use_count = 3;
  if (this->use_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_use_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.chat.v1.GetGuildInvitesResponse.Invite)
  return target;
}

size_t GetGuildInvitesResponse_Invite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.chat.v1.GetGuildInvitesResponse.Invite)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string invite_id = 1;
  if (this->invite_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_invite_id());
  }

  // int32 possible_uses = 2;
  if (this->possible_uses() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_possible_uses());
  }

  // int32 use_count = 3;
  if (this->use_count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_use_count());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetGuildInvitesResponse_Invite::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.chat.v1.GetGuildInvitesResponse.Invite)
  GOOGLE_DCHECK_NE(&from, this);
  const GetGuildInvitesResponse_Invite* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetGuildInvitesResponse_Invite>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.chat.v1.GetGuildInvitesResponse.Invite)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.chat.v1.GetGuildInvitesResponse.Invite)
    MergeFrom(*source);
  }
}

void GetGuildInvitesResponse_Invite::MergeFrom(const GetGuildInvitesResponse_Invite& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.chat.v1.GetGuildInvitesResponse.Invite)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.invite_id().size() > 0) {
    _internal_set_invite_id(from._internal_invite_id());
  }
  if (from.possible_uses() != 0) {
    _internal_set_possible_uses(from._internal_possible_uses());
  }
  if (from.use_count() != 0) {
    _internal_set_use_count(from._internal_use_count());
  }
}

void GetGuildInvitesResponse_Invite::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.chat.v1.GetGuildInvitesResponse.Invite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetGuildInvitesResponse_Invite::CopyFrom(const GetGuildInvitesResponse_Invite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.chat.v1.GetGuildInvitesResponse.Invite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGuildInvitesResponse_Invite::IsInitialized() const {
  return true;
}

void GetGuildInvitesResponse_Invite::InternalSwap(GetGuildInvitesResponse_Invite* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  invite_id_.Swap(&other->invite_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetGuildInvitesResponse_Invite, use_count_)
      + sizeof(GetGuildInvitesResponse_Invite::use_count_)
      - PROTOBUF_FIELD_OFFSET(GetGuildInvitesResponse_Invite, possible_uses_)>(
          reinterpret_cast<char*>(&possible_uses_),
          reinterpret_cast<char*>(&other->possible_uses_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGuildInvitesResponse_Invite::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetGuildInvitesResponse::InitAsDefaultInstance() {
}
class GetGuildInvitesResponse::_Internal {
 public:
};

GetGuildInvitesResponse::GetGuildInvitesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  invites_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.chat.v1.GetGuildInvitesResponse)
}
GetGuildInvitesResponse::GetGuildInvitesResponse(const GetGuildInvitesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      invites_(from.invites_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protocol.chat.v1.GetGuildInvitesResponse)
}

void GetGuildInvitesResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetGuildInvitesResponse_chat_2fv1_2fguilds_2eproto.base);
}

GetGuildInvitesResponse::~GetGuildInvitesResponse() {
  // @@protoc_insertion_point(destructor:protocol.chat.v1.GetGuildInvitesResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetGuildInvitesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetGuildInvitesResponse::ArenaDtor(void* object) {
  GetGuildInvitesResponse* _this = reinterpret_cast< GetGuildInvitesResponse* >(object);
  (void)_this;
}
void GetGuildInvitesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetGuildInvitesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetGuildInvitesResponse& GetGuildInvitesResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetGuildInvitesResponse_chat_2fv1_2fguilds_2eproto.base);
  return *internal_default_instance();
}


void GetGuildInvitesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.chat.v1.GetGuildInvitesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  invites_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGuildInvitesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .protocol.chat.v1.GetGuildInvitesResponse.Invite invites = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_invites(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetGuildInvitesResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.chat.v1.GetGuildInvitesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protocol.chat.v1.GetGuildInvitesResponse.Invite invites = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_invites_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_invites(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.chat.v1.GetGuildInvitesResponse)
  return target;
}

size_t GetGuildInvitesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.chat.v1.GetGuildInvitesResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protocol.chat.v1.GetGuildInvitesResponse.Invite invites = 1;
  total_size += 1UL * this->_internal_invites_size();
  for (const auto& msg : this->invites_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetGuildInvitesResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.chat.v1.GetGuildInvitesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetGuildInvitesResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetGuildInvitesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.chat.v1.GetGuildInvitesResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.chat.v1.GetGuildInvitesResponse)
    MergeFrom(*source);
  }
}

void GetGuildInvitesResponse::MergeFrom(const GetGuildInvitesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.chat.v1.GetGuildInvitesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  invites_.MergeFrom(from.invites_);
}

void GetGuildInvitesResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.chat.v1.GetGuildInvitesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetGuildInvitesResponse::CopyFrom(const GetGuildInvitesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.chat.v1.GetGuildInvitesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGuildInvitesResponse::IsInitialized() const {
  return true;
}

void GetGuildInvitesResponse::InternalSwap(GetGuildInvitesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  invites_.InternalSwap(&other->invites_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGuildInvitesResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetGuildMembersRequest::InitAsDefaultInstance() {
}
class GetGuildMembersRequest::_Internal {
 public:
};

GetGuildMembersRequest::GetGuildMembersRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.chat.v1.GetGuildMembersRequest)
}
GetGuildMembersRequest::GetGuildMembersRequest(const GetGuildMembersRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  guild_id_ = from.guild_id_;
  // @@protoc_insertion_point(copy_constructor:protocol.chat.v1.GetGuildMembersRequest)
}

void GetGuildMembersRequest::SharedCtor() {
  guild_id_ = PROTOBUF_ULONGLONG(0);
}

GetGuildMembersRequest::~GetGuildMembersRequest() {
  // @@protoc_insertion_point(destructor:protocol.chat.v1.GetGuildMembersRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetGuildMembersRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetGuildMembersRequest::ArenaDtor(void* object) {
  GetGuildMembersRequest* _this = reinterpret_cast< GetGuildMembersRequest* >(object);
  (void)_this;
}
void GetGuildMembersRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetGuildMembersRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetGuildMembersRequest& GetGuildMembersRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetGuildMembersRequest_chat_2fv1_2fguilds_2eproto.base);
  return *internal_default_instance();
}


void GetGuildMembersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.chat.v1.GetGuildMembersRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guild_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGuildMembersRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 guild_id = 1 [jstype = JS_STRING];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetGuildMembersRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.chat.v1.GetGuildMembersRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guild_id = 1 [jstype = JS_STRING];
  if (this->guild_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_guild_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.chat.v1.GetGuildMembersRequest)
  return target;
}

size_t GetGuildMembersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.chat.v1.GetGuildMembersRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 guild_id = 1 [jstype = JS_STRING];
  if (this->guild_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_guild_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetGuildMembersRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.chat.v1.GetGuildMembersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetGuildMembersRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetGuildMembersRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.chat.v1.GetGuildMembersRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.chat.v1.GetGuildMembersRequest)
    MergeFrom(*source);
  }
}

void GetGuildMembersRequest::MergeFrom(const GetGuildMembersRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.chat.v1.GetGuildMembersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.guild_id() != 0) {
    _internal_set_guild_id(from._internal_guild_id());
  }
}

void GetGuildMembersRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.chat.v1.GetGuildMembersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetGuildMembersRequest::CopyFrom(const GetGuildMembersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.chat.v1.GetGuildMembersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGuildMembersRequest::IsInitialized() const {
  return true;
}

void GetGuildMembersRequest::InternalSwap(GetGuildMembersRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(guild_id_, other->guild_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGuildMembersRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetGuildMembersResponse::InitAsDefaultInstance() {
}
class GetGuildMembersResponse::_Internal {
 public:
};

GetGuildMembersResponse::GetGuildMembersResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  members_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.chat.v1.GetGuildMembersResponse)
}
GetGuildMembersResponse::GetGuildMembersResponse(const GetGuildMembersResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      members_(from.members_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protocol.chat.v1.GetGuildMembersResponse)
}

void GetGuildMembersResponse::SharedCtor() {
}

GetGuildMembersResponse::~GetGuildMembersResponse() {
  // @@protoc_insertion_point(destructor:protocol.chat.v1.GetGuildMembersResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetGuildMembersResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetGuildMembersResponse::ArenaDtor(void* object) {
  GetGuildMembersResponse* _this = reinterpret_cast< GetGuildMembersResponse* >(object);
  (void)_this;
}
void GetGuildMembersResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetGuildMembersResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetGuildMembersResponse& GetGuildMembersResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetGuildMembersResponse_chat_2fv1_2fguilds_2eproto.base);
  return *internal_default_instance();
}


void GetGuildMembersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.chat.v1.GetGuildMembersResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  members_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGuildMembersResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated uint64 members = 1 [jstype = JS_STRING];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_members(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8) {
          _internal_add_members(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetGuildMembersResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.chat.v1.GetGuildMembersResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 members = 1 [jstype = JS_STRING];
  {
    int byte_size = _members_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          1, _internal_members(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.chat.v1.GetGuildMembersResponse)
  return target;
}

size_t GetGuildMembersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.chat.v1.GetGuildMembersResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 members = 1 [jstype = JS_STRING];
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt64Size(this->members_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _members_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetGuildMembersResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.chat.v1.GetGuildMembersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetGuildMembersResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetGuildMembersResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.chat.v1.GetGuildMembersResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.chat.v1.GetGuildMembersResponse)
    MergeFrom(*source);
  }
}

void GetGuildMembersResponse::MergeFrom(const GetGuildMembersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.chat.v1.GetGuildMembersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  members_.MergeFrom(from.members_);
}

void GetGuildMembersResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.chat.v1.GetGuildMembersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetGuildMembersResponse::CopyFrom(const GetGuildMembersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.chat.v1.GetGuildMembersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGuildMembersResponse::IsInitialized() const {
  return true;
}

void GetGuildMembersResponse::InternalSwap(GetGuildMembersResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  members_.InternalSwap(&other->members_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGuildMembersResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateGuildInformationRequest::InitAsDefaultInstance() {
  ::protocol::chat::v1::_UpdateGuildInformationRequest_default_instance_._instance.get_mutable()->metadata_ = const_cast< ::protocol::harmonytypes::v1::Metadata*>(
      ::protocol::harmonytypes::v1::Metadata::internal_default_instance());
}
class UpdateGuildInformationRequest::_Internal {
 public:
  static const ::protocol::harmonytypes::v1::Metadata& metadata(const UpdateGuildInformationRequest* msg);
};

const ::protocol::harmonytypes::v1::Metadata&
UpdateGuildInformationRequest::_Internal::metadata(const UpdateGuildInformationRequest* msg) {
  return *msg->metadata_;
}
void UpdateGuildInformationRequest::clear_metadata() {
  if (GetArena() == nullptr && metadata_ != nullptr) {
    delete metadata_;
  }
  metadata_ = nullptr;
}
UpdateGuildInformationRequest::UpdateGuildInformationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.chat.v1.UpdateGuildInformationRequest)
}
UpdateGuildInformationRequest::UpdateGuildInformationRequest(const UpdateGuildInformationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  new_guild_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_new_guild_name().empty()) {
    new_guild_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_new_guild_name(),
      GetArena());
  }
  new_guild_picture_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_new_guild_picture().empty()) {
    new_guild_picture_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_new_guild_picture(),
      GetArena());
  }
  if (from._internal_has_metadata()) {
    metadata_ = new ::protocol::harmonytypes::v1::Metadata(*from.metadata_);
  } else {
    metadata_ = nullptr;
  }
  ::memcpy(&guild_id_, &from.guild_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&update_metadata_) -
    reinterpret_cast<char*>(&guild_id_)) + sizeof(update_metadata_));
  // @@protoc_insertion_point(copy_constructor:protocol.chat.v1.UpdateGuildInformationRequest)
}

void UpdateGuildInformationRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateGuildInformationRequest_chat_2fv1_2fguilds_2eproto.base);
  new_guild_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  new_guild_picture_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&metadata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&update_metadata_) -
      reinterpret_cast<char*>(&metadata_)) + sizeof(update_metadata_));
}

UpdateGuildInformationRequest::~UpdateGuildInformationRequest() {
  // @@protoc_insertion_point(destructor:protocol.chat.v1.UpdateGuildInformationRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateGuildInformationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  new_guild_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  new_guild_picture_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete metadata_;
}

void UpdateGuildInformationRequest::ArenaDtor(void* object) {
  UpdateGuildInformationRequest* _this = reinterpret_cast< UpdateGuildInformationRequest* >(object);
  (void)_this;
}
void UpdateGuildInformationRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateGuildInformationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateGuildInformationRequest& UpdateGuildInformationRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateGuildInformationRequest_chat_2fv1_2fguilds_2eproto.base);
  return *internal_default_instance();
}


void UpdateGuildInformationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.chat.v1.UpdateGuildInformationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  new_guild_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  new_guild_picture_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && metadata_ != nullptr) {
    delete metadata_;
  }
  metadata_ = nullptr;
  ::memset(&guild_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&update_metadata_) -
      reinterpret_cast<char*>(&guild_id_)) + sizeof(update_metadata_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateGuildInformationRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 guild_id = 1 [jstype = JS_STRING];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string new_guild_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_new_guild_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.chat.v1.UpdateGuildInformationRequest.new_guild_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool update_guild_name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          update_guild_name_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string new_guild_picture = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_new_guild_picture();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.chat.v1.UpdateGuildInformationRequest.new_guild_picture"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool update_guild_picture = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          update_guild_picture_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .protocol.harmonytypes.v1.Metadata metadata = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_metadata(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool update_metadata = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          update_metadata_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateGuildInformationRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.chat.v1.UpdateGuildInformationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guild_id = 1 [jstype = JS_STRING];
  if (this->guild_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_guild_id(), target);
  }

  // string new_guild_name = 2;
  if (this->new_guild_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_new_guild_name().data(), static_cast<int>(this->_internal_new_guild_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.chat.v1.UpdateGuildInformationRequest.new_guild_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_new_guild_name(), target);
  }

  // bool update_guild_name = 3;
  if (this->update_guild_name() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_update_guild_name(), target);
  }

  // string new_guild_picture = 4;
  if (this->new_guild_picture().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_new_guild_picture().data(), static_cast<int>(this->_internal_new_guild_picture().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.chat.v1.UpdateGuildInformationRequest.new_guild_picture");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_new_guild_picture(), target);
  }

  // bool update_guild_picture = 5;
  if (this->update_guild_picture() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_update_guild_picture(), target);
  }

  // .protocol.harmonytypes.v1.Metadata metadata = 6;
  if (this->has_metadata()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::metadata(this), target, stream);
  }

  // bool update_metadata = 7;
  if (this->update_metadata() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(7, this->_internal_update_metadata(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.chat.v1.UpdateGuildInformationRequest)
  return target;
}

size_t UpdateGuildInformationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.chat.v1.UpdateGuildInformationRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string new_guild_name = 2;
  if (this->new_guild_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_new_guild_name());
  }

  // string new_guild_picture = 4;
  if (this->new_guild_picture().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_new_guild_picture());
  }

  // .protocol.harmonytypes.v1.Metadata metadata = 6;
  if (this->has_metadata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *metadata_);
  }

  // uint64 guild_id = 1 [jstype = JS_STRING];
  if (this->guild_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_guild_id());
  }

  // bool update_guild_name = 3;
  if (this->update_guild_name() != 0) {
    total_size += 1 + 1;
  }

  // bool update_guild_picture = 5;
  if (this->update_guild_picture() != 0) {
    total_size += 1 + 1;
  }

  // bool update_metadata = 7;
  if (this->update_metadata() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateGuildInformationRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.chat.v1.UpdateGuildInformationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateGuildInformationRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateGuildInformationRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.chat.v1.UpdateGuildInformationRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.chat.v1.UpdateGuildInformationRequest)
    MergeFrom(*source);
  }
}

void UpdateGuildInformationRequest::MergeFrom(const UpdateGuildInformationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.chat.v1.UpdateGuildInformationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.new_guild_name().size() > 0) {
    _internal_set_new_guild_name(from._internal_new_guild_name());
  }
  if (from.new_guild_picture().size() > 0) {
    _internal_set_new_guild_picture(from._internal_new_guild_picture());
  }
  if (from.has_metadata()) {
    _internal_mutable_metadata()->::protocol::harmonytypes::v1::Metadata::MergeFrom(from._internal_metadata());
  }
  if (from.guild_id() != 0) {
    _internal_set_guild_id(from._internal_guild_id());
  }
  if (from.update_guild_name() != 0) {
    _internal_set_update_guild_name(from._internal_update_guild_name());
  }
  if (from.update_guild_picture() != 0) {
    _internal_set_update_guild_picture(from._internal_update_guild_picture());
  }
  if (from.update_metadata() != 0) {
    _internal_set_update_metadata(from._internal_update_metadata());
  }
}

void UpdateGuildInformationRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.chat.v1.UpdateGuildInformationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateGuildInformationRequest::CopyFrom(const UpdateGuildInformationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.chat.v1.UpdateGuildInformationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateGuildInformationRequest::IsInitialized() const {
  return true;
}

void UpdateGuildInformationRequest::InternalSwap(UpdateGuildInformationRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  new_guild_name_.Swap(&other->new_guild_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  new_guild_picture_.Swap(&other->new_guild_picture_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateGuildInformationRequest, update_metadata_)
      + sizeof(UpdateGuildInformationRequest::update_metadata_)
      - PROTOBUF_FIELD_OFFSET(UpdateGuildInformationRequest, metadata_)>(
          reinterpret_cast<char*>(&metadata_),
          reinterpret_cast<char*>(&other->metadata_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateGuildInformationRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteGuildRequest::InitAsDefaultInstance() {
}
class DeleteGuildRequest::_Internal {
 public:
};

DeleteGuildRequest::DeleteGuildRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.chat.v1.DeleteGuildRequest)
}
DeleteGuildRequest::DeleteGuildRequest(const DeleteGuildRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  guild_id_ = from.guild_id_;
  // @@protoc_insertion_point(copy_constructor:protocol.chat.v1.DeleteGuildRequest)
}

void DeleteGuildRequest::SharedCtor() {
  guild_id_ = PROTOBUF_ULONGLONG(0);
}

DeleteGuildRequest::~DeleteGuildRequest() {
  // @@protoc_insertion_point(destructor:protocol.chat.v1.DeleteGuildRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteGuildRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteGuildRequest::ArenaDtor(void* object) {
  DeleteGuildRequest* _this = reinterpret_cast< DeleteGuildRequest* >(object);
  (void)_this;
}
void DeleteGuildRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteGuildRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteGuildRequest& DeleteGuildRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteGuildRequest_chat_2fv1_2fguilds_2eproto.base);
  return *internal_default_instance();
}


void DeleteGuildRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.chat.v1.DeleteGuildRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guild_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteGuildRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 guild_id = 1 [jstype = JS_STRING];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteGuildRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.chat.v1.DeleteGuildRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guild_id = 1 [jstype = JS_STRING];
  if (this->guild_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_guild_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.chat.v1.DeleteGuildRequest)
  return target;
}

size_t DeleteGuildRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.chat.v1.DeleteGuildRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 guild_id = 1 [jstype = JS_STRING];
  if (this->guild_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_guild_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteGuildRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.chat.v1.DeleteGuildRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteGuildRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteGuildRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.chat.v1.DeleteGuildRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.chat.v1.DeleteGuildRequest)
    MergeFrom(*source);
  }
}

void DeleteGuildRequest::MergeFrom(const DeleteGuildRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.chat.v1.DeleteGuildRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.guild_id() != 0) {
    _internal_set_guild_id(from._internal_guild_id());
  }
}

void DeleteGuildRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.chat.v1.DeleteGuildRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteGuildRequest::CopyFrom(const DeleteGuildRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.chat.v1.DeleteGuildRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteGuildRequest::IsInitialized() const {
  return true;
}

void DeleteGuildRequest::InternalSwap(DeleteGuildRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(guild_id_, other->guild_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteGuildRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteInviteRequest::InitAsDefaultInstance() {
}
class DeleteInviteRequest::_Internal {
 public:
};

DeleteInviteRequest::DeleteInviteRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.chat.v1.DeleteInviteRequest)
}
DeleteInviteRequest::DeleteInviteRequest(const DeleteInviteRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  invite_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_invite_id().empty()) {
    invite_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_invite_id(),
      GetArena());
  }
  guild_id_ = from.guild_id_;
  // @@protoc_insertion_point(copy_constructor:protocol.chat.v1.DeleteInviteRequest)
}

void DeleteInviteRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteInviteRequest_chat_2fv1_2fguilds_2eproto.base);
  invite_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  guild_id_ = PROTOBUF_ULONGLONG(0);
}

DeleteInviteRequest::~DeleteInviteRequest() {
  // @@protoc_insertion_point(destructor:protocol.chat.v1.DeleteInviteRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteInviteRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  invite_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteInviteRequest::ArenaDtor(void* object) {
  DeleteInviteRequest* _this = reinterpret_cast< DeleteInviteRequest* >(object);
  (void)_this;
}
void DeleteInviteRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteInviteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteInviteRequest& DeleteInviteRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteInviteRequest_chat_2fv1_2fguilds_2eproto.base);
  return *internal_default_instance();
}


void DeleteInviteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.chat.v1.DeleteInviteRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  invite_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  guild_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteInviteRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 guild_id = 1 [jstype = JS_STRING];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string invite_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_invite_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.chat.v1.DeleteInviteRequest.invite_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteInviteRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.chat.v1.DeleteInviteRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guild_id = 1 [jstype = JS_STRING];
  if (this->guild_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_guild_id(), target);
  }

  // string invite_id = 2;
  if (this->invite_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_invite_id().data(), static_cast<int>(this->_internal_invite_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.chat.v1.DeleteInviteRequest.invite_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_invite_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.chat.v1.DeleteInviteRequest)
  return target;
}

size_t DeleteInviteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.chat.v1.DeleteInviteRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string invite_id = 2;
  if (this->invite_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_invite_id());
  }

  // uint64 guild_id = 1 [jstype = JS_STRING];
  if (this->guild_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_guild_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteInviteRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.chat.v1.DeleteInviteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteInviteRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteInviteRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.chat.v1.DeleteInviteRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.chat.v1.DeleteInviteRequest)
    MergeFrom(*source);
  }
}

void DeleteInviteRequest::MergeFrom(const DeleteInviteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.chat.v1.DeleteInviteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.invite_id().size() > 0) {
    _internal_set_invite_id(from._internal_invite_id());
  }
  if (from.guild_id() != 0) {
    _internal_set_guild_id(from._internal_guild_id());
  }
}

void DeleteInviteRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.chat.v1.DeleteInviteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteInviteRequest::CopyFrom(const DeleteInviteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.chat.v1.DeleteInviteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteInviteRequest::IsInitialized() const {
  return true;
}

void DeleteInviteRequest::InternalSwap(DeleteInviteRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  invite_id_.Swap(&other->invite_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(guild_id_, other->guild_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteInviteRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void JoinGuildRequest::InitAsDefaultInstance() {
}
class JoinGuildRequest::_Internal {
 public:
};

JoinGuildRequest::JoinGuildRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.chat.v1.JoinGuildRequest)
}
JoinGuildRequest::JoinGuildRequest(const JoinGuildRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  invite_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_invite_id().empty()) {
    invite_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_invite_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:protocol.chat.v1.JoinGuildRequest)
}

void JoinGuildRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_JoinGuildRequest_chat_2fv1_2fguilds_2eproto.base);
  invite_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

JoinGuildRequest::~JoinGuildRequest() {
  // @@protoc_insertion_point(destructor:protocol.chat.v1.JoinGuildRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void JoinGuildRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  invite_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void JoinGuildRequest::ArenaDtor(void* object) {
  JoinGuildRequest* _this = reinterpret_cast< JoinGuildRequest* >(object);
  (void)_this;
}
void JoinGuildRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void JoinGuildRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const JoinGuildRequest& JoinGuildRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_JoinGuildRequest_chat_2fv1_2fguilds_2eproto.base);
  return *internal_default_instance();
}


void JoinGuildRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.chat.v1.JoinGuildRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  invite_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JoinGuildRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string invite_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_invite_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.chat.v1.JoinGuildRequest.invite_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* JoinGuildRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.chat.v1.JoinGuildRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string invite_id = 1;
  if (this->invite_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_invite_id().data(), static_cast<int>(this->_internal_invite_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.chat.v1.JoinGuildRequest.invite_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_invite_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.chat.v1.JoinGuildRequest)
  return target;
}

size_t JoinGuildRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.chat.v1.JoinGuildRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string invite_id = 1;
  if (this->invite_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_invite_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JoinGuildRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.chat.v1.JoinGuildRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const JoinGuildRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<JoinGuildRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.chat.v1.JoinGuildRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.chat.v1.JoinGuildRequest)
    MergeFrom(*source);
  }
}

void JoinGuildRequest::MergeFrom(const JoinGuildRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.chat.v1.JoinGuildRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.invite_id().size() > 0) {
    _internal_set_invite_id(from._internal_invite_id());
  }
}

void JoinGuildRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.chat.v1.JoinGuildRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JoinGuildRequest::CopyFrom(const JoinGuildRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.chat.v1.JoinGuildRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JoinGuildRequest::IsInitialized() const {
  return true;
}

void JoinGuildRequest::InternalSwap(JoinGuildRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  invite_id_.Swap(&other->invite_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata JoinGuildRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void JoinGuildResponse::InitAsDefaultInstance() {
}
class JoinGuildResponse::_Internal {
 public:
};

JoinGuildResponse::JoinGuildResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.chat.v1.JoinGuildResponse)
}
JoinGuildResponse::JoinGuildResponse(const JoinGuildResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  guild_id_ = from.guild_id_;
  // @@protoc_insertion_point(copy_constructor:protocol.chat.v1.JoinGuildResponse)
}

void JoinGuildResponse::SharedCtor() {
  guild_id_ = PROTOBUF_ULONGLONG(0);
}

JoinGuildResponse::~JoinGuildResponse() {
  // @@protoc_insertion_point(destructor:protocol.chat.v1.JoinGuildResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void JoinGuildResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void JoinGuildResponse::ArenaDtor(void* object) {
  JoinGuildResponse* _this = reinterpret_cast< JoinGuildResponse* >(object);
  (void)_this;
}
void JoinGuildResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void JoinGuildResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const JoinGuildResponse& JoinGuildResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_JoinGuildResponse_chat_2fv1_2fguilds_2eproto.base);
  return *internal_default_instance();
}


void JoinGuildResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.chat.v1.JoinGuildResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guild_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JoinGuildResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 guild_id = 1 [jstype = JS_STRING];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* JoinGuildResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.chat.v1.JoinGuildResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guild_id = 1 [jstype = JS_STRING];
  if (this->guild_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_guild_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.chat.v1.JoinGuildResponse)
  return target;
}

size_t JoinGuildResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.chat.v1.JoinGuildResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 guild_id = 1 [jstype = JS_STRING];
  if (this->guild_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_guild_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JoinGuildResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.chat.v1.JoinGuildResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const JoinGuildResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<JoinGuildResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.chat.v1.JoinGuildResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.chat.v1.JoinGuildResponse)
    MergeFrom(*source);
  }
}

void JoinGuildResponse::MergeFrom(const JoinGuildResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.chat.v1.JoinGuildResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.guild_id() != 0) {
    _internal_set_guild_id(from._internal_guild_id());
  }
}

void JoinGuildResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.chat.v1.JoinGuildResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JoinGuildResponse::CopyFrom(const JoinGuildResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.chat.v1.JoinGuildResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JoinGuildResponse::IsInitialized() const {
  return true;
}

void JoinGuildResponse::InternalSwap(JoinGuildResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(guild_id_, other->guild_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata JoinGuildResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PreviewGuildRequest::InitAsDefaultInstance() {
}
class PreviewGuildRequest::_Internal {
 public:
};

PreviewGuildRequest::PreviewGuildRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.chat.v1.PreviewGuildRequest)
}
PreviewGuildRequest::PreviewGuildRequest(const PreviewGuildRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  invite_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_invite_id().empty()) {
    invite_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_invite_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:protocol.chat.v1.PreviewGuildRequest)
}

void PreviewGuildRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PreviewGuildRequest_chat_2fv1_2fguilds_2eproto.base);
  invite_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PreviewGuildRequest::~PreviewGuildRequest() {
  // @@protoc_insertion_point(destructor:protocol.chat.v1.PreviewGuildRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PreviewGuildRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  invite_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PreviewGuildRequest::ArenaDtor(void* object) {
  PreviewGuildRequest* _this = reinterpret_cast< PreviewGuildRequest* >(object);
  (void)_this;
}
void PreviewGuildRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PreviewGuildRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PreviewGuildRequest& PreviewGuildRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PreviewGuildRequest_chat_2fv1_2fguilds_2eproto.base);
  return *internal_default_instance();
}


void PreviewGuildRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.chat.v1.PreviewGuildRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  invite_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PreviewGuildRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string invite_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_invite_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.chat.v1.PreviewGuildRequest.invite_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PreviewGuildRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.chat.v1.PreviewGuildRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string invite_id = 1;
  if (this->invite_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_invite_id().data(), static_cast<int>(this->_internal_invite_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.chat.v1.PreviewGuildRequest.invite_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_invite_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.chat.v1.PreviewGuildRequest)
  return target;
}

size_t PreviewGuildRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.chat.v1.PreviewGuildRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string invite_id = 1;
  if (this->invite_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_invite_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PreviewGuildRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.chat.v1.PreviewGuildRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PreviewGuildRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PreviewGuildRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.chat.v1.PreviewGuildRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.chat.v1.PreviewGuildRequest)
    MergeFrom(*source);
  }
}

void PreviewGuildRequest::MergeFrom(const PreviewGuildRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.chat.v1.PreviewGuildRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.invite_id().size() > 0) {
    _internal_set_invite_id(from._internal_invite_id());
  }
}

void PreviewGuildRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.chat.v1.PreviewGuildRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PreviewGuildRequest::CopyFrom(const PreviewGuildRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.chat.v1.PreviewGuildRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PreviewGuildRequest::IsInitialized() const {
  return true;
}

void PreviewGuildRequest::InternalSwap(PreviewGuildRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  invite_id_.Swap(&other->invite_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata PreviewGuildRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PreviewGuildResponse::InitAsDefaultInstance() {
}
class PreviewGuildResponse::_Internal {
 public:
};

PreviewGuildResponse::PreviewGuildResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.chat.v1.PreviewGuildResponse)
}
PreviewGuildResponse::PreviewGuildResponse(const PreviewGuildResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  avatar_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_avatar().empty()) {
    avatar_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_avatar(),
      GetArena());
  }
  member_count_ = from.member_count_;
  // @@protoc_insertion_point(copy_constructor:protocol.chat.v1.PreviewGuildResponse)
}

void PreviewGuildResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PreviewGuildResponse_chat_2fv1_2fguilds_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  avatar_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  member_count_ = PROTOBUF_ULONGLONG(0);
}

PreviewGuildResponse::~PreviewGuildResponse() {
  // @@protoc_insertion_point(destructor:protocol.chat.v1.PreviewGuildResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PreviewGuildResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  avatar_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PreviewGuildResponse::ArenaDtor(void* object) {
  PreviewGuildResponse* _this = reinterpret_cast< PreviewGuildResponse* >(object);
  (void)_this;
}
void PreviewGuildResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PreviewGuildResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PreviewGuildResponse& PreviewGuildResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PreviewGuildResponse_chat_2fv1_2fguilds_2eproto.base);
  return *internal_default_instance();
}


void PreviewGuildResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.chat.v1.PreviewGuildResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  avatar_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  member_count_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PreviewGuildResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.chat.v1.PreviewGuildResponse.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string avatar = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_avatar();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.chat.v1.PreviewGuildResponse.avatar"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 member_count = 3 [jstype = JS_STRING];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          member_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PreviewGuildResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.chat.v1.PreviewGuildResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.chat.v1.PreviewGuildResponse.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string avatar = 2;
  if (this->avatar().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_avatar().data(), static_cast<int>(this->_internal_avatar().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.chat.v1.PreviewGuildResponse.avatar");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_avatar(), target);
  }

  // uint64 member_count = 3 [jstype = JS_STRING];
  if (this->member_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_member_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.chat.v1.PreviewGuildResponse)
  return target;
}

size_t PreviewGuildResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.chat.v1.PreviewGuildResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string avatar = 2;
  if (this->avatar().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_avatar());
  }

  // uint64 member_count = 3 [jstype = JS_STRING];
  if (this->member_count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_member_count());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PreviewGuildResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.chat.v1.PreviewGuildResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PreviewGuildResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PreviewGuildResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.chat.v1.PreviewGuildResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.chat.v1.PreviewGuildResponse)
    MergeFrom(*source);
  }
}

void PreviewGuildResponse::MergeFrom(const PreviewGuildResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.chat.v1.PreviewGuildResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.avatar().size() > 0) {
    _internal_set_avatar(from._internal_avatar());
  }
  if (from.member_count() != 0) {
    _internal_set_member_count(from._internal_member_count());
  }
}

void PreviewGuildResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.chat.v1.PreviewGuildResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PreviewGuildResponse::CopyFrom(const PreviewGuildResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.chat.v1.PreviewGuildResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PreviewGuildResponse::IsInitialized() const {
  return true;
}

void PreviewGuildResponse::InternalSwap(PreviewGuildResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  avatar_.Swap(&other->avatar_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(member_count_, other->member_count_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PreviewGuildResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LeaveGuildRequest::InitAsDefaultInstance() {
}
class LeaveGuildRequest::_Internal {
 public:
};

LeaveGuildRequest::LeaveGuildRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.chat.v1.LeaveGuildRequest)
}
LeaveGuildRequest::LeaveGuildRequest(const LeaveGuildRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  guild_id_ = from.guild_id_;
  // @@protoc_insertion_point(copy_constructor:protocol.chat.v1.LeaveGuildRequest)
}

void LeaveGuildRequest::SharedCtor() {
  guild_id_ = PROTOBUF_ULONGLONG(0);
}

LeaveGuildRequest::~LeaveGuildRequest() {
  // @@protoc_insertion_point(destructor:protocol.chat.v1.LeaveGuildRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LeaveGuildRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void LeaveGuildRequest::ArenaDtor(void* object) {
  LeaveGuildRequest* _this = reinterpret_cast< LeaveGuildRequest* >(object);
  (void)_this;
}
void LeaveGuildRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LeaveGuildRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LeaveGuildRequest& LeaveGuildRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LeaveGuildRequest_chat_2fv1_2fguilds_2eproto.base);
  return *internal_default_instance();
}


void LeaveGuildRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.chat.v1.LeaveGuildRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guild_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LeaveGuildRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 guild_id = 1 [jstype = JS_STRING];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LeaveGuildRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.chat.v1.LeaveGuildRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guild_id = 1 [jstype = JS_STRING];
  if (this->guild_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_guild_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.chat.v1.LeaveGuildRequest)
  return target;
}

size_t LeaveGuildRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.chat.v1.LeaveGuildRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 guild_id = 1 [jstype = JS_STRING];
  if (this->guild_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_guild_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LeaveGuildRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.chat.v1.LeaveGuildRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LeaveGuildRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LeaveGuildRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.chat.v1.LeaveGuildRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.chat.v1.LeaveGuildRequest)
    MergeFrom(*source);
  }
}

void LeaveGuildRequest::MergeFrom(const LeaveGuildRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.chat.v1.LeaveGuildRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.guild_id() != 0) {
    _internal_set_guild_id(from._internal_guild_id());
  }
}

void LeaveGuildRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.chat.v1.LeaveGuildRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LeaveGuildRequest::CopyFrom(const LeaveGuildRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.chat.v1.LeaveGuildRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeaveGuildRequest::IsInitialized() const {
  return true;
}

void LeaveGuildRequest::InternalSwap(LeaveGuildRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(guild_id_, other->guild_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LeaveGuildRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddGuildToGuildListRequest::InitAsDefaultInstance() {
}
class AddGuildToGuildListRequest::_Internal {
 public:
};

AddGuildToGuildListRequest::AddGuildToGuildListRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.chat.v1.AddGuildToGuildListRequest)
}
AddGuildToGuildListRequest::AddGuildToGuildListRequest(const AddGuildToGuildListRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  homeserver_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_homeserver().empty()) {
    homeserver_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_homeserver(),
      GetArena());
  }
  guild_id_ = from.guild_id_;
  // @@protoc_insertion_point(copy_constructor:protocol.chat.v1.AddGuildToGuildListRequest)
}

void AddGuildToGuildListRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddGuildToGuildListRequest_chat_2fv1_2fguilds_2eproto.base);
  homeserver_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  guild_id_ = PROTOBUF_ULONGLONG(0);
}

AddGuildToGuildListRequest::~AddGuildToGuildListRequest() {
  // @@protoc_insertion_point(destructor:protocol.chat.v1.AddGuildToGuildListRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddGuildToGuildListRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  homeserver_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddGuildToGuildListRequest::ArenaDtor(void* object) {
  AddGuildToGuildListRequest* _this = reinterpret_cast< AddGuildToGuildListRequest* >(object);
  (void)_this;
}
void AddGuildToGuildListRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddGuildToGuildListRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddGuildToGuildListRequest& AddGuildToGuildListRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddGuildToGuildListRequest_chat_2fv1_2fguilds_2eproto.base);
  return *internal_default_instance();
}


void AddGuildToGuildListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.chat.v1.AddGuildToGuildListRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  homeserver_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  guild_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddGuildToGuildListRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 guild_id = 1 [jstype = JS_STRING];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string homeserver = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_homeserver();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.chat.v1.AddGuildToGuildListRequest.homeserver"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddGuildToGuildListRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.chat.v1.AddGuildToGuildListRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guild_id = 1 [jstype = JS_STRING];
  if (this->guild_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_guild_id(), target);
  }

  // string homeserver = 2;
  if (this->homeserver().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_homeserver().data(), static_cast<int>(this->_internal_homeserver().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.chat.v1.AddGuildToGuildListRequest.homeserver");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_homeserver(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.chat.v1.AddGuildToGuildListRequest)
  return target;
}

size_t AddGuildToGuildListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.chat.v1.AddGuildToGuildListRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string homeserver = 2;
  if (this->homeserver().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_homeserver());
  }

  // uint64 guild_id = 1 [jstype = JS_STRING];
  if (this->guild_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_guild_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddGuildToGuildListRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.chat.v1.AddGuildToGuildListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AddGuildToGuildListRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddGuildToGuildListRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.chat.v1.AddGuildToGuildListRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.chat.v1.AddGuildToGuildListRequest)
    MergeFrom(*source);
  }
}

void AddGuildToGuildListRequest::MergeFrom(const AddGuildToGuildListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.chat.v1.AddGuildToGuildListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.homeserver().size() > 0) {
    _internal_set_homeserver(from._internal_homeserver());
  }
  if (from.guild_id() != 0) {
    _internal_set_guild_id(from._internal_guild_id());
  }
}

void AddGuildToGuildListRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.chat.v1.AddGuildToGuildListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddGuildToGuildListRequest::CopyFrom(const AddGuildToGuildListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.chat.v1.AddGuildToGuildListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddGuildToGuildListRequest::IsInitialized() const {
  return true;
}

void AddGuildToGuildListRequest::InternalSwap(AddGuildToGuildListRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  homeserver_.Swap(&other->homeserver_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(guild_id_, other->guild_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddGuildToGuildListRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddGuildToGuildListResponse::InitAsDefaultInstance() {
}
class AddGuildToGuildListResponse::_Internal {
 public:
};

AddGuildToGuildListResponse::AddGuildToGuildListResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.chat.v1.AddGuildToGuildListResponse)
}
AddGuildToGuildListResponse::AddGuildToGuildListResponse(const AddGuildToGuildListResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protocol.chat.v1.AddGuildToGuildListResponse)
}

void AddGuildToGuildListResponse::SharedCtor() {
}

AddGuildToGuildListResponse::~AddGuildToGuildListResponse() {
  // @@protoc_insertion_point(destructor:protocol.chat.v1.AddGuildToGuildListResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddGuildToGuildListResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AddGuildToGuildListResponse::ArenaDtor(void* object) {
  AddGuildToGuildListResponse* _this = reinterpret_cast< AddGuildToGuildListResponse* >(object);
  (void)_this;
}
void AddGuildToGuildListResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddGuildToGuildListResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddGuildToGuildListResponse& AddGuildToGuildListResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddGuildToGuildListResponse_chat_2fv1_2fguilds_2eproto.base);
  return *internal_default_instance();
}


void AddGuildToGuildListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.chat.v1.AddGuildToGuildListResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddGuildToGuildListResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddGuildToGuildListResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.chat.v1.AddGuildToGuildListResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.chat.v1.AddGuildToGuildListResponse)
  return target;
}

size_t AddGuildToGuildListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.chat.v1.AddGuildToGuildListResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddGuildToGuildListResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.chat.v1.AddGuildToGuildListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AddGuildToGuildListResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddGuildToGuildListResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.chat.v1.AddGuildToGuildListResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.chat.v1.AddGuildToGuildListResponse)
    MergeFrom(*source);
  }
}

void AddGuildToGuildListResponse::MergeFrom(const AddGuildToGuildListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.chat.v1.AddGuildToGuildListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void AddGuildToGuildListResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.chat.v1.AddGuildToGuildListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddGuildToGuildListResponse::CopyFrom(const AddGuildToGuildListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.chat.v1.AddGuildToGuildListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddGuildToGuildListResponse::IsInitialized() const {
  return true;
}

void AddGuildToGuildListResponse::InternalSwap(AddGuildToGuildListResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddGuildToGuildListResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveGuildFromGuildListRequest::InitAsDefaultInstance() {
}
class RemoveGuildFromGuildListRequest::_Internal {
 public:
};

RemoveGuildFromGuildListRequest::RemoveGuildFromGuildListRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.chat.v1.RemoveGuildFromGuildListRequest)
}
RemoveGuildFromGuildListRequest::RemoveGuildFromGuildListRequest(const RemoveGuildFromGuildListRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  homeserver_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_homeserver().empty()) {
    homeserver_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_homeserver(),
      GetArena());
  }
  guild_id_ = from.guild_id_;
  // @@protoc_insertion_point(copy_constructor:protocol.chat.v1.RemoveGuildFromGuildListRequest)
}

void RemoveGuildFromGuildListRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RemoveGuildFromGuildListRequest_chat_2fv1_2fguilds_2eproto.base);
  homeserver_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  guild_id_ = PROTOBUF_ULONGLONG(0);
}

RemoveGuildFromGuildListRequest::~RemoveGuildFromGuildListRequest() {
  // @@protoc_insertion_point(destructor:protocol.chat.v1.RemoveGuildFromGuildListRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveGuildFromGuildListRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  homeserver_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RemoveGuildFromGuildListRequest::ArenaDtor(void* object) {
  RemoveGuildFromGuildListRequest* _this = reinterpret_cast< RemoveGuildFromGuildListRequest* >(object);
  (void)_this;
}
void RemoveGuildFromGuildListRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveGuildFromGuildListRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveGuildFromGuildListRequest& RemoveGuildFromGuildListRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveGuildFromGuildListRequest_chat_2fv1_2fguilds_2eproto.base);
  return *internal_default_instance();
}


void RemoveGuildFromGuildListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.chat.v1.RemoveGuildFromGuildListRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  homeserver_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  guild_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveGuildFromGuildListRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 guild_id = 1 [jstype = JS_STRING];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string homeserver = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_homeserver();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.chat.v1.RemoveGuildFromGuildListRequest.homeserver"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveGuildFromGuildListRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.chat.v1.RemoveGuildFromGuildListRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guild_id = 1 [jstype = JS_STRING];
  if (this->guild_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_guild_id(), target);
  }

  // string homeserver = 2;
  if (this->homeserver().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_homeserver().data(), static_cast<int>(this->_internal_homeserver().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.chat.v1.RemoveGuildFromGuildListRequest.homeserver");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_homeserver(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.chat.v1.RemoveGuildFromGuildListRequest)
  return target;
}

size_t RemoveGuildFromGuildListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.chat.v1.RemoveGuildFromGuildListRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string homeserver = 2;
  if (this->homeserver().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_homeserver());
  }

  // uint64 guild_id = 1 [jstype = JS_STRING];
  if (this->guild_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_guild_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveGuildFromGuildListRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.chat.v1.RemoveGuildFromGuildListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveGuildFromGuildListRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveGuildFromGuildListRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.chat.v1.RemoveGuildFromGuildListRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.chat.v1.RemoveGuildFromGuildListRequest)
    MergeFrom(*source);
  }
}

void RemoveGuildFromGuildListRequest::MergeFrom(const RemoveGuildFromGuildListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.chat.v1.RemoveGuildFromGuildListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.homeserver().size() > 0) {
    _internal_set_homeserver(from._internal_homeserver());
  }
  if (from.guild_id() != 0) {
    _internal_set_guild_id(from._internal_guild_id());
  }
}

void RemoveGuildFromGuildListRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.chat.v1.RemoveGuildFromGuildListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveGuildFromGuildListRequest::CopyFrom(const RemoveGuildFromGuildListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.chat.v1.RemoveGuildFromGuildListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveGuildFromGuildListRequest::IsInitialized() const {
  return true;
}

void RemoveGuildFromGuildListRequest::InternalSwap(RemoveGuildFromGuildListRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  homeserver_.Swap(&other->homeserver_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(guild_id_, other->guild_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveGuildFromGuildListRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveGuildFromGuildListResponse::InitAsDefaultInstance() {
}
class RemoveGuildFromGuildListResponse::_Internal {
 public:
};

RemoveGuildFromGuildListResponse::RemoveGuildFromGuildListResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.chat.v1.RemoveGuildFromGuildListResponse)
}
RemoveGuildFromGuildListResponse::RemoveGuildFromGuildListResponse(const RemoveGuildFromGuildListResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protocol.chat.v1.RemoveGuildFromGuildListResponse)
}

void RemoveGuildFromGuildListResponse::SharedCtor() {
}

RemoveGuildFromGuildListResponse::~RemoveGuildFromGuildListResponse() {
  // @@protoc_insertion_point(destructor:protocol.chat.v1.RemoveGuildFromGuildListResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveGuildFromGuildListResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemoveGuildFromGuildListResponse::ArenaDtor(void* object) {
  RemoveGuildFromGuildListResponse* _this = reinterpret_cast< RemoveGuildFromGuildListResponse* >(object);
  (void)_this;
}
void RemoveGuildFromGuildListResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveGuildFromGuildListResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveGuildFromGuildListResponse& RemoveGuildFromGuildListResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveGuildFromGuildListResponse_chat_2fv1_2fguilds_2eproto.base);
  return *internal_default_instance();
}


void RemoveGuildFromGuildListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.chat.v1.RemoveGuildFromGuildListResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveGuildFromGuildListResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveGuildFromGuildListResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.chat.v1.RemoveGuildFromGuildListResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.chat.v1.RemoveGuildFromGuildListResponse)
  return target;
}

size_t RemoveGuildFromGuildListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.chat.v1.RemoveGuildFromGuildListResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveGuildFromGuildListResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.chat.v1.RemoveGuildFromGuildListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveGuildFromGuildListResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveGuildFromGuildListResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.chat.v1.RemoveGuildFromGuildListResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.chat.v1.RemoveGuildFromGuildListResponse)
    MergeFrom(*source);
  }
}

void RemoveGuildFromGuildListResponse::MergeFrom(const RemoveGuildFromGuildListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.chat.v1.RemoveGuildFromGuildListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RemoveGuildFromGuildListResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.chat.v1.RemoveGuildFromGuildListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveGuildFromGuildListResponse::CopyFrom(const RemoveGuildFromGuildListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.chat.v1.RemoveGuildFromGuildListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveGuildFromGuildListResponse::IsInitialized() const {
  return true;
}

void RemoveGuildFromGuildListResponse::InternalSwap(RemoveGuildFromGuildListResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveGuildFromGuildListResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace chat
}  // namespace protocol
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::protocol::chat::v1::CreateGuildRequest* Arena::CreateMaybeMessage< ::protocol::chat::v1::CreateGuildRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::chat::v1::CreateGuildRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::chat::v1::CreateGuildResponse* Arena::CreateMaybeMessage< ::protocol::chat::v1::CreateGuildResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::chat::v1::CreateGuildResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::chat::v1::CreateInviteRequest* Arena::CreateMaybeMessage< ::protocol::chat::v1::CreateInviteRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::chat::v1::CreateInviteRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::chat::v1::CreateInviteResponse* Arena::CreateMaybeMessage< ::protocol::chat::v1::CreateInviteResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::chat::v1::CreateInviteResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::chat::v1::GetGuildListRequest* Arena::CreateMaybeMessage< ::protocol::chat::v1::GetGuildListRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::chat::v1::GetGuildListRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::chat::v1::GetGuildListResponse_GuildListEntry* Arena::CreateMaybeMessage< ::protocol::chat::v1::GetGuildListResponse_GuildListEntry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::chat::v1::GetGuildListResponse_GuildListEntry >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::chat::v1::GetGuildListResponse* Arena::CreateMaybeMessage< ::protocol::chat::v1::GetGuildListResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::chat::v1::GetGuildListResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::chat::v1::GetGuildRequest* Arena::CreateMaybeMessage< ::protocol::chat::v1::GetGuildRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::chat::v1::GetGuildRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::chat::v1::GetGuildResponse* Arena::CreateMaybeMessage< ::protocol::chat::v1::GetGuildResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::chat::v1::GetGuildResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::chat::v1::GetGuildInvitesRequest* Arena::CreateMaybeMessage< ::protocol::chat::v1::GetGuildInvitesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::chat::v1::GetGuildInvitesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::chat::v1::GetGuildInvitesResponse_Invite* Arena::CreateMaybeMessage< ::protocol::chat::v1::GetGuildInvitesResponse_Invite >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::chat::v1::GetGuildInvitesResponse_Invite >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::chat::v1::GetGuildInvitesResponse* Arena::CreateMaybeMessage< ::protocol::chat::v1::GetGuildInvitesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::chat::v1::GetGuildInvitesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::chat::v1::GetGuildMembersRequest* Arena::CreateMaybeMessage< ::protocol::chat::v1::GetGuildMembersRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::chat::v1::GetGuildMembersRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::chat::v1::GetGuildMembersResponse* Arena::CreateMaybeMessage< ::protocol::chat::v1::GetGuildMembersResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::chat::v1::GetGuildMembersResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::chat::v1::UpdateGuildInformationRequest* Arena::CreateMaybeMessage< ::protocol::chat::v1::UpdateGuildInformationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::chat::v1::UpdateGuildInformationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::chat::v1::DeleteGuildRequest* Arena::CreateMaybeMessage< ::protocol::chat::v1::DeleteGuildRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::chat::v1::DeleteGuildRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::chat::v1::DeleteInviteRequest* Arena::CreateMaybeMessage< ::protocol::chat::v1::DeleteInviteRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::chat::v1::DeleteInviteRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::chat::v1::JoinGuildRequest* Arena::CreateMaybeMessage< ::protocol::chat::v1::JoinGuildRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::chat::v1::JoinGuildRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::chat::v1::JoinGuildResponse* Arena::CreateMaybeMessage< ::protocol::chat::v1::JoinGuildResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::chat::v1::JoinGuildResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::chat::v1::PreviewGuildRequest* Arena::CreateMaybeMessage< ::protocol::chat::v1::PreviewGuildRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::chat::v1::PreviewGuildRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::chat::v1::PreviewGuildResponse* Arena::CreateMaybeMessage< ::protocol::chat::v1::PreviewGuildResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::chat::v1::PreviewGuildResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::chat::v1::LeaveGuildRequest* Arena::CreateMaybeMessage< ::protocol::chat::v1::LeaveGuildRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::chat::v1::LeaveGuildRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::chat::v1::AddGuildToGuildListRequest* Arena::CreateMaybeMessage< ::protocol::chat::v1::AddGuildToGuildListRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::chat::v1::AddGuildToGuildListRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::chat::v1::AddGuildToGuildListResponse* Arena::CreateMaybeMessage< ::protocol::chat::v1::AddGuildToGuildListResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::chat::v1::AddGuildToGuildListResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::chat::v1::RemoveGuildFromGuildListRequest* Arena::CreateMaybeMessage< ::protocol::chat::v1::RemoveGuildFromGuildListRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::chat::v1::RemoveGuildFromGuildListRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::chat::v1::RemoveGuildFromGuildListResponse* Arena::CreateMaybeMessage< ::protocol::chat::v1::RemoveGuildFromGuildListResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::chat::v1::RemoveGuildFromGuildListResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
